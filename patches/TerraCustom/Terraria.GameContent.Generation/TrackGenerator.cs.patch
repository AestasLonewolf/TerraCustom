--- src/tModLoader/Terraria.GameContent.Generation/TrackGenerator.cs
+++ src/TerraCustom/Terraria.GameContent.Generation/TrackGenerator.cs
@@ -41,12 +_,22 @@
 			87,
 			86
 		};
+		public TrackGenerator(GenerationProgress progress)
+		{
+			this.progress = progress;
+		}
+
+		public TrackGenerator()
+		{
+		}
+
+		private GenerationProgress progress;
 		private const int TOTAL_TILE_IGNORES = 150;
 		private const int PLAYER_HEIGHT = 6;
 		private const int MAX_RETRIES = 400;
 		private const int MAX_SMOOTH_DISTANCE = 15;
 		private const int MAX_ITERATIONS = 1000000;
-		private TrackHistory[] _historyCache = new TrackHistory[2048];
+		private TrackHistory[] _historyCache = new TrackHistory[2048 * 2]; // 2048 vanilla.
 
 		public void Generate(int trackCount, int minimumLength) {
 			int num = trackCount;
@@ -59,6 +_,10 @@
 
 					if (FindPath(x, i, minimumLength))
+					{
 						num--;
+						progress.Set(0.5f + .5f * ((trackCount - num) / (float)trackCount));
+						progress.Message = Lang.gen[76] + $"..Minecart Tracks\n\n\n               {trackCount - num} of {trackCount}";
+					}
 				}
 			}
 		}
@@ -128,11 +_,11 @@
 
 			int num3 = 1;
 			int num4 = 0;
-			int num5 = 400;
+			int num5 = MAX_RETRIES;
 			bool flag2 = false;
-			int num6 = 150;
+			int num6 = TOTAL_TILE_IGNORES;
 			int num7 = 0;
-			int num8 = 1000000;
+			int num8 = MAX_ITERATIONS;
 			while (num8 > 0 && flag && num < historyCache.Length - 1) {
 				num8--;
 				historyCache[num] = new TrackHistory(x, y, num3);
@@ -264,8 +_,8 @@
 			return false;
 		}
 
-		public static void Run(int trackCount = 30, int minimumLength = 250) {
+		public static void Run(GenerationProgress progress, int trackCount = 30, int minimumLength = 250) {
-			new TrackGenerator().Generate(trackCount, minimumLength);
+			new TrackGenerator(progress).Generate(trackCount, minimumLength);
 		}
 
 		public static void Run(Point start) {
