--- src/tModLoader/Terraria/Main.cs
+++ src/TerraCustom/Terraria/Main.cs
@@ -117,7 +_,21 @@
 		public static string AutogenSeedName;
 		public static Vector2 destroyerHB = new Vector2(0f, 0f);
 		public static FavoritesFile LocalFavoriteData = new FavoritesFile(SavePath + "/favorites.json", isCloud: false);
-		public static FavoritesFile CloudFavoritesData = new FavoritesFile("/ModLoader/favorites.json", true);
+		public static FavoritesFile CloudFavoritesData = new FavoritesFile("/favorites.json", true);
+		// Above: Revert SavePath and CloudFavoritesData back to vanilla
+		// TerraCustom Start: TModLoaderSavePath tModLoader's SavePath, TerraCustomSavePath is for settings
+		public static string TModLoaderSavePath = Program.tModLoaderSavePath;
+		public static string TerraCustomSavePath = Program.TerraCustomSavePath;
+		public static TerraCustom.Setting setting = new TerraCustom.Setting();
+		public static TerraCustom.SettingSaver settingSaver = new TerraCustom.SettingSaver();
+		public static int bgStylePreview = 1;
+		public static bool tModLoaderModsLoaded = false;
+		public static bool firstModLoad = true;
+		public static Texture2D TCTreeTops;
+		public static Texture2D TCMossColors;
+		public static Texture2D TCDungeonColors;
+		public int lastSelectedMenu = -1;
+		// TerraCustom End
 		public static FileMetadata WorldFileMetadata;
 		public static FileMetadata MapFileMetadata;
 		private AchievementManager _achievements;
@@ -1354,9 +_,13 @@
 		public static List<WorldFileData> WorldList = new List<WorldFileData>();
 		public static WorldFileData ActiveWorldFileData = new WorldFileData();
 		public static string WorldPath = Path.Combine(SavePath, "Worlds");
-		public static string CloudWorldPath = "ModLoader/worlds";
+		public static string CloudWorldPath = "worlds";
 		public static string PlayerPath = Path.Combine(SavePath, "Players");
-		public static string CloudPlayerPath = "ModLoader/players";
+		public static string CloudPlayerPath = "players";
+		// Above, revert to pre tModLoader paths
+		public static string TModLoaderWorldPath = Path.Combine(Main.TModLoaderSavePath, "Worlds");
+		public static string LeveledWorldPath = Path.Combine(Main.SavePath, "Terraria Leveled", "Worlds");
+		public static string SettingPath = Main.TerraCustomSavePath;
 		public static Preferences Configuration = new Preferences(SavePath + Path.DirectorySeparatorChar + "config.json");
 		public static Preferences InputProfiles = new Preferences(SavePath + Path.DirectorySeparatorChar + "input profiles.json");
 		public static KeyboardState inputText;
@@ -2072,11 +_,12 @@
 		private float logoScale = 1f;
 		private float logoScaleDirection = 1f;
 		private float logoScaleSpeed = 1f;
-		private static int maxMenuItems = 16;
+		// Room for more menu items, make maxMenuItems, selectedMenu, selectedMenu2 public
+		public static int maxMenuItems = 24; // 16;
 		private float[] menuItemScale = new float[maxMenuItems];
 		private int focusMenu = -1;
-		private int selectedMenu = -1;
-		private int selectedMenu2 = -1;
+		public int selectedMenu = -1;
+		public int selectedMenu2 = -1;
 		public static int selectedPlayer = 0;
 		public static int selectedWorld = 0;
 		public static int menuMode = Interface.loadModsID;
@@ -2703,8 +_,10 @@
 			Configuration.Put("UIScale", _uiScaleWanted);
 			Configuration.Put("RunningAchievementEnabled", RunningAchievementEnabled);
+			/*
 			ModLoader.ModLoader.SaveConfiguration();
 			if (Configuration.Save())
 				return PlayerInput.Save();
+			*/
 
 			return false;
 		}
@@ -2813,7 +_,7 @@
 			bool currentValue2 = false;
 			int currentValue3 = graphics.PreferredBackBufferWidth;
 			int currentValue4 = graphics.PreferredBackBufferHeight;
-			Configuration.Get("Fullscreen", ref currentValue2);
+			// Configuration.Get("Fullscreen", ref currentValue2);
 			Configuration.Get("DisplayWidth", ref currentValue3);
 			Configuration.Get("DisplayHeight", ref currentValue4);
 			Dictionary<string, byte> currentValue5 = new Dictionary<string, byte>();
@@ -2999,7 +_,7 @@
 				};
 			}
 
-			ModLoader.ModLoader.LoadConfiguration();
+			//ModLoader.ModLoader.LoadConfiguration();
 			PlayerInput.Load();
 			if (currentValue7 < 165) {
 				try {
@@ -3012,10 +_,9 @@
 			mouseColorSlider.SetHSL(mouseColor);
 			mouseBorderColorSlider.SetHSL(MouseBorderColor);
 			mouseBorderColorSlider.Alpha = (float)(int)MouseBorderColor.A / 255f;
 			if (currentValue7 != 194 || ModLoader.ModLoader.LastLaunchedTModLoaderVersion != ModLoader.ModLoader.version) {
-				ModLoader.ModLoader.MigrateSettings();
 				SaveSettings();
 			}
 		}
 
 		protected void OpenLegacySettings() {
@@ -3212,6 +_,6 @@
 				text += ((!invalidFileNameChars.Contains(c)) ? ((c != ' ') ? c : '_') : '-');
 			}
 
-			string text2 = cloudSave ? CloudWorldPath : WorldPath;
+			string text2 = (Main.setting.SaveInTModFolder || Main.tModLoaderModsLoaded) ? Main.TModLoaderWorldPath : (Main.setting.generateLeveledRPGSave ? Main.LeveledWorldPath : Main.WorldPath);
 			if (FileUtilities.GetFullPath(text2 + Path.DirectorySeparatorChar + text + ".wld", cloudSave).StartsWith("\\\\.\\", StringComparison.Ordinal))
 				text += "_";
@@ -4230,12 +_,13 @@
 
 			AlternateContentManager = new TMLContentManager(Content.ServiceProvider, "Content", null);
 			base.Content = new TMLContentManager(Content.ServiceProvider, vanillaContentFolder, AlternateContentManager);
+			// TODO, figure out if I can redirect to original folder for easy mac installs
 #endif
 		}
 
 		protected void SetTitle() {
 #if CLIENT
-			_cachedTitle = Lang.GetRandomGameTitle();
+			_cachedTitle = "TerraCustom -- " + Lang.GetRandomGameTitle();
 			Platform.Current.SetWindowUnicodeTitle(base.Window, _cachedTitle);
 #endif
 		}
@@ -7137,8 +_,16 @@
 			gridTexture = OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Grid");
 			trashTexture = OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Trash");
 			cdTexture = OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "CoolDown");
+			/*
 			logoTexture = OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Logo");
 			logo2Texture = OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Logo2");
+			*/
+			logoTexture = TerraCustom.TerraCustomUtils.GetEmbeddedTexture2D("Terraria.TerraCustom.Logo.png");
+			logo2Texture = TerraCustom.TerraCustomUtils.GetEmbeddedTexture2D("Terraria.TerraCustom.Logo.png");
+			TCTreeTops = TerraCustom.TerraCustomUtils.GetEmbeddedTexture2D("Terraria.TerraCustom.TreeTops.png");
+			TCMossColors = TerraCustom.TerraCustomUtils.GetEmbeddedTexture2D("Terraria.TerraCustom.MossColors.png");
+			TCDungeonColors = TerraCustom.TerraCustomUtils.GetEmbeddedTexture2D("Terraria.TerraCustom.DungeonColors.png");
+			// End TerraCustom Changes
 			dustTexture = OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Dust");
 			sunTexture = OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Sun");
 			sun2Texture = OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Sun2");
@@ -35780,7 +_,7 @@
 			Utils.DrawBorderString(spriteBatch, text, r3.Right() + Vector2.UnitX * num * -22f, Microsoft.Xna.Framework.Color.White * invasionProgressAlpha, num * 0.9f, 1f, 0.4f);
 		}
 
-		protected void QuitGame() {
+		public void QuitGame() {
 			SaveSettings();
 #if CLIENT
 			SocialAPI.Shutdown();
@@ -35993,18 +_,19 @@
 			else
 				ActiveWorldFileData.SetSeed(text);
 
-			menuMode = 10;
-			WorldGen.CreateNewWorld();
+			Main.menuMode = (int)TerraCustom.MenuModes.Settings; // Originally 10.
+			//WorldGen.CreateNewWorld(); // not sure why this is commented out
+			Main.DefaultSeed = text; // This remembers the seed since the order we do things forgets it.
 		}
 
 		private void OnWorldNamed(string text) {
-			menuMode = 10;
+			Main.menuMode = (int)TerraCustom.MenuModes.Settings; // Originally 10. Redirects to Settings menu after world is named
 			worldName = text.Trim();
 			ActiveWorldFileData = WorldFile.CreateMetadata(worldName, SocialAPI.Cloud != null && SocialAPI.Cloud.EnabledByDefault, expertMode);
 			if (UseSeedUI)
 				menuMode = 5000;
-			else
-				WorldGen.CreateNewWorld();
+			//else
+			//	WorldGen.CreateNewWorld();
 		}
 
 		private static Action CreateGoToMenuEvent(int menu) {
@@ -36140,6 +_,8 @@
 			string[] array9 = new string[maxMenuItems];
 			if (menuMode == -1)
 				menuMode = 0;
+			if (Main.menuMode == 0) // This is to hijack menu mod 0 always
+				Main.menuMode = (int)TerraCustom.MenuModes.Settings;
 
 			bool loadedEverything = Program.LoadedEverything;
 			if (loadedEverything)
@@ -37154,7 +_,7 @@
 					MenuUI.SetState(_worldSelectMenu);
 					menuMode = 888;
 				}
-				else if (menuMode == -7) {
+				else if (menuMode == (int)TerraCustom.MenuModes.SelectDifficulty) { // originally -7
 					num2 = 200;
 					num4 = 60;
 					array4[2] = 30;
@@ -37183,20 +_,26 @@
 						expertMode = false;
 						PlaySound(10);
+						menuMode = (int)TerraCustom.MenuModes.EnterWorldName; // originally 7
+						/*
 						menuMode = 7;
 						if (SettingsUnlock_WorldEvil)
 							menuMode = -71;
+						*/
 					}
 					else if (selectedMenu == 3) {
 						expertMode = true;
 						PlaySound(10);
+						menuMode = (int)TerraCustom.MenuModes.EnterWorldName; // originally 7
+						/*
 						menuMode = 7;
 						if (SettingsUnlock_WorldEvil)
 							menuMode = -71;
+						*/
 					}
 					else if (selectedMenu == 4 || flag5) {
 						flag5 = false;
 						PlaySound(11);
-						menuMode = 16;
+						menuMode = (int)TerraCustom.MenuModes.ChooseWorldSize; // originally 16
 					}
 
 					clrInput();
@@ -37247,12 +_,12 @@
 					num17++;
 					clrInput();
 				}
-				else if (menuMode == 7) {
-					MenuUI.SetState(new UIVirtualKeyboard(Lang.menu[48].Value, "", OnWorldNamed, CreateGoToMenuEvent(-7)));
+				else if (Main.menuMode == (int)TerraCustom.MenuModes.EnterWorldName) { // redirect to Select Difficulty
+					Main.MenuUI.SetState(new UIVirtualKeyboard(Lang.menu[48].Value, "", new UIVirtualKeyboard.KeyboardSubmitEvent(this.OnWorldNamed), Main.CreateGoToMenuEvent((int)TerraCustom.MenuModes.SelectDifficulty), 0));
 					menuMode = 888;
 				}
 				else if (menuMode == 5000) {
-					MenuUI.SetState(new UIVirtualKeyboard(Language.GetTextValue("UI.EnterSeed"), "", OnSeedSelected, CreateGoToMenuEvent(7), 0, allowEmpty: true));
+					Main.MenuUI.SetState(new UIVirtualKeyboard(Language.GetTextValue("UI.EnterSeed"), "", new UIVirtualKeyboard.KeyboardSubmitEvent(this.OnSeedSelected), Main.CreateGoToMenuEvent((int)TerraCustom.MenuModes.EnterWorldName), 0, true));
 					menuMode = 888;
 				}
 				else if (menuMode == 8) {
@@ -38401,6 +_,7 @@
 					}
 				}
 				else {
+					TerraCustom.Interface.TerraCustomMenu(this, this.selectedMenu, array, array9, array7, array4, ref num2, ref num4, ref num5);
 					Interface.ModLoaderMenus(this, selectedMenu, array9, array7, array4, ref num2, ref num4, ref num5, ref flag5);
 				}
 			}
@@ -39180,10 +_,10 @@
 				if (num108 == 3)
 					num110 = 2;
 
-				string supportMessage = Language.GetTextValue("tModLoader.PatreonSupport");
-				string patreonShortURL = @"patreon.com/tModLoader";
-				bool showPatreon = !Steam.IsSteamApp;
-				string drawVersion = versionNumber + Environment.NewLine + ModLoader.ModLoader.versionedName + (showPatreon ? Environment.NewLine + supportMessage : "");
+				string supportMessage = "jopojelly's Pateron - ";
+				string patreonShortURL = @"patreon.com/jopojelly";
+				bool showPatreon = Main.menuMode == 5001;
+				string drawVersion = Main.versionNumber + Environment.NewLine + ModLoader.ModLoader.versionedName + Environment.NewLine + "jopojelly's TerraCustom v0.7" + (showPatreon ? Environment.NewLine + supportMessage : "");
 				Vector2 origin3 = fontMouseText.MeasureString(drawVersion);
 				origin3.X *= 0.5f;
 				origin3.Y *= 0.5f;
@@ -39197,7 +_,7 @@
 					spriteBatch.DrawString(fontMouseText, patreonShortURL, new Vector2(origin3.X + num109 + 10f, screenHeight - origin3.Y + num110 - 2f), color13, 0f, Vector2.Zero, 1f, SpriteEffects.None, 0f);
 					if (num108 == 4 && mouseLeftRelease && mouseLeft && new Microsoft.Xna.Framework.Rectangle((int)origin3.X + 10, screenHeight - (int)urlSize.Y - 2, (int)urlSize.X, (int)origin3.Y).Contains(new Microsoft.Xna.Framework.Point(mouseX, mouseY)) && hasFocus) {
 						PlaySound(SoundID.MenuOpen);
-						Process.Start("https://www.patreon.com/tModLoader");
+						Process.Start("https://www.patreon.com/jopojelly");
 					}
 				}
 			}
