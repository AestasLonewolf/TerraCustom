--- src/tModLoader\Terraria\Main.cs
+++ src/TerraCustom\Terraria\Main.cs
@@ -54,6 +_,7 @@
 using Terraria.UI.Gamepad;
 using Terraria.Utilities;
 using Terraria.World.Generation;
+using Terraria.TerraCustom;
 
 #if SERVER
 using Terraria.Server;
@@ -147,12 +_,21 @@
 		public static int curRelease = 177;
 		public static string versionNumber = "v1.3.3.3";
 		public static string versionNumber2 = "v1.3.3.3";
+		// TerraCustom Start
+ 		public static Setting setting = new Setting();
+ 		public static SettingSaver settingSaver = new SettingSaver();
+ 		public static int bgStylePreview = 1;
+ 		public static bool tModLoaderModsLoaded = false;
+ 		public static bool firstModLoad = true;
+ 		// TerraCustom End
 		public static string SavePath = Program.LaunchParameters.ContainsKey("-savedirectory") ? Program.LaunchParameters["-savedirectory"] : PlatformUtilties.GetStoragePath();
+ 		public static string TModLoaderSavePath = Path.Combine(Program.LaunchParameters.ContainsKey("-savedirectory") ? Program.LaunchParameters["-savedirectory"] : PlatformUtilties.GetStoragePath(), "ModLoader");
+ 		public static string TerraCustomSavePath = Path.Combine(Program.LaunchParameters.ContainsKey("-savedirectory") ? Program.LaunchParameters["-savedirectory"] : PlatformUtilties.GetStoragePath(), "TerraCustom");
 		public static bool AnnouncementBoxDisabled = false;
 		public static int AnnouncementBoxRange = -1;
 		public static Vector2 destroyerHB = new Vector2(0f, 0f);
 		public static FavoritesFile LocalFavoriteData = new FavoritesFile(Main.SavePath + "/favorites.json", false);
-		public static FavoritesFile CloudFavoritesData = new FavoritesFile("/ModLoader/favorites.json", true);
+		public static FavoritesFile CloudFavoritesData = new FavoritesFile("/favorites.json", true);
 		public static FileMetadata WorldFileMetadata;
 		public static FileMetadata MapFileMetadata;
 		private AchievementManager _achievements;
@@ -358,7 +_,7 @@
 		public static int[] desertBG = new int[2];
 		public static int oceanBG;
 		public static int[] treeX = new int[4];
-		public static int[] treeStyle = new int[4];
+		public static int[] treeStyle = new int[] { 6, 6, 6, 6 };
 		public static int[] caveBackX = new int[4];
 		public static int[] caveBackStyle = new int[4];
 		public static int iceBackStyle;
@@ -601,6 +_,7 @@
 		public static bool serverStarting = false;
 		public static float leftWorld = 0f;
 		public static float rightWorld = 134400f;
+		// TODO changes here? *2   == 8400 * 16
 		public static float topWorld = 0f;
 		public static float bottomWorld = 38400f;
 		public static int maxTilesX = (int)Main.rightWorld / 16 + 1;
@@ -1145,6 +_,7 @@
 		public static bool tilesLoaded = false;
 		public static WorldMap Map = new WorldMap(Main.maxTilesX, Main.maxTilesY);
 		public static Tile[,] tile = new Tile[Main.maxTilesX, Main.maxTilesY];
+		// Adjust
 		public static Dust[] dust = new Dust[6001];
 		public static Star[] star = new Star[130];
 		public static Item[] item = new Item[401];
@@ -1299,9 +_,12 @@
 		public static List<WorldFileData> WorldList = new List<WorldFileData>();
 		public static WorldFileData ActiveWorldFileData = new WorldFileData();
 		public static string WorldPath = Main.SavePath + Path.DirectorySeparatorChar + "Worlds";
-		public static string CloudWorldPath = "ModLoader/worlds";
+		public static string CloudWorldPath = "worlds";
+		public static string TModLoaderWorldPath = Main.TModLoaderSavePath + Path.DirectorySeparatorChar + "Worlds";
+		public static string LeveledWorldPath = Main.SavePath.Substring(0, Main.SavePath.Length - 8) + "Terraria Leveled" + Path.DirectorySeparatorChar + "Worlds";
 		public static string PlayerPath = Main.SavePath + Path.DirectorySeparatorChar + "Players";
-		public static string CloudPlayerPath = "ModLoader/players";
+		public static string CloudPlayerPath = "players";
+		public static string SettingPath = Main.TerraCustomSavePath;
 		public static Preferences Configuration = new Preferences(Main.SavePath + Path.DirectorySeparatorChar + "config.json", false, false);
 		public static Preferences InputProfiles = new Preferences(Main.SavePath + Path.DirectorySeparatorChar + "input profiles.json", false, false);
 		public static string[] itemName = new string[3797];
@@ -1982,14 +_,14 @@
 		private float logoScale = 1f;
 		private float logoScaleDirection = 1f;
 		private float logoScaleSpeed = 1f;
-		private static int maxMenuItems = 16;
+		public static int maxMenuItems = 24;//16;
 		private float[] menuItemScale = new float[Main.maxMenuItems];
 		private int focusMenu = -1;
-		private int selectedMenu = -1;
-		private int selectedMenu2 = -1;
+		public int selectedMenu = -1;
+		public int selectedMenu2 = -1;
 		public static int selectedPlayer = 0;
 		public static int selectedWorld = 0;
-		public static int menuMode = Interface.loadModsID;
+		public static int menuMode = ModLoader.Interface.loadModsID;//(int)TerraCustom.MenuModes.ChooseWorldSize;//0;
 		public static int menuSkip = 0;
 		private static Item cpItem = new Item();
 		public int textBlinkerCount;
@@ -2063,6 +_,12 @@
 		internal float scAdj;
 		private float cTop;
 
+		public static Texture2D TCTreeTops;
+		public static Texture2D TCMossColors;
+		public static Texture2D TCDungeonColors;
+
+		public int lastSelectedMenu = -1;
+
 		public static event Action OnEngineLoad;
 		public static event Action OnTick;
 
@@ -2287,11 +_,13 @@
 				Main.anglerQuest = Main.rand.Next(Main.anglerQuestItemNetIDs.Length);
 				int num = Main.anglerQuestItemNetIDs[Main.anglerQuest];
 				//patch file: num, flag2
-				if (num == 2454 && (!Main.hardMode || WorldGen.crimson))
+				//if (num == 2454 && (!Main.hardMode || WorldGen.crimson))
+				if (num == 2454 && (!Main.hardMode || WorldGen.crimson || Main.setting.IsCorruption == 2 || Main.setting.IsCorruption != 4))
 				{
 					flag2 = true;
 				}
-				if (num == 2457 && WorldGen.crimson)
+				//if (num == 2457 && WorldGen.crimson)
+				if (num == 2457 && (WorldGen.crimson || Main.setting.IsCorruption == 2 || Main.setting.IsCorruption != 4))
 				{
 					flag2 = true;
 				}
@@ -2299,7 +_,8 @@
 				{
 					flag2 = true;
 				}
-				if (num == 2463 && (!Main.hardMode || !WorldGen.crimson))
+				//if (num == 2463 && (!Main.hardMode || !WorldGen.crimson))
+				if (num == 2463 && (!Main.hardMode || !WorldGen.crimson || Main.setting.IsCorruption == 2 || Main.setting.IsCorruption != 4))
 				{
 					flag2 = true;
 				}
@@ -2319,7 +_,8 @@
 				{
 					flag2 = true;
 				}
-				if (num == 2477 && !WorldGen.crimson)
+				//if (num == 2477 && !WorldGen.crimson)
+				if (num == 2477 && (!WorldGen.crimson || Main.setting.IsCorruption == 2 || Main.setting.IsCorruption != 4))
 				{
 					flag2 = true;
 				}
@@ -2335,7 +_,8 @@
 				{
 					flag2 = true;
 				}
-				if (num == 2485 && WorldGen.crimson)
+				//if (num == 2485 && WorldGen.crimson)
+				if (num == 2485 && (WorldGen.crimson || Main.setting.IsCorruption == 2 || Main.setting.IsCorruption != 4))
 				{
 					flag2 = true;
 				}
@@ -2366,6 +_,7 @@
 					Main.WorldList.Add(WorldFileData.FromInvalidWorld(files[i], false));
 				}
 			}
+			/*
 			if (SocialAPI.Cloud != null)
 			{
 				List<string> files2 = SocialAPI.Cloud.GetFiles(Regex.Escape(Main.CloudWorldPath) + "/.+\\.wld");
@@ -2382,6 +_,7 @@
 					}
 				}
 			}
+			*/
 			Main.WorldList.Sort(new Comparison<WorldFileData>(Main.WorldListSortMethod));
 		}
 
@@ -2404,6 +_,7 @@
 					Main.PlayerList.Add(fileData);
 				}
 			}
+			/*
 			if (SocialAPI.Cloud != null)
 			{
 				List<string> files2 = SocialAPI.Cloud.GetFiles(Regex.Escape(Main.CloudPlayerPath) + "/.+\\.plr");
@@ -2416,6 +_,7 @@
 					}
 				}
 			}
+			*/
 			Main.PlayerList.Sort(new Comparison<PlayerFileData>(Main.PlayerListSortMethod));
 		}
 
@@ -2558,7 +_,7 @@
 					}
 				});
 			Main.Configuration.Put("QuickLaunch", Main.SkipAssemblyLoad);
-			ModLoader.ModLoader.SaveConfiguration();
+			//ModLoader.ModLoader.SaveConfiguration();
 			bool flag = Main.Configuration.Save(true);
 			return flag && PlayerInput.Save();
 		}
@@ -2657,7 +_,7 @@
 			bool fullscreen = false;
 			int preferredBackBufferWidth = Main.graphics.PreferredBackBufferWidth;
 			int preferredBackBufferHeight = Main.graphics.PreferredBackBufferHeight;
-			Main.Configuration.Get<bool>("Fullscreen", ref fullscreen);
+			//Main.Configuration.Get<bool>("Fullscreen", ref fullscreen);
 			Main.Configuration.Get<int>("DisplayWidth", ref preferredBackBufferWidth);
 			Main.Configuration.Get<int>("DisplayHeight", ref preferredBackBufferHeight);
 			Dictionary<string, byte> dictionary = new Dictionary<string, byte>();
@@ -2857,7 +_,7 @@
 					Main.cMapAlphaDown
 				};
 			}
-			ModLoader.ModLoader.LoadConfiguration();
+			//ModLoader.ModLoader.LoadConfiguration();
 			PlayerInput.Load();
 			if (num2 < 165)
 			{
@@ -3059,11 +_,11 @@
 					File.Delete(Main.WorldList[i].Path + ".bak");
 #endif
 				}
-				else if (SocialAPI.Cloud != null)
-				{
-					SocialAPI.Cloud.Delete(Main.WorldList[i].Path);
-				}
-				WorldIO.EraseWorld(Main.WorldList[i].Path, Main.WorldList[i].IsCloudSave);
+				//else if (SocialAPI.Cloud != null)
+				//{
+				//	SocialAPI.Cloud.Delete(Main.WorldList[i].Path);
+				//}
+                WorldIO.EraseWorld(Main.WorldList[i].Path, Main.WorldList[i].IsCloudSave);
 				Main.LoadWorlds();
 			}
 			catch
@@ -3157,7 +_,8 @@
 				}
 				text += str;
 			}
-			string text3 = cloudSave ? Main.CloudWorldPath : Main.WorldPath;
+			//string text3 = cloudSave ? Main.CloudWorldPath : (Main.setting.SaveInTModFolder ? Main.TModLoaderWorldPath : Main.WorldPath);
+			string text3 = (Main.setting.SaveInTModFolder || Main.tModLoaderModsLoaded) ? Main.TModLoaderWorldPath : (Main.setting.generateLeveledRPGSave ? Main.LeveledWorldPath : Main.WorldPath);
 			string path = string.Concat(new object[]
 				{
 					text3,
@@ -3492,7 +_,7 @@
 			}
 			else
 			{
-				Console.Title = "Terraria Server " + Main.versionNumber2 + " - " + ModLoader.ModLoader.versionedName;
+				Console.Title = "Terraria Server " + Main.versionNumber2;
 			}
 			Main.dedServ = true;
 			Main.showSplash = false;
@@ -3510,7 +_,7 @@
 				while (flag)
 				{
 					Main.LoadWorlds();
-					Console.WriteLine("Terraria Server " + Main.versionNumber2 + " - " + ModLoader.ModLoader.versionedName);
+					Console.WriteLine("Terraria Server " + Main.versionNumber2);
 					Console.WriteLine("");
 					for (int i = 0; i < Main.WorldList.Count; i++)
 					{
@@ -3762,7 +_,7 @@
 					}
 					else if (text2 == "m" || text2 == "M")
 					{
-						Interface.ServerModMenu();
+						ModLoader.Interface.ServerModMenu();
 						continue;
 					}
 					else
@@ -3961,7 +_,7 @@
 					if (target < now) //can't catch up, reset target
 					{
 						target = now + delta;
-					}
+				}
 					Thread.Sleep(Math.Max((int)remaining, 0));
 				}
 			}
@@ -4140,7 +_,7 @@
 					{
 						WorldFile.saveWorld();
 						Netplay.disconnect = true;
-						SocialAPI.Shutdown();
+						//SocialAPI.Shutdown();
 					}
 					else if (text == "fps")
 					{
@@ -4414,12 +_,23 @@
 			Main.graphics = new GraphicsDeviceManager((Game)this);
 			base.Content.RootDirectory = "Content";
 #endif
+			// Terraria.app/Contents/MacOS/Terraria.exe
+			// Terraria.app/Contents/MacOS/Content/
+#if MAC
+			//base.Content.RootDirectory = ".."+ Path.DirectorySeparatorChar +
+			//	".." + Path.DirectorySeparatorChar +
+			//	".." + Path.DirectorySeparatorChar +
+			//	"Terraria.app" +Path.DirectorySeparatorChar +
+			//	"Contents" + Path.DirectorySeparatorChar +
+			//	"MacOS" +Path.DirectorySeparatorChar +
+			//	"Content";
+#endif
 		}
 
 		protected void SetTitle()
 		{
 #if CLIENT
-			Main._cachedTitle = Lang.title();
+			Main._cachedTitle = "TerraCustom -- " + Lang.title();
 			base.Window.Title = Main._cachedTitle;
 #endif
 		}
@@ -7751,8 +_,13 @@
 			Main.gridTexture = this.OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Grid");
 			Main.trashTexture = this.OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Trash");
 			Main.cdTexture = this.OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "CoolDown");
-			Main.logoTexture = this.OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Logo");
-			Main.logo2Texture = this.OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Logo2");
+			//Main.logoTexture = this.OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Logo");
+			//Main.logo2Texture = this.OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Logo2");
+			Main.logoTexture = TerraCustomUtils.GetEmbeddedTexture2D("Terraria.TerraCustom.Logo.png");
+			Main.logo2Texture = TerraCustomUtils.GetEmbeddedTexture2D("Terraria.TerraCustom.Logo.png");
+			Main.TCTreeTops = TerraCustomUtils.GetEmbeddedTexture2D("Terraria.TerraCustom.TreeTops.png");
+			Main.TCMossColors = TerraCustomUtils.GetEmbeddedTexture2D("Terraria.TerraCustom.MossColors.png");
+			Main.TCDungeonColors = TerraCustomUtils.GetEmbeddedTexture2D("Terraria.TerraCustom.DungeonColors.png");
 			Main.dustTexture = this.OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Dust");
 			Main.sunTexture = this.OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Sun");
 			Main.sun2Texture = this.OurLoad<Texture2D>("Images" + Path.DirectorySeparatorChar + "Sun2");
@@ -19588,21 +_,26 @@
 								{
 									break;
 								}
+								// 19 total: 6 grass, 1 mush, 1 crim, 1 corrup,
+								//TileID.Grass -- 0, 6,7,8,9,10,
 								if (Main.tile[num300, num324].type == 2)
 								{
 									num319 = Main.GetTreeStyle(num300);
 									break;
 								}
+								// corrup -- 1
 								if (Main.tile[num300, num324].type == 23)
 								{
 									num319 = 1;
 									break;
 								}
+								//TileID.MushroomGrass -- 14
 								if (Main.tile[num300, num324].type == 70)
 								{
 									num319 = 14;
 									break;
 								}
+								// Jungle -- 2,11,13
 								if (Main.tile[num300, num324].type == 60)
 								{
 									num319 = 2;
@@ -19619,6 +_,7 @@
 									num322 = 48;
 									break;
 								}
+								// Snow -- 4,12,16,17,18
 								if (Main.tile[num300, num324].type == 147)
 								{
 									num319 = 4;
@@ -19655,6 +_,7 @@
 										break;
 									}
 								}
+								// Hallow == 5,3
 								else
 								{
 									if (Main.tile[num300, num324].type == 199)
@@ -40533,11 +_,11 @@
 			Utils.DrawBorderString(Main.spriteBatch, text, r3.Right() + Vector2.UnitX * num * -8f, Microsoft.Xna.Framework.Color.White * Main.invasionProgressAlpha, num * 0.9f, 1f, 0.4f, -1);
 		}
 
-		protected void QuitGame()
+		public void QuitGame()
 		{
 			Main.SaveSettings();
 #if CLIENT
-			SocialAPI.Shutdown();
+			//SocialAPI.Shutdown();
 #endif
 			base.Exit();
 #if MAC
@@ -40777,10 +_,10 @@
 
 		private void OnWorldNamed(string text)
 		{
-			Main.menuMode = 10;
+			Main.menuMode = (int)MenuModes.Settings/*10*/;
 			Main.worldName = text.Trim();
 			Main.ActiveWorldFileData = WorldFile.CreateMetadata(Main.worldName, SocialAPI.Cloud != null && SocialAPI.Cloud.EnabledByDefault, Main.expertMode);
-			WorldGen.CreateNewWorld(null);
+			//WorldGen.CreateNewWorld(null);
 		}
 
 		private static Action CreateGoToMenuEvent(int menu)
@@ -40911,9 +_,9 @@
 				}
 			}
 			int num2 = 250;
-			int num3 = Main.screenWidth / 2;
+			int num3 = Main.screenWidth / 2; // screenHorizontalCenter
 			int num4 = 80;
-			int num5 = 0;
+			int num5 = 0; // numberClickableLabels
 			int num6 = Main.menuMode;
 			int num7 = 0;
 			int num8 = 0;
@@ -40927,7 +_,7 @@
 			int[] array4 = new int[Main.maxMenuItems];
 			int[] array5 = new int[Main.maxMenuItems];
 			byte[] array6 = new byte[Main.maxMenuItems];
-			float[] array7 = new float[Main.maxMenuItems];
+			float[] array7 = new float[Main.maxMenuItems]; // clickableLabelScale
 			bool[] array8 = new bool[Main.maxMenuItems];
 			bool flag4 = false;
 			bool flag5 = UILinkPointNavigator.Shortcuts.BackButtonInUse && !UILinkPointNavigator.Shortcuts.BackButtonLock;
@@ -40939,10 +_,14 @@
 				array5[j] = 0;
 				array7[j] = 1f;
 			}
-			string[] array9 = new string[Main.maxMenuItems];
+			string[] array9 = new string[Main.maxMenuItems]; // clickableLabelText
 			if (Main.menuMode == -1)
 			{
 				Main.menuMode = 0;
+			}
+			if (Main.menuMode == 0)
+			{
+				Main.menuMode = (int)TerraCustom.MenuModes.Settings;
 			}
 			bool loadedEverything = Program.LoadedEverything;
 			if (loadedEverything)
@@ -41221,10 +_,10 @@
 						Main.PlaySound(11, -1, -1, 1);
 						Main.menuMode = 0;
 						Main.netMode = 0;
-						if (SocialAPI.Network != null)
-						{
-							SocialAPI.Network.CancelJoin();
-						}
+						//if (SocialAPI.Network != null)
+						//{
+						//    SocialAPI.Network.CancelJoin();
+						//}
 					}
 				}
 				else if (Main.menuMode == 30)
@@ -41485,7 +_,7 @@
 						Main.PlaySound(11, -1, -1, 1);
 						if (WorldIO.customDataFail == null)
 						{
-							Main.menuMode = 0;
+						Main.menuMode = 0;
 						}
 						else
 						{
@@ -41643,7 +_,7 @@
 						Main.menuMode = 888;
 					}
 					num10++;
-					Interface.AddMenuButtons(this, this.selectedMenu, array9, array7, ref num2, ref num4, ref num10, ref num5);
+					ModLoader.Interface.AddMenuButtons(this, this.selectedMenu, array9, array7, ref num2, ref num4, ref num10, ref num5);
 					array9[num10] = Lang.menu[14];
 					if (this.selectedMenu == num10)
 					{
@@ -42122,7 +_,7 @@
 						Main.MenuUI.SetState(Main._worldSelectMenu);
 						Main.menuMode = 888;
 					}
-					else if (Main.menuMode == -7)
+					else if (Main.menuMode == (int)MenuModes.SelectDifficulty /*-7*/)
 					{
 						num2 = 200;
 						num4 = 60;
@@ -42154,27 +_,36 @@
 						{
 							Main.expertMode = false;
 							Main.PlaySound(10, -1, -1, 1);
+							Main.menuMode = (int)MenuModes.EnterWorldName;
+							/*
 							Main.menuMode = 7;
 							if (Main.SettingsUnlock_WorldEvil)
 							{
 								Main.menuMode = -71;
 							}
+							*/
 						}
 						else if (this.selectedMenu == 3)
 						{
 							Main.expertMode = true;
 							Main.PlaySound(10, -1, -1, 1);
+							Main.menuMode = (int)MenuModes.EnterWorldName;
+							/*
 							Main.menuMode = 7;
 							if (Main.SettingsUnlock_WorldEvil)
 							{
 								Main.menuMode = -71;
 							}
+							*/
 						}
 						else if (this.selectedMenu == 4 || flag5)
 						{
 							flag5 = false;
 							Main.PlaySound(11, -1, -1, 1);
+							Main.menuMode = (int)MenuModes.ChooseWorldSize;
+							/*
 							Main.menuMode = 16;
+							*/
 						}
 						Main.clrInput();
 					}
@@ -42225,9 +_,9 @@
 						num15++;
 						Main.clrInput();
 					}
-					else if (Main.menuMode == 7)
-					{
-						Main.MenuUI.SetState(new UIVirtualKeyboard(Lang.menu[48], "", new UIVirtualKeyboard.KeyboardSubmitEvent(this.OnWorldNamed), Main.CreateGoToMenuEvent(-7), 0));
+					else if (Main.menuMode == (int)MenuModes.EnterWorldName /*7*/)
+					{
+						Main.MenuUI.SetState(new UIVirtualKeyboard(Lang.menu[48], "", new UIVirtualKeyboard.KeyboardSubmitEvent(this.OnWorldNamed), Main.CreateGoToMenuEvent((int)MenuModes.SelectDifficulty /*-7*/), 0));
 						Main.menuMode = 888;
 					}
 					else if (Main.menuMode == 8)
@@ -43497,7 +_,8 @@
 					}
 					else
 					{
-						Interface.ModLoaderMenus(this, this.selectedMenu, array9, array7, array4, ref num2, ref num4, ref num5);
+						TerraCustom.Interface.TerraCustomMenu(this, this.selectedMenu, array, array9, array7, array4, ref num2, ref num4, ref num5);
+						ModLoader.Interface.ModLoaderMenus(this, this.selectedMenu, array9, array7, array4, ref num2, ref num4, ref num5);
 					}
 				}
 			}
@@ -44362,7 +_,7 @@
 				{
 					num108 = 2;
 				}
-				string drawVersion = Main.versionNumber + Environment.NewLine + ModLoader.ModLoader.versionedName;
+				string drawVersion = Main.versionNumber + Environment.NewLine + ModLoader.ModLoader.versionedName + Environment.NewLine + "jopojelly's TerraCustom v0.3.6";
 				Vector2 origin3 = Main.fontMouseText.MeasureString(drawVersion);
 				origin3.X *= 0.5f;
 				origin3.Y *= 0.5f;

