--- src/Terraria\Terraria\Main.cs
+++ src/TerraCustom\Terraria\Main.cs
@@ -15,6 +_,7 @@
 using System.Drawing;
 #endif
 using System.IO;
+using System.Reflection;
 
 #if !WINDOWS
 using System.Runtime.CompilerServices;
@@ -44,11 +_,13 @@
 using Terraria.Map;
 using Terraria.Net;
 using Terraria.ObjectData;
-using Terraria.Social;
+
+//using Terraria.Social;
 using Terraria.UI;
 using Terraria.UI.Chat;
 using Terraria.Utilities;
 using Terraria.World.Generation;
+using Terraria.TerraCustom;
 
 #if SERVER
 using Terraria.Server;
@@ -132,8 +_,13 @@
 		public bool unityMouseOver;
 		public static Main instance;
 		public static int curRelease = 156;
-		public static string versionNumber = "v1.3.0.8";
-		public static string versionNumber2 = "v1.3.0.8";
+		public static string versionNumber = "jopojelly's TerraCustom v0.2.2";
+		public static string versionNumber2 = "jopojelly's TerraCustom v0.2.2";
+		// TerraCustom Start
+		public static Setting setting = new Setting();
+		public static SettingSaver settingSaver = new SettingSaver();
+		public static int bgStylePreview = 1;
+		// TerraCustom End
 		public static string SavePath = Program.LaunchParameters.ContainsKey("-savedirectory") ? Program.LaunchParameters["-savedirectory"] : PlatformUtilties.GetStoragePath();
 		public static Vector2 destroyerHB = new Vector2(0f, 0f);
 		public static FavoritesFile LocalFavoriteData = new FavoritesFile(Main.SavePath + "/favorites.json", false);
@@ -340,7 +_,7 @@
 		public static int[] desertBG = new int[2];
 		public static int oceanBG;
 		public static int[] treeX = new int[4];
-		public static int[] treeStyle = new int[4];
+		public static int[] treeStyle = new int[] { 6, 6, 6, 6 };
 		public static int[] caveBackX = new int[4];
 		public static int[] caveBackStyle = new int[4];
 		public static int iceBackStyle;
@@ -580,6 +_,7 @@
 		public static bool serverStarting = false;
 		public static float leftWorld = 0f;
 		public static float rightWorld = 134400f;
+		// TODO changes here? *2   == 8400 * 16
 		public static float topWorld = 0f;
 		public static float bottomWorld = 38400f;
 		public static int maxTilesX = (int)Main.rightWorld / 16 + 1;
@@ -1108,6 +_,7 @@
 		public static bool tilesLoaded = false;
 		public static WorldMap Map = new WorldMap(Main.maxTilesX, Main.maxTilesY);
 		public static Tile[,] tile = new Tile[Main.maxTilesX, Main.maxTilesY];
+		// Adjust
 		public static Dust[] dust = new Dust[6001];
 		public static Star[] star = new Star[130];
 		public static Item[] item = new Item[401];
@@ -1170,7 +_,7 @@
 		public static bool recFastScroll = false;
 		public static bool recBigList = false;
 		public static int recStart = 0;
-		public static Recipe[] recipe = new Recipe[Recipe.maxRecipes];
+		//		public static Recipe[] recipe = new Recipe[Recipe.maxRecipes];
 		public static int[] availableRecipe = new int[Recipe.maxRecipes];
 		public static float[] availableRecipeY = new float[Recipe.maxRecipes];
 		public static int numAvailableRecipes;
@@ -1260,10 +_,13 @@
 		public static List<WorldFileData> WorldList = new List<WorldFileData>();
 		public static WorldFileData ActiveWorldFileData = new WorldFileData();
 		public static string WorldPath = Main.SavePath + Path.DirectorySeparatorChar + "Worlds";
+		public static string TModLoaderWorldPath = Main.SavePath + Path.DirectorySeparatorChar + "ModLoader" + Path.DirectorySeparatorChar + "Worlds";
+		public static string LeveledWorldPath = Main.SavePath.Substring(0, Main.SavePath.Length - 8) + "Terraria Leveled" + Path.DirectorySeparatorChar + "Worlds";
 		public static string CloudWorldPath = "worlds";
 		public static string PlayerPath = Main.SavePath + Path.DirectorySeparatorChar + "Players";
 		public static string CloudPlayerPath = "players";
 		public static Preferences Configuration = new Preferences(Main.SavePath + Path.DirectorySeparatorChar + "config.json", false, false);
+		public static string SettingPath = Main.SavePath + Path.DirectorySeparatorChar + "TerraCustom";
 		public static string[] itemName = new string[3602];
 		public static string[] npcName = new string[540];
 		private static KeyboardState inputText;
@@ -1914,11 +_,12 @@
 		private float logoScale = 1f;
 		private float logoScaleDirection = 1f;
 		private float logoScaleSpeed = 1f;
-		private static int maxMenuItems = 16;
+		public static int maxMenuItems = 24;
+//16;
 		private float[] menuItemScale = new float[Main.maxMenuItems];
 		private int focusMenu = -1;
-		private int selectedMenu = -1;
-		private int selectedMenu2 = -1;
+		public int selectedMenu = -1;
+		public int selectedMenu2 = -1;
 		public static int selectedPlayer = 0;
 		public static int selectedWorld = 0;
 		public static int menuMode = 0;
@@ -1981,6 +_,12 @@
 		private float scAdj;
 		private float cTop;
 
+		public static Texture2D TCTreeTops;
+		public static Texture2D TCMossColors;
+		public static Texture2D TCDungeonColors;
+
+		public int lastSelectedMenu = -1;
+
 		public static event Action OnEngineLoad;
 		public static event Action OnTick;
 
@@ -2144,11 +_,13 @@
 				flag = false;
 				Main.anglerQuest = Main.rand.Next(Main.anglerQuestItemNetIDs.Length);
 				int num = Main.anglerQuestItemNetIDs[Main.anglerQuest];
-				if (num == 2454 && (!Main.hardMode || WorldGen.crimson))
+				//if (num == 2454 && (!Main.hardMode || WorldGen.crimson))
+				if (num == 2454 && (!Main.hardMode || WorldGen.crimson || Main.setting.IsCorruption == 2 || Main.setting.IsCorruption != 4))
 				{
 					flag = true;
 				}
-				if (num == 2457 && WorldGen.crimson)
+				//if (num == 2457 && WorldGen.crimson)
+				if (num == 2457 && (WorldGen.crimson || Main.setting.IsCorruption == 2 || Main.setting.IsCorruption != 4))
 				{
 					flag = true;
 				}
@@ -2156,7 +_,8 @@
 				{
 					flag = true;
 				}
-				if (num == 2463 && (!Main.hardMode || !WorldGen.crimson))
+				//if (num == 2463 && (!Main.hardMode || !WorldGen.crimson))
+				if (num == 2463 && (!Main.hardMode || !WorldGen.crimson || Main.setting.IsCorruption == 2 || Main.setting.IsCorruption != 4))
 				{
 					flag = true;
 				}
@@ -2176,7 +_,8 @@
 				{
 					flag = true;
 				}
-				if (num == 2477 && !WorldGen.crimson)
+				//if (num == 2477 && !WorldGen.crimson)
+				if (num == 2477 && (!WorldGen.crimson || Main.setting.IsCorruption == 2 || Main.setting.IsCorruption != 4))
 				{
 					flag = true;
 				}
@@ -2192,7 +_,8 @@
 				{
 					flag = true;
 				}
-				if (num == 2485 && WorldGen.crimson)
+				//if (num == 2485 && WorldGen.crimson)
+				if (num == 2485 && (WorldGen.crimson || Main.setting.IsCorruption == 2 || Main.setting.IsCorruption != 4))
 				{
 					flag = true;
 				}
@@ -2218,6 +_,7 @@
 					Main.WorldList.Add(WorldFileData.FromInvalidWorld(files[i], false));
 				}
 			}
+			/*
 			if (SocialAPI.Cloud != null)
 			{
 				List<string> files2 = SocialAPI.Cloud.GetFiles(Regex.Escape(Main.CloudWorldPath) + "/.+\\.wld");
@@ -2234,6 +_,7 @@
 					}
 				}
 			}
+			*/
 			Main.WorldList.Sort(new Comparison<WorldFileData>(Main.WorldListSortMethod));
 		}
 
@@ -2256,6 +_,7 @@
 					Main.PlayerList.Add(fileData);
 				}
 			}
+			/*
 			if (SocialAPI.Cloud != null)
 			{
 				List<string> files2 = SocialAPI.Cloud.GetFiles(Regex.Escape(Main.CloudPlayerPath) + "/.+\\.plr");
@@ -2268,6 +_,7 @@
 					}
 				}
 			}
+			*/
 			Main.PlayerList.Sort(new Comparison<PlayerFileData>(Main.PlayerListSortMethod));
 		}
 
@@ -2367,7 +_,7 @@
 			Main.Configuration.Put("KeyMapAlphaUp", Main.cMapAlphaUp);
 			Main.Configuration.Put("KeyMapAlphaDown", Main.cMapAlphaDown);
 			Main.Configuration.Put("KeyFavoriteModifier", Main.cFavoriteKey);
-			Main.Configuration.Put("Fullscreen", Main.graphics.IsFullScreen);
+			//Main.Configuration.Put("Fullscreen", Main.graphics.IsFullScreen);
 			Main.Configuration.Put("WindowMaximized", Main.screenMaximized);
 			Main.Configuration.Put("DisplayWidth", Main.graphics.PreferredBackBufferWidth);
 			Main.Configuration.Put("DisplayHeight", Main.graphics.PreferredBackBufferHeight);
@@ -2486,7 +_,7 @@
 			bool fullscreen = false;
 			int preferredBackBufferWidth = Main.graphics.PreferredBackBufferWidth;
 			int preferredBackBufferHeight = Main.graphics.PreferredBackBufferHeight;
-			Main.Configuration.Get<bool>("Fullscreen", ref fullscreen);
+			//Main.Configuration.Get<bool>("Fullscreen", ref fullscreen);
 			Main.Configuration.Get<int>("DisplayWidth", ref preferredBackBufferWidth);
 			Main.Configuration.Get<int>("DisplayHeight", ref preferredBackBufferHeight);
 			Main.mouseColor.R = Main.Configuration.Get<byte>("MouseColorR", Main.mouseColor.R);
@@ -2698,10 +_,10 @@
 					File.Delete(Main.WorldList[i].Path + ".bak");
 #endif
 				}
-				else if (SocialAPI.Cloud != null)
-				{
-					SocialAPI.Cloud.Delete(Main.WorldList[i].Path);
-				}
+				//else if (SocialAPI.Cloud != null)
+				//{
+				//	SocialAPI.Cloud.Delete(Main.WorldList[i].Path);
+				//}
 				Main.LoadWorlds();
 			}
 			catch
@@ -2795,7 +_,8 @@
 				}
 				text += str;
 			}
-			string text3 = cloudSave ? Main.CloudWorldPath : Main.WorldPath;
+			//string text3 = cloudSave ? Main.CloudWorldPath : (Main.setting.SaveInTModFolder ? Main.TModLoaderWorldPath : Main.WorldPath);
+			string text3 = Main.setting.SaveInTModFolder ? Main.TModLoaderWorldPath : (Main.setting.generateLeveledRPGSave ? Main.LeveledWorldPath : Main.WorldPath);
 			string path = string.Concat(new object[]
 				{
 					text3,
@@ -3111,6 +_,7 @@
 
 		public void DedServ()
 		{
+			/*
 			Main.rand = new Random();
 			if (Main.autoShutdown)
 			{
@@ -3153,20 +_,20 @@
 					for (int j = 0; j < Main.WorldList.Count; j++)
 					{
 						Console.WriteLine(string.Concat(new object[]
-								{
-									j + 1,
-									'\t',
-									'\t',
-									Main.WorldList[j].Name
-								}));
+						{
+							j + 1,
+							'\t',
+							'\t',
+							Main.WorldList[j].Name
+						}));
 					}
 					Console.WriteLine(string.Concat(new object[]
-							{
-								"n",
-								'\t',
-								'\t',
-								"New World"
-							}));
+					{
+						"n",
+						'\t',
+						'\t',
+						"New World"
+					}));
 					Console.WriteLine("d <number>" + '\t' + "Delete World");
 					Console.WriteLine("");
 					Console.Write("Choose World: ");
@@ -3561,6 +_,7 @@
 				}
 				Thread.Sleep(0);
 			}
+			*/
 		}
 
 		public static void startDedInput()
@@ -3720,7 +_,7 @@
 					{
 						WorldFile.saveWorld();
 						Netplay.disconnect = true;
-						SocialAPI.Shutdown();
+						//SocialAPI.Shutdown();
 					}
 					else if (text == "fps")
 					{
@@ -3994,6 +_,17 @@
 			Main.graphics = new GraphicsDeviceManager((Game)this);
 			base.Content.RootDirectory = "Content";
 #endif
+			// Terraria.app/Contents/MacOS/Terraria.exe
+			// Terraria.app/Contents/MacOS/Content/
+#if MAC
+			//base.Content.RootDirectory = ".."+ Path.DirectorySeparatorChar +
+			//	".." + Path.DirectorySeparatorChar +
+			//	".." + Path.DirectorySeparatorChar +
+			//	"Terraria.app" +Path.DirectorySeparatorChar +
+			//	"Contents" + Path.DirectorySeparatorChar +
+			//	"MacOS" +Path.DirectorySeparatorChar +
+			//	"Content";
+#endif
 		}
 
 		protected void SetTitle()
@@ -4001,7 +_,7 @@
 #if CLIENT
 			if (Main._cachedTitle == null)
 			{
-				Main._cachedTitle = Lang.title();
+				Main._cachedTitle = "TerraCustom";// Lang.title();
 			}
 			base.Window.Title = Main._cachedTitle;
 #endif
@@ -5165,10 +_,10 @@
 			this.SetTitle();
 			Main.lo = Main.rand.Next(6);
 			Main.critterCage = true;
-			for (int num3 = 0; num3 < 3600; num3++)
-			{
-				Main.CritterCages();
-			}
+			//for (int num3 = 0; num3 < 3600; num3++)
+			//{
+			//	Main.CritterCages();
+			//}
 			Main.critterCage = false;
 			Main.tileBrick[1] = true;
 			Main.tileBrick[54] = true;
@@ -6184,11 +_,11 @@
 			}
 			for (int num12 = 0; num12 < 1001; num12++)
 			{
-				Main.projectile[num12] = new Projectile();
+				//	Main.projectile[num12] = new Projectile();
 			}
 			for (int num13 = 0; num13 < 501; num13++)
 			{
-				Main.gore[num13] = new Gore();
+				//	Main.gore[num13] = new Gore();
 			}
 			for (int num14 = 0; num14 < Main.maxRain + 1; num14++)
 			{
@@ -6207,7 +_,7 @@
 				Main.itemText[num17] = new ItemText();
 			}
 			int num18 = 0;
-			while (num18 < 3602)
+			while (false/*num18 < 3602*/)
 			{
 				Item item = new Item();
 				item.SetDefaults(num18, false);
@@ -6351,10 +_,10 @@
 			Main.InitLifeBytes();
 			for (int num19 = 0; num19 < Recipe.maxRecipes; num19++)
 			{
-				Main.recipe[num19] = new Recipe();
-				Main.availableRecipeY[num19] = (float)(65 * num19);
-			}
-			Recipe.SetupRecipes();
+				//Main.recipe[num19] = new Recipe();
+				//	Main.availableRecipeY[num19] = (float)(65 * num19);
+			}
+			//	Recipe.SetupRecipes();
 			for (int num20 = 0; num20 < Main.numChatLines; num20++)
 			{
 				Main.chatLine[num20] = new ChatLine();
@@ -6384,7 +_,7 @@
 			Main.teamColor[5] = new Microsoft.Xna.Framework.Color(224, 100, 242);
 			if (Main.menuMode == 1)
 			{
-				Main.LoadPlayers();
+				//Main.LoadPlayers();
 			}
 			for (int num24 = 1; num24 < 651; num24++)
 			{
@@ -6428,7 +_,7 @@
 			}
 			Main.clientUUID = Guid.NewGuid().ToString();
 #if CLIENT
-			keyBoardInput.newKeyEvent += delegate(char keyStroke)
+			keyBoardInput.newKeyEvent += delegate (char keyStroke)
 			{
 				if (Main.keyCount < 10)
 				{
@@ -6517,7 +_,9 @@
 				for (int i = 1; i < 40; i++)
 				{
 					Main.music[i] = Main.soundBank.GetCue("Music_" + i);
-				}
+					//  Main.music[6] = Main.soundBank.GetCue("Music_" + 6);
+				}
+				/*
 				Main.soundMech[0] = base.Content.Load<SoundEffect>("Sounds" + Path.DirectorySeparatorChar + "Mech_0");
 				Main.soundInstanceMech[0] = Main.soundMech[0].CreateInstance();
 				Main.soundGrab = base.Content.Load<SoundEffect>("Sounds" + Path.DirectorySeparatorChar + "Grab");
@@ -6557,13 +_,13 @@
 				Main.soundDoorOpen = base.Content.Load<SoundEffect>("Sounds" + Path.DirectorySeparatorChar + "Door_Opened");
 				Main.soundInstanceDoorOpen = Main.soundDoorOpen.CreateInstance();
 				Main.soundDoorClosed = base.Content.Load<SoundEffect>("Sounds" + Path.DirectorySeparatorChar + "Door_Closed");
-				Main.soundInstanceDoorClosed = Main.soundDoorClosed.CreateInstance();
+				Main.soundInstanceDoorClosed = Main.soundDoorClosed.CreateInstance();*/
 				Main.soundMenuTick = base.Content.Load<SoundEffect>("Sounds" + Path.DirectorySeparatorChar + "Menu_Tick");
 				Main.soundInstanceMenuTick = Main.soundMenuTick.CreateInstance();
 				Main.soundMenuOpen = base.Content.Load<SoundEffect>("Sounds" + Path.DirectorySeparatorChar + "Menu_Open");
 				Main.soundInstanceMenuOpen = Main.soundMenuOpen.CreateInstance();
 				Main.soundMenuClose = base.Content.Load<SoundEffect>("Sounds" + Path.DirectorySeparatorChar + "Menu_Close");
-				Main.soundInstanceMenuClose = Main.soundMenuClose.CreateInstance();
+				Main.soundInstanceMenuClose = Main.soundMenuClose.CreateInstance();/*
 				Main.soundShatter = base.Content.Load<SoundEffect>("Sounds" + Path.DirectorySeparatorChar + "Shatter");
 				Main.soundInstanceShatter = Main.soundShatter.CreateInstance();
 				Main.soundCamera = base.Content.Load<SoundEffect>("Sounds" + Path.DirectorySeparatorChar + "Camera");
@@ -6571,36 +_,36 @@
 				for (int j = 0; j < Main.soundCoin.Length; j++)
 				{
 					Main.soundCoin[j] = base.Content.Load<SoundEffect>(string.Concat(new object[]
-							{
-								"Sounds",
-								Path.DirectorySeparatorChar,
-								"Coin_",
-								j
-							}));
+					{
+						"Sounds",
+						Path.DirectorySeparatorChar,
+						"Coin_",
+						j
+					}));
 					Main.soundInstanceCoin[j] = Main.soundCoin[j].CreateInstance();
 				}
 				for (int k = 0; k < Main.soundDrip.Length; k++)
 				{
 					Main.soundDrip[k] = base.Content.Load<SoundEffect>(string.Concat(new object[]
-							{
-								"Sounds",
-								Path.DirectorySeparatorChar,
-								"Drip_",
-								k
-							}));
+					{
+						"Sounds",
+						Path.DirectorySeparatorChar,
+						"Drip_",
+						k
+					}));
 					Main.soundInstanceDrip[k] = Main.soundDrip[k].CreateInstance();
 				}
 				for (int l = 0; l < Main.soundZombie.Length; l++)
 				{
 					Main.soundZombie[l] = base.Content.Load<SoundEffect>(string.Concat(new object[]
-							{
-								"Sounds",
-								Path.DirectorySeparatorChar,
-								"Zombie_",
-								l
-							}));
+					{
+						"Sounds",
+						Path.DirectorySeparatorChar,
+						"Zombie_",
+						l
+					}));
 					Main.soundInstanceZombie[l] = Main.soundZombie[l].CreateInstance();
-				}
+				}*/
 				for (int m = 0; m < Main.soundLiquid.Length; m++)
 				{
 					Main.soundLiquid[m] = base.Content.Load<SoundEffect>(string.Concat(new object[]
@@ -6611,16 +_,16 @@
 								m
 							}));
 					Main.soundInstanceLiquid[m] = Main.soundLiquid[m].CreateInstance();
-				}
+				}/*
 				for (int n = 0; n < Main.soundRoar.Length; n++)
 				{
 					Main.soundRoar[n] = base.Content.Load<SoundEffect>(string.Concat(new object[]
-							{
-								"Sounds",
-								Path.DirectorySeparatorChar,
-								"Roar_",
-								n
-							}));
+					{
+						"Sounds",
+						Path.DirectorySeparatorChar,
+						"Roar_",
+						n
+					}));
 					Main.soundInstanceRoar[n] = Main.soundRoar[n].CreateInstance();
 				}
 				Main.soundSplash[0] = base.Content.Load<SoundEffect>("Sounds" + Path.DirectorySeparatorChar + "Splash_0");
@@ -6642,37 +_,38 @@
 				for (int num = 1; num < 126; num++)
 				{
 					Main.soundItem[num] = base.Content.Load<SoundEffect>(string.Concat(new object[]
-							{
-								"Sounds",
-								Path.DirectorySeparatorChar,
-								"Item_",
-								num
-							}));
+					{
+						"Sounds",
+						Path.DirectorySeparatorChar,
+						"Item_",
+						num
+					}));
 					Main.soundInstanceItem[num] = Main.soundItem[num].CreateInstance();
 				}
 				for (int num2 = 1; num2 < 58; num2++)
 				{
 					Main.soundNPCHit[num2] = base.Content.Load<SoundEffect>(string.Concat(new object[]
-							{
-								"Sounds",
-								Path.DirectorySeparatorChar,
-								"NPC_Hit_",
-								num2
-							}));
+					{
+						"Sounds",
+						Path.DirectorySeparatorChar,
+						"NPC_Hit_",
+						num2
+					}));
 					Main.soundInstanceNPCHit[num2] = Main.soundNPCHit[num2].CreateInstance();
 				}
 				for (int num3 = 1; num3 < 63; num3++)
 				{
 					Main.soundNPCKilled[num3] = base.Content.Load<SoundEffect>(string.Concat(new object[]
-							{
-								"Sounds",
-								Path.DirectorySeparatorChar,
-								"NPC_Killed_",
-								num3
-							}));
+					{
+						"Sounds",
+						Path.DirectorySeparatorChar,
+						"NPC_Killed_",
+						num3
+					}));
 					Main.soundInstanceNPCKilled[num3] = Main.soundNPCKilled[num3].CreateInstance();
 				}
 				Main.soundInstanceMoonlordCry = Main.soundNPCKilled[10].CreateInstance();
+				*/
 			}
 			catch
 			{
@@ -6924,68 +_,71 @@
 					}));
 			Main.spriteBatch = new SpriteBatch(base.GraphicsDevice);
 			Main.tileBatch = new TileBatch(base.GraphicsDevice);
+			/*
 			for (int num20 = 1; num20 < 2; num20++)
 			{
 				Main.bannerTexture[num20] = base.Content.Load<Texture2D>(string.Concat(new object[]
-						{
-							"Images",
-							Path.DirectorySeparatorChar,
-							"House_Banner_",
-							num20
-						}));
+				{
+					"Images",
+					Path.DirectorySeparatorChar,
+					"House_Banner_",
+					num20
+				}));
 			}
 			for (int num21 = 0; num21 < Main.npcHeadTexture.Length; num21++)
 			{
 				Main.npcHeadTexture[num21] = base.Content.Load<Texture2D>(string.Concat(new object[]
-						{
-							"Images",
-							Path.DirectorySeparatorChar,
-							"NPC_Head_",
-							num21
-						}));
+				{
+					"Images",
+					Path.DirectorySeparatorChar,
+					"NPC_Head_",
+					num21
+				}));
 			}
 			for (int num22 = 0; num22 < Main.npcHeadBossTexture.Length; num22++)
 			{
 				Main.npcHeadBossTexture[num22] = base.Content.Load<Texture2D>(string.Concat(new object[]
-						{
-							"Images",
-							Path.DirectorySeparatorChar,
-							"NPC_Head_Boss_",
-							num22
-						}));
+				{
+					"Images",
+					Path.DirectorySeparatorChar,
+					"NPC_Head_Boss_",
+					num22
+				}));
 			}
 			for (int num23 = 1; num23 < Main.BackPackTexture.Length; num23++)
 			{
 				Main.BackPackTexture[num23] = base.Content.Load<Texture2D>(string.Concat(new object[]
-						{
-							"Images",
-							Path.DirectorySeparatorChar,
-							"BackPack_",
-							num23
-						}));
+				{
+					"Images",
+					Path.DirectorySeparatorChar,
+					"BackPack_",
+					num23
+				}));
 			}
 			for (int num24 = 1; num24 < 191; num24++)
 			{
 				Main.buffTexture[num24] = base.Content.Load<Texture2D>(string.Concat(new object[]
-						{
-							"Images",
-							Path.DirectorySeparatorChar,
-							"Buff_",
-							num24
-						}));
-			}
+				{
+					"Images",
+					Path.DirectorySeparatorChar,
+					"Buff_",
+					num24
+				}));
+			}
+			*/
 			this.LoadBackground(0);
 			this.LoadBackground(49);
 			Main.minecartMountTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Mount_Minecart");
+			/*
 			for (int num25 = 0; num25 < Main.rudolphMountTexture.Length; num25++)
 			{
 				Main.rudolphMountTexture[num25] = base.Content.Load<Texture2D>(string.Concat(new object[]
-						{
-							"Images",
-							Path.DirectorySeparatorChar,
-							"Rudolph_",
-							num25
-						}));
+				{
+					"Images",
+					Path.DirectorySeparatorChar,
+					"Rudolph_",
+					num25
+				}));
 			}
 			Main.bunnyMountTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Mount_Bunny");
 			Main.pigronMountTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Mount_Pigron");
@@ -7013,13 +_,14 @@
 			for (int num26 = 0; num26 < 3602; num26++)
 			{
 				Main.itemTexture[num26] = base.Content.Load<Texture2D>(string.Concat(new object[]
-						{
-							"Images",
-							Path.DirectorySeparatorChar,
-							"Item_",
-							num26
-						}));
-			}
+				{
+					"Images",
+					Path.DirectorySeparatorChar,
+					"Item_",
+					num26
+				}));
+			}
+			*/
 			for (int num27 = 0; num27 < 6; num27++)
 			{
 				Main.gemTexture[num27] = base.Content.Load<Texture2D>(string.Concat(new object[]
@@ -7030,12 +_,12 @@
 							num27
 						}));
 			}
-			for (int num28 = 0; num28 < 540; num28++)
-			{
-				NPC nPC = new NPC();
-				nPC.SetDefaults(num28, -1f);
-				Main.npcName[num28] = nPC.name;
-			}
+			//for (int num28 = 0; num28 < 540; num28++)
+			//{
+			//	NPC nPC = new NPC();
+			//	nPC.SetDefaults(num28, -1f);
+			//	Main.npcName[num28] = nPC.name;
+			//}
 			for (int num29 = 0; num29 < 22; num29++)
 			{
 				Main.cloudTexture[num29] = base.Content.Load<Texture2D>(string.Concat(new object[]
@@ -7056,16 +_,16 @@
 							num30
 						}));
 			}
-			for (int num31 = 0; num31 < 12; num31++)
-			{
-				Main.liquidTexture[num31] = base.Content.Load<Texture2D>(string.Concat(new object[]
-						{
-							"Images",
-							Path.DirectorySeparatorChar,
-							"Liquid_",
-							num31
-						}));
-			}
+			//for (int num31 = 0; num31 < 12; num31++)
+			//{
+			//	Main.liquidTexture[num31] = base.Content.Load<Texture2D>(string.Concat(new object[]
+			//	{
+			//		"Images",
+			//		Path.DirectorySeparatorChar,
+			//		"Liquid_",
+			//		num31
+			//	}));
+			//}
 			this.waterfallManager.LoadContent(base.Content);
 			Main.npcToggleTexture[0] = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "House_1");
 			Main.npcToggleTexture[1] = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "House_2");
@@ -7074,8 +_,13 @@
 			Main.gridTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Grid");
 			Main.trashTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Trash");
 			Main.cdTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "CoolDown");
-			Main.logoTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Logo");
-			Main.logo2Texture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Logo2");
+			//	Main.logoTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Logo");
+			//	Main.logo2Texture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Logo2");
+			Main.logoTexture = TerraCustomUtils.GetEmbeddedTexture2D("Terraria.TerraCustom.Logo.png");
+			Main.logo2Texture = TerraCustomUtils.GetEmbeddedTexture2D("Terraria.TerraCustom.Logo.png");
+			Main.TCTreeTops = TerraCustomUtils.GetEmbeddedTexture2D("Terraria.TerraCustom.TreeTops.png");
+			Main.TCMossColors = TerraCustomUtils.GetEmbeddedTexture2D("Terraria.TerraCustom.MossColors.png");
+			Main.TCDungeonColors = TerraCustomUtils.GetEmbeddedTexture2D("Terraria.TerraCustom.DungeonColors.png");
 			Main.dustTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Dust");
 			Main.sunTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Sun");
 			Main.sun2Texture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Sun2");
@@ -7098,9 +_,9 @@
 							num32
 						}));
 			}
-			Main.ninjaTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Ninja");
-			Main.antLionTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "AntlionBody");
-			Main.spikeBaseTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Spike_Base");
+			//Main.ninjaTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Ninja");
+			//Main.antLionTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "AntlionBody");
+			//Main.spikeBaseTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Spike_Base");
 			Main.woodTexture[0] = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Tiles_5_0");
 			Main.woodTexture[1] = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Tiles_5_1");
 			Main.woodTexture[2] = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Tiles_5_2");
@@ -7140,6 +_,7 @@
 							num35
 						}));
 			}
+			/*
 			Main.shroomCapTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Shroom_Tops");
 			Main.inventoryBackTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Inventory_Back");
 			Main.inventoryBack2Texture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Inventory_Back2");
@@ -7158,6 +_,7 @@
 			Main.inventoryBack15Texture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Inventory_Back15");
 			Main.hairStyleBackTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "HairStyleBack");
 			Main.clothesStyleBackTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "ClothesStyleBack");
+			*/
 			Main.inventoryTickOffTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Inventory_Tick_Off");
 			Main.inventoryTickOnTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Inventory_Tick_On");
 			Main.textBackTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Text_Back");
@@ -7177,15 +_,16 @@
 			Main.sunAltarTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "SunAltar");
 			Main.xmasLightTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "XmasLight");
 			Main.beetleTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "BeetleOrb");
+			/*
 			for (int num36 = 0; num36 < 16; num36++)
 			{
 				Main.chainsTexture[num36] = base.Content.Load<Texture2D>(string.Concat(new object[]
-						{
-							"Images",
-							Path.DirectorySeparatorChar,
-							"Chains_",
-							num36
-						}));
+				{
+					"Images",
+					Path.DirectorySeparatorChar,
+					"Chains_",
+					num36
+				}));
 			}
 			Main.chain20Texture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "Chain20");
 			Main.fishingLineTexture = base.Content.Load<Texture2D>("Images" + Path.DirectorySeparatorChar + "FishingLine");
@@ -7237,29 +_,30 @@
 			for (int num37 = 1; num37 < Main.gemChainTexture.Length; num37++)
 			{
 				Main.gemChainTexture[num37] = base.Content.Load<Texture2D>(string.Concat(new object[]
-						{
-							"Images",
-							Path.DirectorySeparatorChar,
-							"GemChain_",
-							num37
-						}));
+				{
+					"Images",
+					Path.DirectorySeparatorChar,
+					"GemChain_",
+					num37
+				}));
 			}
 			for (int num38 = 1; num38 < Main.golemTexture.Length; num38++)
 			{
 				Main.golemTexture[num38] = base.Content.Load<Texture2D>(string.Concat(new object[]
-						{
-							"Images",
-							Path.DirectorySeparatorChar,
-							"GolemLights",
-							num38
-						}));
-			}
+				{
+					"Images",
+					Path.DirectorySeparatorChar,
+					"GolemLights",
+					num38
+				}));
+			}
+			*/
 			Main.fontItemStack = base.Content.Load<SpriteFont>("Fonts" + Path.DirectorySeparatorChar + "Item_Stack");
 			Main.fontMouseText = base.Content.Load<SpriteFont>("Fonts" + Path.DirectorySeparatorChar + "Mouse_Text");
 			Main.fontDeathText = base.Content.Load<SpriteFont>("Fonts" + Path.DirectorySeparatorChar + "Death_Text");
 			Main.fontCombatText[0] = base.Content.Load<SpriteFont>("Fonts" + Path.DirectorySeparatorChar + "Combat_Text");
 			Main.fontCombatText[1] = base.Content.Load<SpriteFont>("Fonts" + Path.DirectorySeparatorChar + "Combat_Crit");
-			Mount.Initialize();
+			//Mount.Initialize();
 			Minecart.Initialize();
 		}
 
@@ -10863,10 +_,10 @@
 				Animation.UpdateAll();
 				AchievementCompleteUI.Update();
 				this.UpdateMusic();
-				if (Main.showSplash)
-				{
-					return;
-				}
+				//if (Main.showSplash)
+				//{
+				//	return;
+				//}
 				if (!Main.gameMenu && Main.netMode == 1)
 				{
 					if (!Main.saveTime.IsRunning)
@@ -11794,7 +_,7 @@
 						Main.tileFrame[410] = 0;
 					}
 				}
-				Main.CritterCages();
+				//Main.CritterCages();
 				Main.UpdateDrawAnimations();
 				if (Main.keyState.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.F10) && !Main.chatMode && !Main.editSign && !Main.editChest)
 				{
@@ -18256,21 +_,26 @@
 							int num315 = num293;
 							while (num315 < num293 + 100)
 							{
+								// 19 total: 6 grass, 1 mush, 1 crim, 1 corrup,
+								//TileID.Grass -- 0, 6,7,8,9,10,
 								if (Main.tile[num292, num315].type == 2)
 								{
 									num310 = Main.GetTreeStyle(num292);
 									break;
 								}
+								// corrup -- 1
 								if (Main.tile[num292, num315].type == 23)
 								{
 									num310 = 1;
 									break;
 								}
+								//TileID.MushroomGrass -- 14
 								if (Main.tile[num292, num315].type == 70)
 								{
 									num310 = 14;
 									break;
 								}
+								// Jungle -- 2,11,13
 								if (Main.tile[num292, num315].type == 60)
 								{
 									num310 = 2;
@@ -18287,6 +_,7 @@
 									num313 = 48;
 									break;
 								}
+								// Snow -- 4,12,16,17,18
 								if (Main.tile[num292, num315].type == 147)
 								{
 									num310 = 4;
@@ -18323,6 +_,7 @@
 										break;
 									}
 								}
+								// Hallow == 5,3
 								else
 								{
 									if (Main.tile[num292, num315].type == 199)
@@ -30926,7 +_,7 @@
 			}
 			TimeLogger.DetailedDrawTime(10);
 		}
-
+		/*
 		protected void DrawInventory()
 		{
 			if (Main.netMode == 1)
@@ -31631,61 +_,61 @@
 						{
 							object obj = text3;
 							text3 = string.Concat(new object[]
-								{
-									obj,
-									"[c/",
-									Colors.AlphaDarken(Colors.CoinPlatinum).Hex3(),
-									":",
-									num51,
-									" ",
-									Lang.inter[15],
-									"] "
-								});
+							{
+								obj,
+								"[c/",
+								Colors.AlphaDarken(Colors.CoinPlatinum).Hex3(),
+								":",
+								num51,
+								" ",
+								Lang.inter[15],
+								"] "
+							});
 						}
 						if (num52 > 0)
 						{
 							object obj = text3;
 							text3 = string.Concat(new object[]
-								{
-									obj,
-									"[c/",
-									Colors.AlphaDarken(Colors.CoinGold).Hex3(),
-									":",
-									num52,
-									" ",
-									Lang.inter[16],
-									"] "
-								});
+							{
+								obj,
+								"[c/",
+								Colors.AlphaDarken(Colors.CoinGold).Hex3(),
+								":",
+								num52,
+								" ",
+								Lang.inter[16],
+								"] "
+							});
 						}
 						if (num53 > 0)
 						{
 							object obj = text3;
 							text3 = string.Concat(new object[]
-								{
-									obj,
-									"[c/",
-									Colors.AlphaDarken(Colors.CoinSilver).Hex3(),
-									":",
-									num53,
-									" ",
-									Lang.inter[17],
-									"] "
-								});
+							{
+								obj,
+								"[c/",
+								Colors.AlphaDarken(Colors.CoinSilver).Hex3(),
+								":",
+								num53,
+								" ",
+								Lang.inter[17],
+								"] "
+							});
 						}
 						if (num54 > 0)
 						{
 							object obj = text3;
 							text3 = string.Concat(new object[]
-								{
-									obj,
-									"[c/",
-									Colors.AlphaDarken(Colors.CoinCopper).Hex3(),
-									":",
-									num54,
-									" ",
-									Lang.inter[18],
-									"] "
-								});
+							{
+								obj,
+								"[c/",
+								Colors.AlphaDarken(Colors.CoinCopper).Hex3(),
+								":",
+								num54,
+								" ",
+								Lang.inter[18],
+								"] "
+							});
 						}
 						ItemSlot.DrawSavings(Main.spriteBatch, (float)(num48 + 130), (float)this.invBottom, true);
 						ChatManager.DrawColorCodedStringWithShadow(Main.spriteBatch, Main.fontMouseText, text3, new Vector2((float)(num48 + 50) + Main.fontMouseText.MeasureString(text2).X, (float)num49), Microsoft.Xna.Framework.Color.White, 0f, Vector2.Zero, Vector2.One, -1f, 2f);
@@ -31954,12 +_,12 @@
 							{
 								object obj = Main.hoverItemName;
 								Main.hoverItemName = string.Concat(new object[]
-									{
-										obj,
-										" (",
-										Main.recipe[Main.availableRecipe[num67]].createItem.stack,
-										")"
-									});
+								{
+									obj,
+									" (",
+									Main.recipe[Main.availableRecipe[num67]].createItem.stack,
+									")"
+								});
 							}
 						}
 						if (Main.numAvailableRecipes > 0)
@@ -32039,12 +_,12 @@
 							{
 								object obj = Main.hoverItemName;
 								Main.hoverItemName = string.Concat(new object[]
-									{
-										obj,
-										" (",
-										Main.recipe[Main.availableRecipe[Main.focusRecipe]].requiredItem[num72].stack,
-										")"
-									});
+								{
+									obj,
+									" (",
+									Main.recipe[Main.availableRecipe[Main.focusRecipe]].requiredItem[num72].stack,
+									")"
+								});
 							}
 						}
 						num75 -= 50.0;
@@ -32183,12 +_,12 @@
 						{
 							object obj = Main.hoverItemName;
 							Main.hoverItemName = string.Concat(new object[]
-								{
-									obj,
-									" (",
-									Main.recipe[Main.availableRecipe[num91]].createItem.stack,
-									")"
-								});
+							{
+								obj,
+								" (",
+								Main.recipe[Main.availableRecipe[num91]].createItem.stack,
+								")"
+							});
 						}
 					}
 					if (Main.numAvailableRecipes > 0)
@@ -32354,7 +_,7 @@
 				}
 			}
 		}
-
+		*/
 		private static void DrawPVPIcons()
 		{
 			Main.inventoryScale = 0.6f;
@@ -34651,7 +_,7 @@
 					{
 						try
 						{
-							this.DrawMap();
+							//	this.DrawMap();
 							goto IL_2493;
 						}
 						catch (Exception e2)
@@ -34660,7 +_,7 @@
 							goto IL_2493;
 						}
 					}
-					this.DrawMap();
+					//	this.DrawMap();
 				}
 				IL_2493:
 				if (Main.mH + 600 > Main.screenHeight)
@@ -35013,7 +_,7 @@
 				{
 					try
 					{
-						this.DrawInventory();
+						//	this.DrawInventory();
 						goto IL_378D;
 					}
 					catch (Exception e3)
@@ -35022,7 +_,7 @@
 						goto IL_378D;
 					}
 				}
-				this.DrawInventory();
+				//this.DrawInventory();
 			}
 			else
 			{
@@ -36428,7 +_,7 @@
 		{
 			Main.SaveSettings();
 #if CLIENT
-			SocialAPI.Shutdown();
+			//SocialAPI.Shutdown();
 #endif
 			base.Exit();
 #if MAC
@@ -36706,9 +_,9 @@
 				}
 			}
 			int num = 250;
-			int num2 = Main.screenWidth / 2;
+			int screenHorizontalCenter = Main.screenWidth / 2;
 			int num3 = 80;
-			int num4 = 0;
+			int numberClickableLabels = 0;
 			int num5 = Main.menuMode;
 			int num6 = 0;
 			int num7 = 0;
@@ -36722,7 +_,7 @@
 			int[] array4 = new int[Main.maxMenuItems];
 			int[] array5 = new int[Main.maxMenuItems];
 			byte[] array6 = new byte[Main.maxMenuItems];
-			float[] array7 = new float[Main.maxMenuItems];
+			float[] clickableLabelScale = new float[Main.maxMenuItems];
 			bool[] array8 = new bool[Main.maxMenuItems];
 			bool flag4 = false;
 			for (int j = 0; j < Main.maxMenuItems; j++)
@@ -36731,112 +_,20 @@
 				array2[j] = false;
 				array4[j] = 0;
 				array5[j] = 0;
-				array7[j] = 1f;
-			}
-			string[] array9 = new string[Main.maxMenuItems];
+				clickableLabelScale[j] = 1f;
+			}
+			string[] clickableLabelText = new string[Main.maxMenuItems];
 			if (Main.menuMode == -1)
 			{
 				Main.menuMode = 0;
 			}
 			if (Main.menuMode == 1212)
 			{
-				if (this.focusMenu == 2)
-				{
-					array9[0] = "Wählen Sie die Sprache";
-				}
-				else if (this.focusMenu == 3)
-				{
-					array9[0] = "Selezionare la lingua";
-				}
-				else if (this.focusMenu == 4)
-				{
-					array9[0] = "Sélectionnez la langue";
-				}
-				else if (this.focusMenu == 5)
-				{
-					array9[0] = "Seleccione el idioma";
-				}
-				else
-				{
-					array9[0] = "Select language";
-				}
-				num3 = 50;
-				num = 200;
-				array4[1] = 25;
-				array4[2] = 25;
-				array4[3] = 25;
-				array4[4] = 25;
-				array4[5] = 25;
-				array[0] = true;
-				array9[1] = "English";
-				array9[2] = "Deutsch";
-				array9[3] = "Italiano";
-				array9[4] = "Française";
-				array9[5] = "Español";
-				num4 = 6;
-				if (this.selectedMenu >= 1)
-				{
-					Lang.lang = this.selectedMenu;
-					Lang.setLang(false);
-					Main.menuMode = 0;
-					Main.PlaySound(10, -1, -1, 1);
-					Main.SaveSettings();
-				}
+				Main.menuMode = 0;
 			}
 			else if (Main.menuMode == 1213)
 			{
-				if (this.focusMenu == 1)
-				{
-					array9[0] = "Select language";
-				}
-				else if (this.focusMenu == 2)
-				{
-					array9[0] = "Wählen Sie die Sprache";
-				}
-				else if (this.focusMenu == 3)
-				{
-					array9[0] = "Selezionare la lingua";
-				}
-				else if (this.focusMenu == 4)
-				{
-					array9[0] = "Sélectionnez la langue";
-				}
-				else if (this.focusMenu == 5)
-				{
-					array9[0] = "Seleccione el idioma";
-				}
-				else
-				{
-					array9[0] = Lang.menu[102];
-				}
-				num3 = 48;
-				num = 180;
-				array4[1] = 25;
-				array4[2] = 25;
-				array4[3] = 25;
-				array4[4] = 25;
-				array4[5] = 25;
-				array4[6] = 50;
-				array[0] = true;
-				array9[1] = "English";
-				array9[2] = "Deutsch";
-				array9[3] = "Italiano";
-				array9[4] = "Française";
-				array9[5] = "Español";
-				array9[6] = Lang.menu[5];
-				num4 = 7;
-				if (this.selectedMenu == 6)
-				{
-					Main.menuMode = 11;
-					Main.PlaySound(11, -1, -1, 1);
-				}
-				else if (this.selectedMenu >= 1)
-				{
-					Lang.lang = this.selectedMenu;
-					Lang.setLang(false);
-					Main.PlaySound(12, -1, -1, 1);
-					Main.SaveSettings();
-				}
+				Main.menuMode = 11;
 			}
 			else if (Main.netMode == 2)
 			{
@@ -36847,11 +_,11 @@
 					{
 						try
 						{
-							array9[k] = Netplay.Clients[k].StatusText;
+							clickableLabelText[k] = Netplay.Clients[k].StatusText;
 							if (Netplay.Clients[k].IsActive && Main.showSpam)
 							{
 								string[] array10;
-								string[] expr_86B = array10 = array9;
+								string[] expr_86B = array10 = clickableLabelText;
 								IntPtr intPtr;
 								int expr_870 = (int)(intPtr = (IntPtr)k);
 								object obj = array10[(int)intPtr];
@@ -36866,10 +_,10 @@
 						}
 						catch
 						{
-							array9[k] = "";
+							clickableLabelText[k] = "";
 						}
 						array[k] = true;
-						if (array9[k] != "" && array9[k] != null)
+						if (clickableLabelText[k] != "" && clickableLabelText[k] != null)
 						{
 							flag5 = false;
 						}
@@ -36877,23 +_,24 @@
 				}
 				if (flag5)
 				{
-					array9[0] = Lang.menu[0];
-					array9[1] = Lang.menu[1] + Netplay.ListenPort + ".";
-				}
-				num4 = 11;
-				array9[9] = Main.statusText;
+					clickableLabelText[0] = Lang.menu[0];
+					clickableLabelText[1] = Lang.menu[1] + Netplay.ListenPort + ".";
+				}
+				numberClickableLabels = 11;
+				clickableLabelText[9] = Main.statusText;
 				array[9] = true;
 				num = 170;
 				num3 = 30;
 				array4[10] = 20;
 				array4[10] = 40;
-				array9[10] = Lang.menu[2];
+				clickableLabelText[10] = Lang.menu[2];
 				if (this.selectedMenu == 10)
 				{
 					Netplay.disconnect = true;
 					Main.PlaySound(11, -1, -1, 1);
 				}
 			}
+			/*
 			else if (Main.menuMode == 31)
 			{
 				string serverPassword = Netplay.ServerPassword;
@@ -36957,15 +_,16 @@
 					Main.menuMode = 14;
 				}
 			}
+			*/
 			else
 			{
-				if (Main.netMode == 1 || Main.menuMode == 14)
-				{
-					num4 = 2;
-					array9[0] = Main.statusText;
+				if (Main.netMode == 1 /*|| Main.menuMode == 14*/)
+				{
+					numberClickableLabels = 2;
+					clickableLabelText[0] = Main.statusText;
 					array[0] = true;
 					num = 300;
-					array9[1] = Lang.menu[6];
+					clickableLabelText[1] = Lang.menu[6];
 					if (this.selectedMenu != 1)
 					{
 						goto IL_4287;
@@ -36987,135 +_,137 @@
 				}
 				if (Main.menuMode == 882)
 				{
-					num4 = 2;
+					numberClickableLabels = 2;
 					array[0] = true;
 					num = 300;
-					array9[0] = Main.statusText;
-					array9[1] = Lang.menu[6];
+					clickableLabelText[0] = Main.statusText;
+					clickableLabelText[1] = Lang.menu[6];
 					if (this.selectedMenu == 1)
 					{
 						Main.PlaySound(11, -1, -1, 1);
 						Main.menuMode = 0;
 						Main.netMode = 0;
-						if (SocialAPI.Network != null)
-						{
-							SocialAPI.Network.CancelJoin();
-						}
-					}
-				}
+						//if (SocialAPI.Network != null)
+						//{
+						//    SocialAPI.Network.CancelJoin();
+						//}
+					}
+				}
+				/*
 				else if (Main.menuMode == 30)
 				{
-					string serverPassword2 = Netplay.ServerPassword;
-					Netplay.ServerPassword = Main.GetInputText(Netplay.ServerPassword);
-					if (serverPassword2 != Netplay.ServerPassword)
-					{
-						Main.PlaySound(12, -1, -1, 1);
-					}
-					array9[0] = Lang.menu[7];
-					this.textBlinkerCount++;
-					if (this.textBlinkerCount >= 20)
-					{
-						if (this.textBlinkerState == 0)
-						{
-							this.textBlinkerState = 1;
-						}
-						else
-						{
-							this.textBlinkerState = 0;
-						}
-						this.textBlinkerCount = 0;
-					}
-					array9[1] = Netplay.ServerPassword;
-					if (Main.HidePassword)
-					{
-						array9[1] = "";
-						for (int m = 0; m < Netplay.ServerPassword.Length; m++)
-						{
-							string[] array10;
-							(array10 = array9)[1] = array10[1] + "*";
-						}
-					}
-					if (this.textBlinkerState == 1)
-					{
-						string[] array10;
-						(array10 = array9)[1] = array10[1] + "|";
-						array5[1] = 1;
-					}
-					else
-					{
-						string[] array10;
-						(array10 = array9)[1] = array10[1] + " ";
-					}
-					array[0] = true;
-					array[1] = true;
-					array4[1] = -20;
-					array4[2] = 20;
-					array9[2] = Lang.menu[4];
-					array9[3] = Lang.menu[5];
-					num4 = 4;
-					if (this.selectedMenu == 3)
-					{
-						if (SocialAPI.Network != null)
-						{
-							Main.menuMode = 889;
-						}
-						else
-						{
-							Main.menuMode = 6;
-						}
-						Netplay.ServerPassword = "";
-					}
-					else if (this.selectedMenu == 2 || Main.inputTextEnter || Main.autoPass)
-					{
-						string text = string.Concat(new object[]
-							{
-								"-autoshutdown -password \"",
-								Netplay.ServerPassword,
-								"\" -lang ",
-								Lang.lang
-							});
-#if LINUX
-				        if (IntPtr.Size == 8)
-				        {
-					        text += " -x64";
-				        }
-				        else
-				        {
-					        text += " -x86";
-				        }
-#endif
-						if (Main.ActiveWorldFileData.IsCloudSave)
-						{
-							text = text + " -cloudworld \"" + Main.worldPathName + "\"";
-						}
-						else
-						{
-							text = text + " -world \"" + Main.worldPathName + "\"";
-						}
-						this.tServer.StartInfo.FileName = "TerrariaServer.exe";
-						this.tServer.StartInfo.Arguments = text;
-						if (Main.libPath != "")
-						{
-							ProcessStartInfo expr_E36 = this.tServer.StartInfo;
-							expr_E36.Arguments = expr_E36.Arguments + " -loadlib " + Main.libPath;
-						}
-						this.tServer.StartInfo.UseShellExecute = false;
-						this.tServer.StartInfo.CreateNoWindow = true;
-						if (SocialAPI.Network != null)
-						{
-							SocialAPI.Network.LaunchLocalServer(this.tServer, Main.MenuServerMode);
-						}
-						else
-						{
-							this.tServer.Start();
-						}
-						Netplay.SetRemoteIP("127.0.0.1");
-						Main.autoPass = true;
-						Main.statusText = Lang.menu[8];
-						Netplay.StartTcpClient();
-						Main.menuMode = 10;
-					}
-				}
+					                    string serverPassword2 = Netplay.ServerPassword;
+					                    Netplay.ServerPassword = Main.GetInputText(Netplay.ServerPassword);
+					                    if (serverPassword2 != Netplay.ServerPassword)
+					                    {
+					                        Main.PlaySound(12, -1, -1, 1);
+					                    }
+					                    array9[0] = Lang.menu[7];
+					                    this.textBlinkerCount++;
+					                    if (this.textBlinkerCount >= 20)
+					                    {
+					                        if (this.textBlinkerState == 0)
+					                        {
+					                            this.textBlinkerState = 1;
+					                        }
+					                        else
+					                        {
+					                            this.textBlinkerState = 0;
+					                        }
+					                        this.textBlinkerCount = 0;
+					                    }
+					                    array9[1] = Netplay.ServerPassword;
+					                    if (Main.HidePassword)
+					                    {
+					                        array9[1] = "";
+					                        for (int m = 0; m < Netplay.ServerPassword.Length; m++)
+					                        {
+					                            string[] array10;
+					                            (array10 = array9)[1] = array10[1] + "*";
+					                        }
+					                    }
+					                    if (this.textBlinkerState == 1)
+					                    {
+					                        string[] array10;
+					                        (array10 = array9)[1] = array10[1] + "|";
+					                        array5[1] = 1;
+					                    }
+					                    else
+					                    {
+					                        string[] array10;
+					                        (array10 = array9)[1] = array10[1] + " ";
+					                    }
+					                    array[0] = true;
+					                    array[1] = true;
+					                    array4[1] = -20;
+					                    array4[2] = 20;
+					                    array9[2] = Lang.menu[4];
+					                    array9[3] = Lang.menu[5];
+					                    num4 = 4;
+					                    if (this.selectedMenu == 3)
+					                    {
+					                        if (SocialAPI.Network != null)
+					                        {
+					                            Main.menuMode = 889;
+					                        }
+					                        else
+					                        {
+					                            Main.menuMode = 6;
+					                        }
+					                        Netplay.ServerPassword = "";
+					                    }
+					                    else if (this.selectedMenu == 2 || Main.inputTextEnter || Main.autoPass)
+					                    {
+					                        string text = string.Concat(new object[]
+					                        {
+					                            "-autoshutdown -password \"",
+					                            Netplay.ServerPassword,
+					                            "\" -lang ",
+					                            Lang.lang
+					                        });
+					#if LINUX
+									        if (IntPtr.Size == 8)
+									        {
+										        text += " -x64";
+									        }
+									        else
+									        {
+										        text += " -x86";
+									        }
+					#endif
+					                        if (Main.ActiveWorldFileData.IsCloudSave)
+					                        {
+					                            text = text + " -cloudworld \"" + Main.worldPathName + "\"";
+					                        }
+					                        else
+					                        {
+					                            text = text + " -world \"" + Main.worldPathName + "\"";
+					                        }
+					                        this.tServer.StartInfo.FileName = "TerrariaServer.exe";
+					                        this.tServer.StartInfo.Arguments = text;
+					                        if (Main.libPath != "")
+					                        {
+					                            ProcessStartInfo expr_E36 = this.tServer.StartInfo;
+					                            expr_E36.Arguments = expr_E36.Arguments + " -loadlib " + Main.libPath;
+					                        }
+					                        this.tServer.StartInfo.UseShellExecute = false;
+					                        this.tServer.StartInfo.CreateNoWindow = true;
+					                        if (SocialAPI.Network != null)
+					                        {
+					                            SocialAPI.Network.LaunchLocalServer(this.tServer, Main.MenuServerMode);
+					                        }
+					                        else
+					                        {
+					                            this.tServer.Start();
+					                        }
+					                        Netplay.SetRemoteIP("127.0.0.1");
+					                        Main.autoPass = true;
+					                        Main.statusText = Lang.menu[8];
+					                        Netplay.StartTcpClient();
+					                        Main.menuMode = 10;
+					                    }
+				}
+				*/
 				else if (Main.menuMode == 889)
 				{
 					num = 200;
@@ -37125,45 +_,45 @@
 					array4[3] = 30;
 					array4[4] = 70;
 					array4[5] = 70;
-					num4 = 6;
-					array9[0] = Lang.menu[135];
-					array9[4] = Lang.menu[144];
-					array9[5] = Lang.menu[5];
+					numberClickableLabels = 6;
+					clickableLabelText[0] = Lang.menu[135];
+					clickableLabelText[4] = Lang.menu[144];
+					clickableLabelText[5] = Lang.menu[5];
 					array[0] = true;
 					if (!Main.MenuServerMode.HasFlag(ServerMode.Lobby))
 					{
 						Main.MenuServerMode = ServerMode.None;
 						array[2] = true;
 						array[3] = true;
-						array9[1] = Lang.menu[136];
-						array9[2] = "";
-						array9[3] = "";
+						clickableLabelText[1] = Lang.menu[136];
+						clickableLabelText[2] = "";
+						clickableLabelText[3] = "";
 					}
 					else
 					{
-						array9[1] = Lang.menu[137];
+						clickableLabelText[1] = Lang.menu[137];
 						if (Main.MenuServerMode.HasFlag(ServerMode.FriendsCanJoin))
 						{
-							array9[2] = Lang.menu[139];
+							clickableLabelText[2] = Lang.menu[139];
 							if (Main.MenuServerMode.HasFlag(ServerMode.FriendsOfFriends))
 							{
-								array9[3] = Lang.menu[143];
+								clickableLabelText[3] = Lang.menu[143];
 							}
 							else
 							{
-								array9[3] = Lang.menu[142];
+								clickableLabelText[3] = Lang.menu[142];
 							}
 						}
 						else
 						{
-							array9[2] = Lang.menu[138];
+							clickableLabelText[2] = Lang.menu[138];
 							if (Main.MenuServerMode.HasFlag(ServerMode.FriendsOfFriends))
 							{
-								array9[3] = Lang.menu[141];
+								clickableLabelText[3] = Lang.menu[141];
 							}
 							else
 							{
-								array9[3] = Lang.menu[140];
+								clickableLabelText[3] = Lang.menu[140];
 							}
 						}
 					}
@@ -37197,12 +_,12 @@
 				}
 				else if (Main.menuMode == 15)
 				{
-					num4 = 2;
-					array9[0] = Main.statusText;
+					numberClickableLabels = 2;
+					clickableLabelText[0] = Main.statusText;
 					array[0] = true;
 					num = 80;
 					num3 = 400;
-					array9[1] = Lang.menu[5];
+					clickableLabelText[1] = Lang.menu[5];
 					if (this.selectedMenu == 1)
 					{
 						Netplay.disconnect = true;
@@ -37213,14 +_,14 @@
 				}
 				else if (Main.menuMode == 200)
 				{
-					num4 = 3;
-					array9[0] = Lang.menu[9];
+					numberClickableLabels = 3;
+					clickableLabelText[0] = Lang.menu[9];
 					array[0] = true;
 					num -= 30;
 					array4[1] = 70;
 					array4[2] = 50;
-					array9[1] = Lang.menu[10];
-					array9[2] = Lang.menu[6];
+					clickableLabelText[1] = Lang.menu[10];
+					clickableLabelText[2] = Lang.menu[6];
 					if (this.selectedMenu == 1)
 					{
 						if (FileUtilities.Exists(Main.worldPathName + ".bak", Main.ActiveWorldFileData.IsCloudSave))
@@ -37246,15 +_,15 @@
 				}
 				else if (Main.menuMode == 201)
 				{
-					num4 = 3;
-					array9[0] = Lang.menu[9];
+					numberClickableLabels = 3;
+					clickableLabelText[0] = Lang.menu[9];
 					array[0] = true;
 					array[1] = true;
 					num -= 30;
 					array4[1] = -30;
 					array4[2] = 50;
-					array9[1] = Lang.menu[11];
-					array9[2] = Lang.menu[5];
+					clickableLabelText[1] = Lang.menu[11];
+					clickableLabelText[2] = Lang.menu[5];
 					if (this.selectedMenu == 2)
 					{
 						Main.PlaySound(11, -1, -1, 1);
@@ -37264,19 +_,19 @@
 				}
 				else if (Main.menuMode == 10)
 				{
-					num4 = 1;
-					array9[0] = Main.statusText;
+					numberClickableLabels = 1;
+					clickableLabelText[0] = Main.statusText;
 					array[0] = true;
 					num = 300;
 				}
 				else if (Main.menuMode == 100)
 				{
-					num4 = 1;
-					array9[0] = Main.statusText;
+					numberClickableLabels = 1;
+					clickableLabelText[0] = Main.statusText;
 					array[0] = true;
 					num = 300;
 				}
-				else if (Main.menuMode == 0)
+				else if (Main.menuMode == (int)MenuModes.ChooseWorldSize/*0*/)
 				{
 					Main.eclipse = false;
 					Main.pumpkinMoon = false;
@@ -37340,44 +_,103 @@
 						SkyManager.Instance["Slime"].Deactivate(new object[0]);
 					}
 					int num9 = 0;
-					num4 = 5;
+					numberClickableLabels = 6;
 					num3 = 60;
+					/*
 					array9[num9] = Lang.menu[12];
 					if (this.selectedMenu == num9)
 					{
-						Main.PlaySound(10, -1, -1, 1);
-						Main.menuMode = 1;
+					    Main.PlaySound(10, -1, -1, 1);
+					    Main.menuMode = 1;
 					}
 					num9++;
 					array9[num9] = Lang.menu[13];
 					if (this.selectedMenu == num9)
 					{
-						Main.PlaySound(10, -1, -1, 1);
-						Main.menuMode = 12;
+					    Main.PlaySound(10, -1, -1, 1);
+					    Main.menuMode = 12;
 					}
 					num9++;
 					array9[num9] = Lang.menu[131];
 					if (this.selectedMenu == num9)
 					{
-						Main.PlaySound(10, -1, -1, 1);
-						Main.MenuUI.SetState(Main.AchievementsMenu);
-						Main.menuMode = 888;
+					    Main.PlaySound(10, -1, -1, 1);
+					    Main.MenuUI.SetState(Main.AchievementsMenu);
+					    Main.menuMode = 888;
 					}
 					num9++;
 					array9[num9] = Lang.menu[14];
 					if (this.selectedMenu == num9)
 					{
-						Main.PlaySound(10, -1, -1, 1);
-						Main.menuMode = 11;
+					    Main.PlaySound(10, -1, -1, 1);
+					    Main.menuMode = 11;
 					}
 					num9++;
 					array9[num9] = Lang.menu[15];
 					if (this.selectedMenu == num9)
 					{
+					    this.QuitGame();
+					}
+					num9++;
+					*/
+					num = 170;
+					num3 = 55;
+					array4[2] = 20;
+					array4[3] = 20;
+					array4[4] = 20;
+					array4[5] = 20;
+					array4[6] = 60;
+					clickableLabelText[1] = Lang.menu[91];
+					array[1] = true;
+					clickableLabelText[2] = Lang.menu[92];
+					clickableLabelText[3] = Lang.menu[93];
+					clickableLabelText[4] = Lang.menu[94];
+					clickableLabelText[5] = "Keep Previous Custom Size";
+					clickableLabelText[6] = Lang.menu[15];
+					numberClickableLabels = 7;
+					if (this.selectedMenu == 6)
+					{
 						this.QuitGame();
 					}
-					num9++;
-				}
+					else if (this.selectedMenu == 0)
+					{
+						Main.menuMode = 6;
+					}
+					else if (this.selectedMenu > 0)
+					{
+						if (this.selectedMenu == 2)
+						{
+							Main.maxTilesX = /*8400;// */4200;
+							Main.maxTilesY = /*600;//*/1200;
+							WorldGen.worldSize = 0;
+						}
+						else if (this.selectedMenu == 3)
+						{
+							Main.maxTilesX = 6400;
+							Main.maxTilesY = 1800;
+							WorldGen.worldSize = 1;
+						}
+						else if (this.selectedMenu == 4)
+						{
+							Main.maxTilesX = 8400;
+							Main.maxTilesY = 2400;
+							WorldGen.worldSize = 2;
+						}
+						else if (this.selectedMenu == 5)
+						{
+							if (Main.maxTilesX == 8401)
+							{
+								Main.maxTilesX = 4200;
+								Main.maxTilesY = 1200;
+								WorldGen.worldSize = 0;
+							}
+						}
+						Main.clrInput();
+						Main.menuMode = (int)MenuModes.SelectDifficulty/*-7*/;
+						WorldGen.setWorldSize();
+					}
+				}
+				/*
 				else if (Main.menuMode == 1)
 				{
 					Main.MenuUI.SetState(Main._characterSelectMenu);
@@ -37385,340 +_,340 @@
 				}
 				else if (Main.menuMode == 2)
 				{
-					flag4 = true;
-					if (this.selectedMenu == 0)
-					{
-						Main.menuMode = 17;
-						Main.PlaySound(10, -1, -1, 1);
-						Main.selColor = Main.PendingPlayer.hairColor;
-					}
-					if (this.selectedMenu == 1)
-					{
-						Main.menuMode = 18;
-						Main.PlaySound(10, -1, -1, 1);
-						Main.selColor = Main.PendingPlayer.eyeColor;
-					}
-					if (this.selectedMenu == 2)
-					{
-						Main.menuMode = 19;
-						Main.PlaySound(10, -1, -1, 1);
-						Main.selColor = Main.PendingPlayer.skinColor;
-					}
-					if (this.selectedMenu == 3)
-					{
-						Main.menuMode = 20;
-						Main.PlaySound(10, -1, -1, 1);
-					}
-					array9[0] = Lang.menu[18];
-					array9[1] = Lang.menu[19];
-					array9[2] = Lang.menu[20];
-					array9[3] = Lang.menu[21];
-					num = 220;
-					for (int num10 = 0; num10 < 9; num10++)
-					{
-						if (num10 < 6)
-						{
-							array7[num10] = 0.75f;
-						}
-						else
-						{
-							array7[num10] = 0.9f;
-						}
-					}
-					num3 = 38;
-					array4[6] = 6;
-					array4[7] = 12;
-					array4[8] = 18;
-					num6 = Main.screenWidth / 2 - 16;
-					num7 = 176;
-					if (Main.PendingPlayer.Male)
-					{
-						array9[4] = Lang.menu[22];
-					}
-					else
-					{
-						array9[4] = Lang.menu[23];
-					}
-					if (this.selectedMenu == 4)
-					{
-						if (Main.PendingPlayer.Male)
-						{
-							Main.PlaySound(20, -1, -1, 1);
-							Main.PendingPlayer.Male = false;
-						}
-						else
-						{
-							Main.PlaySound(1, -1, -1, 1);
-							Main.PendingPlayer.Male = true;
-						}
-					}
-					if (Main.PendingPlayer.difficulty == 2)
-					{
-						array9[5] = Lang.menu[24];
-						array6[5] = Main.PendingPlayer.difficulty;
-					}
-					else if (Main.PendingPlayer.difficulty == 1)
-					{
-						array9[5] = Lang.menu[25];
-						array6[5] = Main.PendingPlayer.difficulty;
-					}
-					else
-					{
-						array9[5] = Lang.menu[26];
-					}
-					if (this.selectedMenu == 5)
-					{
-						Main.PlaySound(10, -1, -1, 1);
-						Main.menuMode = 222;
-					}
-					if (this.selectedMenu == 7)
-					{
-						Main.PlaySound(12, -1, -1, 1);
-						Main.PendingPlayer.hair = Main.rand.Next(51);
-						Main.PendingPlayer.eyeColor = this.randColor();
-						while ((int)(Main.PendingPlayer.eyeColor.R + Main.PendingPlayer.eyeColor.G + Main.PendingPlayer.eyeColor.B) > 300)
-						{
-							Main.PendingPlayer.eyeColor = this.randColor();
-						}
-						Main.PendingPlayer.hairColor = this.randColor();
-						Main.PendingPlayer.pantsColor = this.randColor();
-						Main.PendingPlayer.shirtColor = this.randColor();
-						Main.PendingPlayer.shoeColor = this.randColor();
-						Main.PendingPlayer.skinColor = this.randColor();
-						float num11 = (float)Main.rand.Next(60, 120) * 0.01f;
-						if (num11 > 1f)
-						{
-							num11 = 1f;
-						}
-						Main.PendingPlayer.skinColor.R = (byte)((float)Main.rand.Next(240, 255) * num11);
-						Main.PendingPlayer.skinColor.G = (byte)((float)Main.rand.Next(110, 140) * num11);
-						Main.PendingPlayer.skinColor.B = (byte)((float)Main.rand.Next(75, 110) * num11);
-						Main.PendingPlayer.underShirtColor = this.randColor();
-						int num12 = Main.PendingPlayer.hair + 1;
-						if (num12 == 5 || num12 == 6 || num12 == 7 || num12 == 10 || num12 == 12 || num12 == 19 || num12 == 22 || num12 == 23 || num12 == 26 || num12 == 27 || num12 == 30 || num12 == 33)
-						{
-							Main.PendingPlayer.Male = false;
-						}
-						else
-						{
-							Main.PendingPlayer.Male = true;
-						}
-						Main.PendingPlayer.skinVariant = Main.rand.Next(8);
-					}
-					array9[7] = Lang.menu[27];
-					array9[6] = Lang.menu[28];
-					array9[8] = Lang.menu[5];
-					num4 = 9;
-					if (this.selectedMenu == 8)
-					{
-						Main.PlaySound(11, -1, -1, 1);
-						Main.menuMode = 1;
-					}
-					else if (this.selectedMenu == 6)
-					{
-						Main.PlaySound(10, -1, -1, 1);
-						Main.PendingPlayer.name = "";
-						Main.menuMode = 3;
-						Main.clrInput();
-					}
+				flag4 = true;
+				if (this.selectedMenu == 0)
+				{
+				    Main.menuMode = 17;
+				    Main.PlaySound(10, -1, -1, 1);
+				    Main.selColor = Main.PendingPlayer.hairColor;
+				}
+				if (this.selectedMenu == 1)
+				{
+				    Main.menuMode = 18;
+				    Main.PlaySound(10, -1, -1, 1);
+				    Main.selColor = Main.PendingPlayer.eyeColor;
+				}
+				if (this.selectedMenu == 2)
+				{
+				    Main.menuMode = 19;
+				    Main.PlaySound(10, -1, -1, 1);
+				    Main.selColor = Main.PendingPlayer.skinColor;
+				}
+				if (this.selectedMenu == 3)
+				{
+				    Main.menuMode = 20;
+				    Main.PlaySound(10, -1, -1, 1);
+				}
+				array9[0] = Lang.menu[18];
+				array9[1] = Lang.menu[19];
+				array9[2] = Lang.menu[20];
+				array9[3] = Lang.menu[21];
+				num = 220;
+				for (int num10 = 0; num10 < 9; num10++)
+				{
+				    if (num10 < 6)
+				    {
+				        array7[num10] = 0.75f;
+				    }
+				    else
+				    {
+				        array7[num10] = 0.9f;
+				    }
+				}
+				num3 = 38;
+				array4[6] = 6;
+				array4[7] = 12;
+				array4[8] = 18;
+				num6 = Main.screenWidth / 2 - 16;
+				num7 = 176;
+				if (Main.PendingPlayer.Male)
+				{
+				    array9[4] = Lang.menu[22];
+				}
+				else
+				{
+				    array9[4] = Lang.menu[23];
+				}
+				if (this.selectedMenu == 4)
+				{
+				    if (Main.PendingPlayer.Male)
+				    {
+				        Main.PlaySound(20, -1, -1, 1);
+				        Main.PendingPlayer.Male = false;
+				    }
+				    else
+				    {
+				        Main.PlaySound(1, -1, -1, 1);
+				        Main.PendingPlayer.Male = true;
+				    }
+				}
+				if (Main.PendingPlayer.difficulty == 2)
+				{
+				    array9[5] = Lang.menu[24];
+				    array6[5] = Main.PendingPlayer.difficulty;
+				}
+				else if (Main.PendingPlayer.difficulty == 1)
+				{
+				    array9[5] = Lang.menu[25];
+				    array6[5] = Main.PendingPlayer.difficulty;
+				}
+				else
+				{
+				    array9[5] = Lang.menu[26];
+				}
+				if (this.selectedMenu == 5)
+				{
+				    Main.PlaySound(10, -1, -1, 1);
+				    Main.menuMode = 222;
+				}
+				if (this.selectedMenu == 7)
+				{
+				    Main.PlaySound(12, -1, -1, 1);
+				    Main.PendingPlayer.hair = Main.rand.Next(51);
+				    Main.PendingPlayer.eyeColor = this.randColor();
+				    while ((int)(Main.PendingPlayer.eyeColor.R + Main.PendingPlayer.eyeColor.G + Main.PendingPlayer.eyeColor.B) > 300)
+				    {
+				        Main.PendingPlayer.eyeColor = this.randColor();
+				    }
+				    Main.PendingPlayer.hairColor = this.randColor();
+				    Main.PendingPlayer.pantsColor = this.randColor();
+				    Main.PendingPlayer.shirtColor = this.randColor();
+				    Main.PendingPlayer.shoeColor = this.randColor();
+				    Main.PendingPlayer.skinColor = this.randColor();
+				    float num11 = (float)Main.rand.Next(60, 120) * 0.01f;
+				    if (num11 > 1f)
+				    {
+				        num11 = 1f;
+				    }
+				    Main.PendingPlayer.skinColor.R = (byte)((float)Main.rand.Next(240, 255) * num11);
+				    Main.PendingPlayer.skinColor.G = (byte)((float)Main.rand.Next(110, 140) * num11);
+				    Main.PendingPlayer.skinColor.B = (byte)((float)Main.rand.Next(75, 110) * num11);
+				    Main.PendingPlayer.underShirtColor = this.randColor();
+				    int num12 = Main.PendingPlayer.hair + 1;
+				    if (num12 == 5 || num12 == 6 || num12 == 7 || num12 == 10 || num12 == 12 || num12 == 19 || num12 == 22 || num12 == 23 || num12 == 26 || num12 == 27 || num12 == 30 || num12 == 33)
+				    {
+				        Main.PendingPlayer.Male = false;
+				    }
+				    else
+				    {
+				        Main.PendingPlayer.Male = true;
+				    }
+				    Main.PendingPlayer.skinVariant = Main.rand.Next(8);
+				}
+				array9[7] = Lang.menu[27];
+				array9[6] = Lang.menu[28];
+				array9[8] = Lang.menu[5];
+				num4 = 9;
+				if (this.selectedMenu == 8)
+				{
+				    Main.PlaySound(11, -1, -1, 1);
+				    Main.menuMode = 1;
+				}
+				else if (this.selectedMenu == 6)
+				{
+				    Main.PlaySound(10, -1, -1, 1);
+				    Main.PendingPlayer.name = "";
+				    Main.menuMode = 3;
+				    Main.clrInput();
+				}
 				}
 				else if (Main.menuMode == 222)
 				{
-					if (this.focusMenu == 3)
-					{
-						array9[0] = Lang.menu[29];
-					}
-					else if (this.focusMenu == 2)
-					{
-						array9[0] = Lang.menu[30];
-					}
-					else if (this.focusMenu == 1)
-					{
-						array9[0] = Lang.menu[31];
-					}
-					else
-					{
-						array9[0] = Lang.menu[32];
-					}
-					num3 = 50;
-					array4[1] = 25;
-					array4[2] = 25;
-					array4[3] = 25;
-					array[0] = true;
-					array9[1] = Lang.menu[26];
-					array9[2] = Lang.menu[25];
-					array6[2] = 1;
-					array9[3] = Lang.menu[24];
-					array6[3] = 2;
-					num4 = 4;
-					if (this.selectedMenu == 1)
-					{
-						Main.PendingPlayer.difficulty = 0;
-						Main.menuMode = 2;
-					}
-					else if (this.selectedMenu == 2)
-					{
-						Main.menuMode = 2;
-						Main.PendingPlayer.difficulty = 1;
-					}
-					else if (this.selectedMenu == 3)
-					{
-						Main.PendingPlayer.difficulty = 2;
-						Main.menuMode = 2;
-					}
+				if (this.focusMenu == 3)
+				{
+				    array9[0] = Lang.menu[29];
+				}
+				else if (this.focusMenu == 2)
+				{
+				    array9[0] = Lang.menu[30];
+				}
+				else if (this.focusMenu == 1)
+				{
+				    array9[0] = Lang.menu[31];
+				}
+				else
+				{
+				    array9[0] = Lang.menu[32];
+				}
+				num3 = 50;
+				array4[1] = 25;
+				array4[2] = 25;
+				array4[3] = 25;
+				array[0] = true;
+				array9[1] = Lang.menu[26];
+				array9[2] = Lang.menu[25];
+				array6[2] = 1;
+				array9[3] = Lang.menu[24];
+				array6[3] = 2;
+				num4 = 4;
+				if (this.selectedMenu == 1)
+				{
+				    Main.PendingPlayer.difficulty = 0;
+				    Main.menuMode = 2;
+				}
+				else if (this.selectedMenu == 2)
+				{
+				    Main.menuMode = 2;
+				    Main.PendingPlayer.difficulty = 1;
+				}
+				else if (this.selectedMenu == 3)
+				{
+				    Main.PendingPlayer.difficulty = 2;
+				    Main.menuMode = 2;
+				}
 				}
 				else if (Main.menuMode == 20)
 				{
-					flag4 = true;
-					if (this.selectedMenu == 0)
-					{
-						Main.menuMode = 21;
-						Main.PlaySound(10, -1, -1, 1);
-						Main.selColor = Main.PendingPlayer.shirtColor;
-					}
-					if (this.selectedMenu == 1)
-					{
-						Main.menuMode = 22;
-						Main.PlaySound(10, -1, -1, 1);
-						Main.selColor = Main.PendingPlayer.underShirtColor;
-					}
-					if (this.selectedMenu == 2)
-					{
-						Main.menuMode = 23;
-						Main.PlaySound(10, -1, -1, 1);
-						Main.selColor = Main.PendingPlayer.pantsColor;
-					}
-					if (this.selectedMenu == 3)
-					{
-						Main.selColor = Main.PendingPlayer.shoeColor;
-						Main.menuMode = 24;
-						Main.PlaySound(10, -1, -1, 1);
-					}
-					if (this.selectedMenu == 5)
-					{
-						Main.PlaySound(11, -1, -1, 1);
-						Main.menuMode = 2;
-					}
-					if (this.selectedMenu == 4)
-					{
-						Main.PlaySound(12, -1, -1, 1);
-						if (Main.PendingPlayer.skinVariant < 4)
-						{
-							Main.PendingPlayer.skinVariant++;
-							if (Main.PendingPlayer.skinVariant == 4)
-							{
-								Main.PendingPlayer.skinVariant = 0;
-							}
-						}
-						else
-						{
-							Main.PendingPlayer.skinVariant++;
-							if (Main.PendingPlayer.skinVariant == 8)
-							{
-								Main.PendingPlayer.skinVariant = 4;
-							}
-						}
-					}
-					num6 = Main.screenWidth / 2 - 16;
-					num7 = 210;
-					num = 260;
-					num3 = 50;
-					num4 = 6;
-					array9[0] = Lang.menu[33];
-					array9[1] = Lang.menu[34];
-					array9[2] = Lang.menu[35];
-					array9[3] = Lang.menu[36];
-					array9[4] = Lang.menu[127];
-					array9[5] = Lang.menu[5];
-					array4[5] = 20;
+				flag4 = true;
+				if (this.selectedMenu == 0)
+				{
+				    Main.menuMode = 21;
+				    Main.PlaySound(10, -1, -1, 1);
+				    Main.selColor = Main.PendingPlayer.shirtColor;
+				}
+				if (this.selectedMenu == 1)
+				{
+				    Main.menuMode = 22;
+				    Main.PlaySound(10, -1, -1, 1);
+				    Main.selColor = Main.PendingPlayer.underShirtColor;
+				}
+				if (this.selectedMenu == 2)
+				{
+				    Main.menuMode = 23;
+				    Main.PlaySound(10, -1, -1, 1);
+				    Main.selColor = Main.PendingPlayer.pantsColor;
+				}
+				if (this.selectedMenu == 3)
+				{
+				    Main.selColor = Main.PendingPlayer.shoeColor;
+				    Main.menuMode = 24;
+				    Main.PlaySound(10, -1, -1, 1);
+				}
+				if (this.selectedMenu == 5)
+				{
+				    Main.PlaySound(11, -1, -1, 1);
+				    Main.menuMode = 2;
+				}
+				if (this.selectedMenu == 4)
+				{
+				    Main.PlaySound(12, -1, -1, 1);
+				    if (Main.PendingPlayer.skinVariant < 4)
+				    {
+				        Main.PendingPlayer.skinVariant++;
+				        if (Main.PendingPlayer.skinVariant == 4)
+				        {
+				            Main.PendingPlayer.skinVariant = 0;
+				        }
+				    }
+				    else
+				    {
+				        Main.PendingPlayer.skinVariant++;
+				        if (Main.PendingPlayer.skinVariant == 8)
+				        {
+				            Main.PendingPlayer.skinVariant = 4;
+				        }
+				    }
+				}
+				num6 = Main.screenWidth / 2 - 16;
+				num7 = 210;
+				num = 260;
+				num3 = 50;
+				num4 = 6;
+				array9[0] = Lang.menu[33];
+				array9[1] = Lang.menu[34];
+				array9[2] = Lang.menu[35];
+				array9[3] = Lang.menu[36];
+				array9[4] = Lang.menu[127];
+				array9[5] = Lang.menu[5];
+				array4[5] = 20;
 				}
 				else if (Main.menuMode == 17)
 				{
-					flag4 = true;
-					num6 = Main.screenWidth / 2 - 16;
-					num7 = 210;
-					flag = true;
-					num8 = 390;
-					num = 260;
-					num3 = 60;
-					Main.PendingPlayer.hairColor = Main.selColor;
-					num4 = 3;
-					array9[0] = Lang.menu[37] + " " + (Main.PendingPlayer.hair + 1);
-					array9[1] = Lang.menu[38];
-					array[1] = true;
-					array4[2] = 150;
-					array4[1] = 10;
-					array9[2] = Lang.menu[5];
-					int num13 = 51;
-					if (this.selectedMenu == 0)
-					{
-						Main.PlaySound(12, -1, -1, 1);
-						Main.PendingPlayer.hair++;
-						if (Main.PendingPlayer.hair >= num13)
-						{
-							Main.PendingPlayer.hair = 0;
-						}
-					}
-					else if (this.selectedMenu2 == 0)
-					{
-						Main.PlaySound(12, -1, -1, 1);
-						Main.PendingPlayer.hair--;
-						if (Main.PendingPlayer.hair < 0)
-						{
-							Main.PendingPlayer.hair = num13 - 1;
-						}
-					}
-					if (this.selectedMenu == 2)
-					{
-						Main.menuMode = 2;
-						Main.PlaySound(11, -1, -1, 1);
-					}
+				flag4 = true;
+				num6 = Main.screenWidth / 2 - 16;
+				num7 = 210;
+				flag = true;
+				num8 = 390;
+				num = 260;
+				num3 = 60;
+				Main.PendingPlayer.hairColor = Main.selColor;
+				num4 = 3;
+				array9[0] = Lang.menu[37] + " " + (Main.PendingPlayer.hair + 1);
+				array9[1] = Lang.menu[38];
+				array[1] = true;
+				array4[2] = 150;
+				array4[1] = 10;
+				array9[2] = Lang.menu[5];
+				int num13 = 51;
+				if (this.selectedMenu == 0)
+				{
+				    Main.PlaySound(12, -1, -1, 1);
+				    Main.PendingPlayer.hair++;
+				    if (Main.PendingPlayer.hair >= num13)
+				    {
+				        Main.PendingPlayer.hair = 0;
+				    }
+				}
+				else if (this.selectedMenu2 == 0)
+				{
+				    Main.PlaySound(12, -1, -1, 1);
+				    Main.PendingPlayer.hair--;
+				    if (Main.PendingPlayer.hair < 0)
+				    {
+				        Main.PendingPlayer.hair = num13 - 1;
+				    }
+				}
+				if (this.selectedMenu == 2)
+				{
+				    Main.menuMode = 2;
+				    Main.PlaySound(11, -1, -1, 1);
+				}
 				}
 				else if (Main.menuMode == 18)
 				{
-					flag4 = true;
-					num6 = Main.screenWidth / 2 - 16;
-					num7 = 210;
-					flag = true;
-					num8 = 370;
-					num = 240;
-					num3 = 60;
-					Main.PendingPlayer.eyeColor = Main.selColor;
-					num4 = 3;
-					array9[0] = "";
-					array9[1] = Lang.menu[39];
-					array[1] = true;
-					array4[2] = 170;
-					array4[1] = 10;
-					array9[2] = Lang.menu[5];
-					if (this.selectedMenu == 2)
-					{
-						Main.menuMode = 2;
-						Main.PlaySound(11, -1, -1, 1);
-					}
+				flag4 = true;
+				num6 = Main.screenWidth / 2 - 16;
+				num7 = 210;
+				flag = true;
+				num8 = 370;
+				num = 240;
+				num3 = 60;
+				Main.PendingPlayer.eyeColor = Main.selColor;
+				num4 = 3;
+				array9[0] = "";
+				array9[1] = Lang.menu[39];
+				array[1] = true;
+				array4[2] = 170;
+				array4[1] = 10;
+				array9[2] = Lang.menu[5];
+				if (this.selectedMenu == 2)
+				{
+				    Main.menuMode = 2;
+				    Main.PlaySound(11, -1, -1, 1);
+				}
 				}
 				else if (Main.menuMode == 19)
 				{
-					flag4 = true;
-					num6 = Main.screenWidth / 2 - 16;
-					num7 = 210;
-					flag = true;
-					num8 = 370;
-					num = 240;
-					num3 = 60;
-					Main.PendingPlayer.skinColor = Main.selColor;
-					num4 = 3;
-					array9[0] = "";
-					array9[1] = Lang.menu[40];
-					array[1] = true;
-					array4[2] = 170;
-					array4[1] = 10;
-					array9[2] = Lang.menu[5];
-					if (this.selectedMenu == 2)
-					{
-						Main.menuMode = 2;
-						Main.PlaySound(11, -1, -1, 1);
-					}
+				flag4 = true;
+				num6 = Main.screenWidth / 2 - 16;
+				num7 = 210;
+				flag = true;
+				num8 = 370;
+				num = 240;
+				num3 = 60;
+				Main.PendingPlayer.skinColor = Main.selColor;
+				num4 = 3;
+				array9[0] = "";
+				array9[1] = Lang.menu[40];
+				array[1] = true;
+				array4[2] = 170;
+				array4[1] = 10;
+				array9[2] = Lang.menu[5];
+				if (this.selectedMenu == 2)
+				{
+				    Main.menuMode = 2;
+				    Main.PlaySound(11, -1, -1, 1);
+				}
 				}
 				else if (Main.menuMode == 21)
 				{
@@ -37814,82 +_,84 @@
 				}
 				else if (Main.menuMode == 3)
 				{
-					string name = Main.PendingPlayer.name;
-					Main.PendingPlayer.name = Main.GetInputText(Main.PendingPlayer.name);
-					if (Main.PendingPlayer.name.Length > Player.nameLen)
-					{
-						Main.PendingPlayer.name = Main.PendingPlayer.name.Substring(0, Player.nameLen);
-					}
-					if (name != Main.PendingPlayer.name)
-					{
-						Main.PlaySound(12, -1, -1, 1);
-					}
-					array9[0] = Lang.menu[45];
-					array2[2] = true;
-					if (Main.PendingPlayer.name != "")
-					{
-						if (Main.PendingPlayer.name.Substring(0, 1) == " ")
-						{
-							Main.PendingPlayer.name = "";
-						}
-						for (int num14 = 0; num14 < Main.PendingPlayer.name.Length; num14++)
-						{
-							if (Main.PendingPlayer.name.Substring(num14, 1) != " ")
-							{
-								array2[2] = false;
-							}
-						}
-					}
-					this.textBlinkerCount++;
-					if (this.textBlinkerCount >= 20)
-					{
-						if (this.textBlinkerState == 0)
-						{
-							this.textBlinkerState = 1;
-						}
-						else
-						{
-							this.textBlinkerState = 0;
-						}
-						this.textBlinkerCount = 0;
-					}
-					array9[1] = Main.PendingPlayer.name;
-					if (this.textBlinkerState == 1)
-					{
-						string[] array10;
-						(array10 = array9)[1] = array10[1] + "|";
-						array5[1] = 1;
-					}
-					else
-					{
-						string[] array10;
-						(array10 = array9)[1] = array10[1] + " ";
-					}
-					array[0] = true;
-					array[1] = true;
-					array4[1] = -20;
-					array4[2] = 20;
-					array9[2] = Lang.menu[4];
-					array9[3] = Lang.menu[5];
-					num4 = 4;
-					if (this.selectedMenu == 3)
-					{
-						Main.PlaySound(11, -1, -1, 1);
-						Main.menuMode = 2;
-					}
-					if (this.selectedMenu == 2 || (!array2[2] && Main.inputTextEnter))
-					{
-						Main.PendingPlayer.name.Trim();
-						PlayerFileData.CreateAndSave(Main.PendingPlayer);
-						Main.LoadPlayers();
-						Main.PlaySound(10, -1, -1, 1);
-						Main.menuMode = 1;
-					}
-				}
+				string name = Main.PendingPlayer.name;
+				Main.PendingPlayer.name = Main.GetInputText(Main.PendingPlayer.name);
+				if (Main.PendingPlayer.name.Length > Player.nameLen)
+				{
+				    Main.PendingPlayer.name = Main.PendingPlayer.name.Substring(0, Player.nameLen);
+				}
+				if (name != Main.PendingPlayer.name)
+				{
+				    Main.PlaySound(12, -1, -1, 1);
+				}
+				array9[0] = Lang.menu[45];
+				array2[2] = true;
+				if (Main.PendingPlayer.name != "")
+				{
+				    if (Main.PendingPlayer.name.Substring(0, 1) == " ")
+				    {
+				        Main.PendingPlayer.name = "";
+				    }
+				    for (int num14 = 0; num14 < Main.PendingPlayer.name.Length; num14++)
+				    {
+				        if (Main.PendingPlayer.name.Substring(num14, 1) != " ")
+				        {
+				            array2[2] = false;
+				        }
+				    }
+				}
+				this.textBlinkerCount++;
+				if (this.textBlinkerCount >= 20)
+				{
+				    if (this.textBlinkerState == 0)
+				    {
+				        this.textBlinkerState = 1;
+				    }
+				    else
+				    {
+				        this.textBlinkerState = 0;
+				    }
+				    this.textBlinkerCount = 0;
+				}
+				array9[1] = Main.PendingPlayer.name;
+				if (this.textBlinkerState == 1)
+				{
+				    string[] array10;
+				    (array10 = array9)[1] = array10[1] + "|";
+				    array5[1] = 1;
+				}
+				else
+				{
+				    string[] array10;
+				    (array10 = array9)[1] = array10[1] + " ";
+				}
+				array[0] = true;
+				array[1] = true;
+				array4[1] = -20;
+				array4[2] = 20;
+				array9[2] = Lang.menu[4];
+				array9[3] = Lang.menu[5];
+				num4 = 4;
+				if (this.selectedMenu == 3)
+				{
+				    Main.PlaySound(11, -1, -1, 1);
+				    Main.menuMode = 2;
+				}
+				if (this.selectedMenu == 2 || (!array2[2] && Main.inputTextEnter))
+				{
+				    Main.PendingPlayer.name.Trim();
+				    PlayerFileData.CreateAndSave(Main.PendingPlayer);
+				    Main.LoadPlayers();
+				    Main.PlaySound(10, -1, -1, 1);
+				    Main.menuMode = 1;
+				}
+				}
+				*/
 				else if (Main.menuMode != 4)
 				{
 					if (Main.menuMode == 5)
 					{
+						/*
 						array9[0] = Lang.menu[46] + " " + Main.PlayerList[Main.selectedPlayer].Player.name + "?";
 						array[0] = true;
 						array9[1] = Lang.menu[104];
@@ -37897,22 +_,116 @@
 						num4 = 3;
 						if (this.selectedMenu == 1)
 						{
-							Main.ErasePlayer(Main.selectedPlayer);
-							Main.PlaySound(10, -1, -1, 1);
-							Main.menuMode = 1;
+						    Main.ErasePlayer(Main.selectedPlayer);
+						    Main.PlaySound(10, -1, -1, 1);
+						    Main.menuMode = 1;
 						}
 						else if (this.selectedMenu == 2)
 						{
-							Main.PlaySound(11, -1, -1, 1);
-							Main.menuMode = 1;
-						}
+						    Main.PlaySound(11, -1, -1, 1);
+						    Main.menuMode = 1;
+						}
+						*/
 					}
 					else if (Main.menuMode == 6)
 					{
+						num = 180;
+						num3 = 40;
+						numberClickableLabels = 10;
+						array4[7] += 10;
+						array4[8] += 10;
+						array4[9] += 10;
+						for (int num16 = 0; num16 < numberClickableLabels; num16++)
+						{
+							clickableLabelScale[num16] = 0.8f;
+						}
+						clickableLabelText[8] = Lang.menu[17]; // delete
+						if (SettingSaver.numSettingsLoad >= 1000)
+						{
+							array2[7] = true;
+							clickableLabelText[7] = "";
+						}
+						else if (SettingSaver.numSettingsLoad == 0)
+						{
+							array2[8] = true;
+							clickableLabelText[8] = "";
+						}
+						clickableLabelText[9] = Lang.menu[5];
+						for (int num17 = 0; num17 < 7; num17++)
+						{
+							if (num17 + Main.menuSkip < SettingSaver.numSettingsLoad)
+							{
+								clickableLabelText[num17] = SettingSaver.settings[num17 + Main.menuSkip];
+							}
+							else
+							{
+								clickableLabelText[num17] = null;
+							}
+						}
+						if (SettingSaver.numSettingsLoad > 7 + Main.menuSkip)
+						{
+							this.menuWide[6] = true;
+							clickableLabelText[6] = "â–¼";
+							clickableLabelScale[6] = 0.6f;
+							array4[6] += 8;
+						}
+						if (Main.menuSkip > 0)
+						{
+							clickableLabelText[0] = "â–²";
+							clickableLabelScale[0] = 0.6f;
+							array4[0] += 8;
+							this.menuWide[0] = true;
+						}
+						if (this.selectedMenu == 0 && Main.menuSkip > 0)
+						{
+							Main.menuSkip -= 5;
+							if (Main.menuSkip < 0)
+							{
+								Main.menuSkip = 0;
+							}
+						}
+						else if (this.selectedMenu == 6/* && Main.menuSkip < Main.worldCount - 7*/)
+						{
+							Main.menuSkip += 5;
+							//	if (Main.menuSkip >= Main.worldCount - 7)
+							//	{
+							//		Main.menuSkip = Main.worldCount - 7;
+							//	}
+						}
+						else if (this.selectedMenu == 9)
+						{
+							Main.menuMode = 0;
+						}
+						else if (this.selectedMenu == 7)
+						{
+							Main.menuMode = 16;
+							//	Main.newWorldName = Lang.gen[57] + " " + (Main.worldCount + 1);
+						}
+						else if (this.selectedMenu == 8)
+						{
+							Main.menuMode = 8;
+						}
+						/*
+						else if (this.selectedMenu >= 0)
+						{
+							if (Main.menuMultiplayer)
+							{
+							    Main.worldPathName = Main.loadWorldPath[this.selectedMenu + Main.menuSkip];
+							    Main.menuMode = 30;
+							    Main.GetInputText("");
+							}
+							else
+							{
+							    Main.worldPathName = Main.loadWorldPath[this.selectedMenu + Main.menuSkip];
+							    WorldGen.playWorld();
+							    Main.menuMode = 10;
+							}
+						}
 						Main.MenuUI.SetState(Main._worldSelectMenu);
 						Main.menuMode = 888;
-					}
-					else if (Main.menuMode == -7)
+						*/
+					}
+					else if (Main.menuMode == (int)MenuModes.SelectDifficulty /*-7*/)
 					{
 						num = 200;
 						num3 = 60;
@@ -37922,44 +_,44 @@
 						array4[4] = 70;
 						if (this.focusMenu == 2)
 						{
-							array9[0] = "Your Journey Begins...";
-							array9[1] = "(The standard Terraria Experience)";
+							clickableLabelText[0] = "Your Journey Begins...";
+							clickableLabelText[1] = "(The standard Terraria Experience)";
 						}
 						else if (this.focusMenu == 3)
 						{
-							array9[0] = "Fortune & Glory, Kid.";
-							array9[1] = "(Far Greater Difficulty & Loot)";
+							clickableLabelText[0] = "Fortune & Glory, Kid.";
+							clickableLabelText[1] = "(Far Greater Difficulty & Loot)";
 						}
 						else
 						{
-							array9[0] = Lang.menu[32];
+							clickableLabelText[0] = Lang.menu[32];
 						}
 						array[0] = true;
 						array[1] = true;
-						array9[2] = "Normal";
-						array9[3] = "Expert";
-						array9[4] = "Back";
-						num4 = 5;
+						clickableLabelText[2] = "Normal";
+						clickableLabelText[3] = "Expert";
+						clickableLabelText[4] = "Back";
+						numberClickableLabels = 5;
 						if (this.selectedMenu == 2)
 						{
 							Main.expertMode = false;
 							Main.PlaySound(10, -1, -1, 1);
-							Main.menuMode = 7;
+							Main.menuMode = (int)MenuModes.EnterWorldName/*7*/;
 						}
 						else if (this.selectedMenu == 3)
 						{
 							Main.expertMode = true;
 							Main.PlaySound(10, -1, -1, 1);
-							Main.menuMode = 7;
+							Main.menuMode = (int)MenuModes.EnterWorldName /*7*/;
 						}
 						else if (this.selectedMenu == 4)
 						{
 							Main.PlaySound(11, -1, -1, 1);
-							Main.menuMode = 16;
+							Main.menuMode = (int)MenuModes.ChooseWorldSize /*0*/;
 						}
 						Main.clrInput();
 					}
-					else if (Main.menuMode == 7)
+					else if (Main.menuMode == (int)MenuModes.EnterWorldName /*7*/)
 					{
 						string a = Main.newWorldName;
 						Main.newWorldName = Main.GetInputText(Main.newWorldName);
@@ -37971,7 +_,7 @@
 						{
 							Main.PlaySound(12, -1, -1, 1);
 						}
-						array9[0] = Lang.menu[48];
+						clickableLabelText[0] = Lang.menu[48];
 						array2[2] = true;
 						if (Main.newWorldName != "")
 						{
@@ -38000,76 +_,81 @@
 							}
 							this.textBlinkerCount = 0;
 						}
-						array9[1] = Main.newWorldName;
+						clickableLabelText[1] = Main.newWorldName;
 						if (this.textBlinkerState == 1)
 						{
 							string[] array10;
-							(array10 = array9)[1] = array10[1] + "|";
+							(array10 = clickableLabelText)[1] = array10[1] + "|";
 							array5[1] = 1;
 						}
 						else
 						{
 							string[] array10;
-							(array10 = array9)[1] = array10[1] + " ";
+							(array10 = clickableLabelText)[1] = array10[1] + " ";
 						}
 						array[0] = true;
 						array[1] = true;
 						array4[1] = -20;
 						array4[2] = 20;
-						array9[2] = Lang.menu[4];
-						array9[3] = Lang.menu[5];
-						num4 = 4;
+						clickableLabelText[2] = Lang.menu[4];
+						clickableLabelText[3] = Lang.menu[5];
+						numberClickableLabels = 4;
 						if (this.selectedMenu == 3)
 						{
 							Main.PlaySound(11, -1, -1, 1);
-							Main.menuMode = -7;
+							Main.menuMode = (int)MenuModes.SelectDifficulty /*- 7*/; // 0?? -7 is Expert mode selection
+							// World size -> difficulty -> name
 						}
 						if (this.selectedMenu == 2 || (!array2[2] && Main.inputTextEnter))
 						{
-							Main.menuMode = 10;
-							Main.worldName = Main.newWorldName;
-							Main.ActiveWorldFileData = WorldFile.CreateMetadata(Main.worldName, SocialAPI.Cloud != null && SocialAPI.Cloud.EnabledByDefault, Main.expertMode);
-							WorldGen.CreateNewWorld(null);
+							Main.menuMode = (int)MenuModes.Settings /*11*/; // 11?
+							//   Main.worldName = Main.newWorldName;
+							//    Main.ActiveWorldFileData = WorldFile.CreateMetadata(Main.worldName, SocialAPI.Cloud != null && SocialAPI.Cloud.EnabledByDefault, Main.expertMode);
+							//   WorldGen.CreateNewWorld(null);
 						}
 					}
 					else if (Main.menuMode == 8)
 					{
+						SettingSaver settingSaver = new SettingSaver();
+						settingSaver.getSettings();
 						num = 180;
 						num3 = 40;
-						num4 = 8;
+						numberClickableLabels = 8;
 						array4[7] += 30;
-						for (int num16 = 0; num16 < num4; num16++)
-						{
-							array7[num16] = 0.8f;
-						}
-						array9[7] = Lang.menu[5];
+						for (int num16 = 0; num16 < numberClickableLabels; num16++)
+						{
+							clickableLabelScale[num16] = 0.8f;
+						}
+						clickableLabelText[7] = Lang.menu[5];
 						for (int num17 = 0; num17 < 7; num17++)
 						{
-							if (num17 < Main.WorldList.Count)
-							{
-								array9[num17] = Main.WorldList[num17 + Main.menuSkip].Name;
-								if (Main.WorldList[num17 + Main.menuSkip].IsExpertMode)
-								{
-									array6[num17] = 2;
-								}
+							//if (num17 < Main.WorldList.Count)
+							if (num17 < SettingSaver.numSettingsLoad)
+							{
+								clickableLabelText[num17] = SettingSaver.settings[num17 + Main.menuSkip]; //Main.WorldList[num17 + Main.menuSkip].Name;
+								//if (Main.WorldList[num17 + Main.menuSkip].IsExpertMode)
+								//{
+								//    array6[num17] = 2;
+								//}
 							}
 							else
 							{
-								array9[num17] = null;
-							}
-						}
-						if (Main.WorldList.Count > 7 + Main.menuSkip)
-						{
-							array9[6] = "more";
-							array9[6] = "▼";
-							array7[6] = 0.6f;
+								clickableLabelText[num17] = null;
+							}
+						}
+						if (SettingSaver.numSettingsLoad > 7 + Main.menuSkip)
+						//if (Main.WorldList.Count > 7 + Main.menuSkip)
+						{
+							clickableLabelText[6] = "more";
+							clickableLabelText[6] = "▼";
+							clickableLabelScale[6] = 0.6f;
 							array4[6] += 8;
 							this.menuWide[6] = true;
 						}
 						if (Main.menuSkip > 0)
 						{
-							array9[0] = "▲";
-							array7[0] = 0.6f;
+							clickableLabelText[0] = "▲";
+							clickableLabelScale[0] = 0.6f;
 							array4[0] += 8;
 							this.menuWide[0] = true;
 						}
@@ -38103,6 +_,7 @@
 							Main.menuMode = 9;
 						}
 					}
+					/*
 					else if (Main.menuMode == 9)
 					{
 						array9[0] = Lang.menu[46] + " " + Main.WorldList[Main.selectedWorld].Name + "?";
@@ -38122,368 +_,12 @@
 							Main.menuMode = 6;
 						}
 					}
-					else if (Main.menuMode == 1111)
-					{
-						num = 210;
-						num3 = 40;
-						for (int num18 = 0; num18 < 8; num18++)
-						{
-							array7[num18] = 0.8f;
-						}
-						array4[8] = 10;
-						num4 = 9;
-						if (Main.graphics.IsFullScreen)
-						{
-							array9[0] = Lang.menu[49];
-						}
-						else
-						{
-							array9[0] = Lang.menu[50];
-						}
-						Main.bgScroll = (int)Math.Round((double)((1f - Main.caveParallax) * 500f));
-						array9[1] = Lang.menu[51];
-						array9[2] = Lang.menu[52];
-						if (Main.terrariasFixedTiming)
-						{
-							array9[3] = Lang.menu[53];
-						}
-						else
-						{
-							array9[3] = Lang.menu[54];
-						}
-						if (Lighting.lightMode == 0)
-						{
-							array9[4] = Lang.menu[55];
-						}
-						else if (Lighting.lightMode == 1)
-						{
-							array9[4] = Lang.menu[56];
-						}
-						else if (Lighting.lightMode == 2)
-						{
-							array9[4] = Lang.menu[57];
-						}
-						else if (Lighting.lightMode == 3)
-						{
-							array9[4] = Lang.menu[58];
-						}
-						if (Lighting.LightingThreads == 0)
-						{
-							array9[5] = Lang.menu[116] + " " + Lang.menu[117];
-						}
-						else
-						{
-							array9[5] = Lang.menu[116] + " " + (Lighting.LightingThreads + 1);
-						}
-						if (Main.qaStyle == 0)
-						{
-							array9[6] = Lang.menu[59];
-						}
-						else if (Main.qaStyle == 1)
-						{
-							array9[6] = Lang.menu[60];
-						}
-						else if (Main.qaStyle == 2)
-						{
-							array9[6] = Lang.menu[61];
-						}
-						else
-						{
-							array9[6] = Lang.menu[62];
-						}
-						if (Main.owBack)
-						{
-							array9[7] = Lang.menu[100];
-						}
-						else
-						{
-							array9[7] = Lang.menu[101];
-						}
-						if (this.selectedMenu == 7)
-						{
-							Main.PlaySound(12, -1, -1, 1);
-							if (Main.owBack)
-							{
-								Main.owBack = false;
-							}
-							else
-							{
-								Main.owBack = true;
-							}
-						}
-						array9[8] = Lang.menu[5];
-						if (this.selectedMenu == 8)
-						{
-							Main.PlaySound(11, -1, -1, 1);
-							Main.SaveSettings();
-							Main.menuMode = 11;
-						}
-						if (this.selectedMenu == 6)
-						{
-							Main.PlaySound(12, -1, -1, 1);
-							Main.qaStyle++;
-							if (Main.qaStyle > 3)
-							{
-								Main.qaStyle = 0;
-							}
-						}
-						if (this.selectedMenu == 5)
-						{
-							Main.PlaySound(12, -1, -1, 1);
-							Lighting.LightingThreads++;
-							if (Lighting.LightingThreads > Environment.ProcessorCount - 1)
-							{
-								Lighting.LightingThreads = 0;
-							}
-						}
-						if (this.selectedMenu == 4)
-						{
-							Main.PlaySound(12, -1, -1, 1);
-							Lighting.lightMode++;
-							if (Lighting.lightMode >= 4)
-							{
-								Lighting.lightMode = 0;
-							}
-						}
-						if (this.selectedMenu == 3)
-						{
-							Main.PlaySound(12, -1, -1, 1);
-							if (Main.terrariasFixedTiming)
-							{
-								Main.terrariasFixedTiming = false;
-							}
-							else
-							{
-								Main.terrariasFixedTiming = true;
-							}
-						}
-						if (this.selectedMenu == 2)
-						{
-							Main.PlaySound(11, -1, -1, 1);
-							Main.menuMode = 28;
-						}
-						if (this.selectedMenu == 1)
-						{
-							Main.PlaySound(10, -1, -1, 1);
-							Main.menuMode = 111;
-						}
-						if (this.selectedMenu == 0)
-						{
-							Main.ToggleFullScreen();
-						}
-					}
-					else if (Main.menuMode == 11)
-					{
-						num = 240;
-						num3 = 37;
-						num4 = 8;
-						array4[num4 - 1] = 8;
-						for (int num19 = 0; num19 < num4; num19++)
-						{
-							array7[num19] = 0.73f;
-						}
-						int num20 = 0;
-						array9[num20] = Lang.menu[114];
-						if (this.selectedMenu == num20)
-						{
-							Main.PlaySound(10, -1, -1, 1);
-							Main.menuMode = 112;
-						}
-						num20++;
-						array9[num20] = Lang.menu[63];
-						if (this.selectedMenu == num20)
-						{
-							Main.PlaySound(10, -1, -1, 1);
-							Main.menuMode = 1111;
-						}
-						num20++;
-						array9[num20] = Lang.menu[64];
-						if (this.selectedMenu == num20)
-						{
-							Main.PlaySound(10, -1, -1, 1);
-							Main.selColor = Main.mouseColor;
-							Main.menuMode = 25;
-						}
-						num20++;
-						array9[num20] = Lang.menu[65];
-						if (this.selectedMenu == num20)
-						{
-							Main.PlaySound(11, -1, -1, 1);
-							Main.menuMode = 26;
-						}
-						num20++;
-						array9[num20] = Lang.menu[66];
-						if (this.selectedMenu == num20)
-						{
-							Main.PlaySound(11, -1, -1, 1);
-							Main.menuMode = 27;
-						}
-						num20++;
-						array9[num20] = Lang.menu[115];
-						if (this.selectedMenu == num20)
-						{
-							Main.PlaySound(11, -1, -1, 1);
-							Main.menuMode = 272727;
-						}
-						num20++;
-						array9[num20] = Lang.menu[103];
-						if (this.selectedMenu == num20)
-						{
-							Main.PlaySound(10, -1, -1, 1);
-							Main.menuMode = 1213;
-						}
-						num20++;
-						array9[num20] = Lang.menu[5];
-						if (this.selectedMenu == num20)
-						{
-							Main.PlaySound(11, -1, -1, 1);
-							Main.menuMode = 0;
-							Main.SaveSettings();
-						}
-					}
-					else if (Main.menuMode == 112)
-					{
-						num = 220;
-						num3 = 34;
-						num4 = 10;
-						array4[num4 - 1] = 18;
-						for (int num21 = 0; num21 < num4; num21++)
-						{
-							array7[num21] = 0.73f;
-						}
-						int num22 = 0;
-						if (Main.autoSave)
-						{
-							array9[num22] = Lang.menu[67];
-						}
-						else
-						{
-							array9[num22] = Lang.menu[68];
-						}
-						if (this.selectedMenu == num22)
-						{
-							Main.PlaySound(12, -1, -1, 1);
-							if (Main.autoSave)
-							{
-								Main.autoSave = false;
-							}
-							else
-							{
-								Main.autoSave = true;
-							}
-						}
-						num22++;
-						if (Main.autoPause)
-						{
-							array9[num22] = Lang.menu[69];
-						}
-						else
-						{
-							array9[num22] = Lang.menu[70];
-						}
-						if (this.selectedMenu == num22)
-						{
-							Main.PlaySound(12, -1, -1, 1);
-							if (Main.autoPause)
-							{
-								Main.autoPause = false;
-							}
-							else
-							{
-								Main.autoPause = true;
-							}
-						}
-						num22++;
-						if (Main.showItemText)
-						{
-							array9[num22] = Lang.menu[71];
-						}
-						else
-						{
-							array9[num22] = Lang.menu[72];
-						}
-						if (this.selectedMenu == num22)
-						{
-							Main.PlaySound(12, -1, -1, 1);
-							if (Main.showItemText)
-							{
-								Main.showItemText = false;
-							}
-							else
-							{
-								Main.showItemText = true;
-							}
-						}
-						num22++;
-						if (Main.mapEnabled)
-						{
-							array9[num22] = Lang.menu[112];
-						}
-						else
-						{
-							array9[num22] = Lang.menu[113];
-						}
-						if (this.selectedMenu == num22)
-						{
-							Main.PlaySound(12, -1, -1, 1);
-							if (Main.mapEnabled)
-							{
-								Main.mapEnabled = false;
-							}
-							else
-							{
-								Main.mapEnabled = true;
-							}
-						}
-						num22++;
-						array9[num22] = (Main.cSmartToggle ? Lang.menu[121] : Lang.menu[122]);
-						if (this.selectedMenu == num22)
-						{
-							Main.PlaySound(12, -1, -1, 1);
-							Main.cSmartToggle = !Main.cSmartToggle;
-						}
-						num22++;
-						array9[num22] = Lang.menu[123] + " " + Lang.menu[124 + Main.invasionProgressMode];
-						if (this.selectedMenu == num22)
-						{
-							Main.PlaySound(12, -1, -1, 1);
-							Main.invasionProgressMode++;
-							if (Main.invasionProgressMode >= 3)
-							{
-								Main.invasionProgressMode = 0;
-							}
-						}
-						num22++;
-						array9[num22] = (Main.placementPreview ? Lang.menu[128] : Lang.menu[129]);
-						if (this.selectedMenu == num22)
-						{
-							Main.PlaySound(12, -1, -1, 1);
-							Main.placementPreview = !Main.placementPreview;
-						}
-						num22++;
-						array9[num22] = (ChildSafety.Disabled ? Lang.menu[132] : Lang.menu[133]);
-						if (this.selectedMenu == num22)
-						{
-							Main.PlaySound(12, -1, -1, 1);
-							ChildSafety.Disabled = !ChildSafety.Disabled;
-						}
-						num22++;
-						array9[num22] = (ItemSlot.Options.HighlightNewItems ? Lang.inter[117] : Lang.inter[116]);
-						if (this.selectedMenu == num22)
-						{
-							Main.PlaySound(12, -1, -1, 1);
-							ItemSlot.Options.HighlightNewItems = !ItemSlot.Options.HighlightNewItems;
-						}
-						num22++;
-						array9[num22] = Lang.menu[5];
-						if (this.selectedMenu == num22)
-						{
-							Main.menuMode = 11;
-							Main.PlaySound(11, -1, -1, 1);
-						}
-					}
+					*/
+
+
 					else if (Main.menuMode == 111)
 					{
+						/*
 						num = 240;
 						num3 = 60;
 						num4 = 4;
@@ -38497,74 +_,147 @@
 						array4[3] = 140;
 						if (this.selectedMenu == 1)
 						{
-							Main.PlaySound(12, -1, -1, 1);
-							int num23 = 0;
-							for (int num24 = 0; num24 < Main.numDisplayModes; num24++)
-							{
-								if (Main.displayWidth[num24] == Main.PendingResolutionWidth && Main.displayHeight[num24] == Main.PendingResolutionHeight)
-								{
-									num23 = num24;
+						    Main.PlaySound(12, -1, -1, 1);
+						    int num23 = 0;
+						    for (int num24 = 0; num24 < Main.numDisplayModes; num24++)
+						    {
+						        if (Main.displayWidth[num24] == Main.PendingResolutionWidth && Main.displayHeight[num24] == Main.PendingResolutionHeight)
+						        {
+						            num23 = num24;
+						            break;
+						        }
+						    }
+						    num23 = (num23 + 1) % Main.numDisplayModes;
+						    Main.PendingResolutionWidth = Main.displayWidth[num23];
+						    Main.PendingResolutionHeight = Main.displayHeight[num23];
+						}
+						if (this.selectedMenu == 2)
+						{
+						    if (Main.graphics.IsFullScreen)
+						    {
+						        Main.SetResolution(Main.PendingResolutionWidth, Main.PendingResolutionHeight);
+						    }
+						    Main.PlaySound(11, -1, -1, 1);
+						    Main.menuMode = 1111;
+						}
+						if (this.selectedMenu == 3)
+						{
+						    Main.PendingResolutionWidth = Main.graphics.PreferredBackBufferWidth;
+						    Main.PendingResolutionHeight = Main.graphics.PreferredBackBufferHeight;
+						    Main.menuMode = 1111;
+						    Main.PlaySound(11, -1, -1, 1);
+						}
+						*/
+						num = 200;
+						num3 = 30;
+						numberClickableLabels = 2;
+						for (int num29 = 0; num29 < numberClickableLabels; num29++)
+						{
+							clickableLabelScale[num29] = 0.73f;
+						}
+						clickableLabelText[0] = "Reset Biome Amount";
+						if (this.selectedMenu == 0)
+						{
+							//	WorldGen.initializeBiomeAmount();
+						}
+						clickableLabelScale[0] = 0.53f;
+						array4[0] = -17;
+						string text2 = "setting x1 will generate default amount of biomes";
+						int num30 = Main.screenWidth / 2 - 220;
+						int num31 = 240;
+						Utils.DrawBorderStringFourWay(Main.spriteBatch, Main.fontDeathText, text2, (float)num30, (float)num31, Microsoft.Xna.Framework.Color.White, Microsoft.Xna.Framework.Color.Black, Vector2.Zero, 0.5f);
+						clickableLabelText[1] = Lang.menu[5];
+						if (this.selectedMenu == 1)
+						{
+							Main.menuMode = (int)MenuModes.Settings  /*11*/;
+						}
+						int num32 = num31 + 30;
+						string text3 = "";
+						for (int num33 = 0; num33 < 6; num33++)
+						{
+							int num345 = num32;
+							int num35 = 390 + Main.screenWidth / 2 - 400;
+							switch (num33)
+							{
+								case 0:
+									text3 = "Snow:";
 									break;
-								}
-							}
-							num23 = (num23 + 1) % Main.numDisplayModes;
-							Main.PendingResolutionWidth = Main.displayWidth[num23];
-							Main.PendingResolutionHeight = Main.displayHeight[num23];
-						}
-						if (this.selectedMenu == 2)
-						{
-							if (Main.graphics.IsFullScreen)
-							{
-								Main.SetResolution(Main.PendingResolutionWidth, Main.PendingResolutionHeight);
-							}
-							Main.PlaySound(11, -1, -1, 1);
-							Main.menuMode = 1111;
-						}
-						if (this.selectedMenu == 3)
-						{
-							Main.PendingResolutionWidth = Main.graphics.PreferredBackBufferWidth;
-							Main.PendingResolutionHeight = Main.graphics.PreferredBackBufferHeight;
-							Main.menuMode = 1111;
-							Main.PlaySound(11, -1, -1, 1);
-						}
-					}
-					else if (Main.menuMode == 25)
-					{
-						flag = true;
-						num8 = 370;
-						num = 240;
-						num3 = 60;
-						Main.mouseColor = Main.selColor;
-						num4 = 3;
-						array9[0] = "";
-						array9[1] = Lang.menu[64];
-						array[1] = true;
-						array4[2] = 170;
-						array4[1] = 10;
-						array9[2] = Lang.menu[5];
-						if (this.selectedMenu == 2)
-						{
-							Main.menuMode = 11;
-							Main.PlaySound(11, -1, -1, 1);
-						}
-					}
-					else if (Main.menuMode == 26)
-					{
-						flag2 = true;
-						num = 240;
-						num3 = 60;
-						num4 = 3;
-						array9[0] = "";
-						array9[1] = Lang.menu[65];
-						array[1] = true;
-						array4[2] = 170;
-						array4[1] = 10;
-						array9[2] = Lang.menu[5];
-						if (this.selectedMenu == 2)
-						{
-							Main.menuMode = 11;
-							Main.PlaySound(11, -1, -1, 1);
-						}
+								case 1:
+									text3 = "Jungle:";
+									num345 += 30;
+									break;
+								case 2:
+									text3 = "Gem Cave:";
+									num345 += 60;
+									break;
+								case 3:
+									text3 = "x" + Math.Round((double)(Main.setting.PercSnow * 500f));
+									num35 += 180;
+									break;
+								case 4:
+									text3 = "x" + Math.Round((double)(Main.setting.PercJungle * 500f));
+									num35 += 180;
+									num345 += 30;
+									break;
+								case 5:
+									text3 = "x" + Math.Round((double)Main.setting.MultiGemCave * 20.0);
+									num35 += 180;
+									num345 += 60;
+									break;
+							}
+							Microsoft.Xna.Framework.Color textColor = color;
+							textColor.R = (byte)((255 + textColor.R) / 2);
+							textColor.G = (byte)((255 + textColor.R) / 2);
+							textColor.B = (byte)((255 + textColor.R) / 2);
+							int num36 = 255;
+							int num37 = (int)textColor.R - (255 - num36);
+							if (num37 < 0)
+							{
+								num37 = 0;
+							}
+							textColor = new Microsoft.Xna.Framework.Color((int)((byte)num37), (int)((byte)num37), (int)((byte)num37), (int)((byte)num36));
+							Utils.DrawBorderStringFourWay(Main.spriteBatch, Main.fontDeathText, text3, (float)num35, (float)num345, textColor, Microsoft.Xna.Framework.Color.Black, Vector2.Zero, 0.5f);
+						}
+						IngameOptions.rightHover = -1;
+						if (!Main.mouseLeft)
+						{
+							IngameOptions.rightLock = -1;
+						}
+						IngameOptions.valuePosition = new Vector2((float)(Main.screenWidth / 2 - 40), (float)(num32 - 18 + 30));
+						float percSnow = IngameOptions.DrawValueBar(Main.spriteBatch, 1.3f, Main.setting.PercSnow);
+						if (IngameOptions.inBar || IngameOptions.rightLock == 2)
+						{
+							IngameOptions.rightHover = 2;
+							if (Main.mouseLeft && IngameOptions.rightLock == 2)
+							{
+								Main.setting.PercSnow = percSnow;
+							}
+						}
+						IngameOptions.valuePosition = new Vector2((float)(Main.screenWidth / 2 - 40), (float)(num32 - 18 + 60));
+						float percJungle = IngameOptions.DrawValueBar(Main.spriteBatch, 1.3f, Main.setting.PercJungle);
+						if (IngameOptions.inBar || IngameOptions.rightLock == 3)
+						{
+							IngameOptions.rightHover = 3;
+							if (Main.mouseLeft && IngameOptions.rightLock == 3)
+							{
+								Main.setting.PercJungle = percJungle;
+							}
+						}
+						IngameOptions.valuePosition = new Vector2((float)(Main.screenWidth / 2 - 40), (float)(num32 - 18 + 90));
+						float multiGemCave = IngameOptions.DrawValueBar(Main.spriteBatch, 1.3f, Main.setting.MultiGemCave);
+						if (IngameOptions.inBar || IngameOptions.rightLock == 4)
+						{
+							IngameOptions.rightHover = 4;
+							if (Main.mouseLeft && IngameOptions.rightLock == 4)
+							{
+								Main.setting.MultiGemCave = multiGemCave;
+							}
+						}
+						if (IngameOptions.rightHover != -1)
+						{
+							IngameOptions.rightLock = IngameOptions.rightHover;
+						}
+						array4[1] = 300;
 					}
 					else if (Main.menuMode == 28)
 					{
@@ -38572,280 +_,284 @@
 						flag3 = true;
 						num = 240;
 						num3 = 60;
-						num4 = 3;
-						array9[0] = "";
-						array9[1] = Lang.menu[52];
+						numberClickableLabels = 3;
+						clickableLabelText[0] = "";
+						clickableLabelText[1] = Lang.menu[52];
 						array[1] = true;
 						array4[2] = 170;
 						array4[1] = 10;
-						array9[2] = Lang.menu[5];
+						clickableLabelText[2] = Lang.menu[5];
 						if (this.selectedMenu == 2)
 						{
 							Main.menuMode = 1111;
-							Main.PlaySound(11, -1, -1, 1);
-						}
-					}
-					else if (Main.menuMode == 272727)
-					{
-						num = 200;
-						num3 = 30;
-						num4 = 14;
-						string[] array11 = new string[12];
-						array11[0] = Main.cMapStyle;
-						array11[1] = Main.cMapFull;
-						array11[2] = Main.cMapZoomIn;
-						array11[3] = Main.cMapZoomOut;
-						array11[4] = Main.cMapAlphaUp;
-						array11[5] = Main.cMapAlphaDown;
-						if (Main.setKey >= 0)
-						{
-							array11[Main.setKey] = "_";
-						}
-						array9[0] = Lang.menu[106] + array11[0];
-						array9[1] = Lang.menu[107] + array11[1];
-						array9[2] = Lang.menu[108] + array11[2];
-						array9[3] = Lang.menu[109] + array11[3];
-						array9[4] = Lang.menu[110] + array11[4];
-						array9[5] = Lang.menu[111] + array11[5];
-						for (int num25 = 0; num25 < 6; num25++)
-						{
-							array8[num25] = true;
-							array7[num25] = 0.55f;
-							array5[num25] = -140;
-						}
-						array7[6] = 0.8f;
-						array7[6] = 0.8f;
-						array4[6] = 6;
-						array9[6] = Lang.menu[86];
-						array4[7] = 16;
-						array9[7] = Lang.menu[5];
-						if (this.selectedMenu == 7)
-						{
-							Main.menuMode = 11;
-							Main.PlaySound(11, -1, -1, 1);
-						}
-						else if (this.selectedMenu == 6)
-						{
-							Main.cMapStyle = "Tab";
-							Main.cMapFull = "M";
-							Main.cMapZoomIn = "Add";
-							Main.cMapZoomOut = "Subtract";
-							Main.cMapAlphaUp = "PageUp";
-							Main.cMapAlphaDown = "PageDown";
-							Main.setKey = -1;
-							Main.PlaySound(11, -1, -1, 1);
-						}
-						else if (this.selectedMenu >= 0)
-						{
-							Main.setKey = this.selectedMenu;
-						}
-						if (Main.setKey >= 0)
-						{
-							Microsoft.Xna.Framework.Input.Keys[] pressedKeys = Main.keyState.GetPressedKeys();
-							if (pressedKeys.Length > 0)
-							{
-								string a2 = string.Concat(pressedKeys[0]);
-								if (a2 != "None")
-								{
-									if (Main.setKey == 0)
+							/*
+								Main.PlaySound(11, -1, -1, 1);
+							}
+						}
+						else if (Main.menuMode == 272727)
+						{
+							num = 200;
+							num3 = 30;
+							num4 = 14;
+							string[] array11 = new string[12];
+							array11[0] = Main.cMapStyle;
+							array11[1] = Main.cMapFull;
+							array11[2] = Main.cMapZoomIn;
+							array11[3] = Main.cMapZoomOut;
+							array11[4] = Main.cMapAlphaUp;
+							array11[5] = Main.cMapAlphaDown;
+							if (Main.setKey >= 0)
+							{
+								array11[Main.setKey] = "_";
+							}
+							array9[0] = Lang.menu[106] + array11[0];
+							array9[1] = Lang.menu[107] + array11[1];
+							array9[2] = Lang.menu[108] + array11[2];
+							array9[3] = Lang.menu[109] + array11[3];
+							array9[4] = Lang.menu[110] + array11[4];
+							array9[5] = Lang.menu[111] + array11[5];
+							for (int num25 = 0; num25 < 6; num25++)
+							{
+								array8[num25] = true;
+								array7[num25] = 0.55f;
+								array5[num25] = -140;
+							}
+							array7[6] = 0.8f;
+							array7[6] = 0.8f;
+							array4[6] = 6;
+							array9[6] = Lang.menu[86];
+							array4[7] = 16;
+							array9[7] = Lang.menu[5];
+							if (this.selectedMenu == 7)
+							{
+								Main.menuMode = 11;
+								Main.PlaySound(11, -1, -1, 1);
+							}
+							else if (this.selectedMenu == 6)
+							{
+								Main.cMapStyle = "Tab";
+								Main.cMapFull = "M";
+								Main.cMapZoomIn = "Add";
+								Main.cMapZoomOut = "Subtract";
+								Main.cMapAlphaUp = "PageUp";
+								Main.cMapAlphaDown = "PageDown";
+								Main.setKey = -1;
+								Main.PlaySound(11, -1, -1, 1);
+							}
+							else if (this.selectedMenu >= 0)
+							{
+								Main.setKey = this.selectedMenu;
+							}
+							if (Main.setKey >= 0)
+							{
+								Microsoft.Xna.Framework.Input.Keys[] pressedKeys = Main.keyState.GetPressedKeys();
+								if (pressedKeys.Length > 0)
+								{
+									string a2 = string.Concat(pressedKeys[0]);
+									if (a2 != "None")
 									{
-										Main.cMapStyle = a2;
+										if (Main.setKey == 0)
+										{
+											Main.cMapStyle = a2;
+										}
+										if (Main.setKey == 1)
+										{
+											Main.cMapFull = a2;
+										}
+										if (Main.setKey == 2)
+										{
+											Main.cMapZoomIn = a2;
+										}
+										if (Main.setKey == 3)
+										{
+											Main.cMapZoomOut = a2;
+										}
+										if (Main.setKey == 4)
+										{
+											Main.cMapAlphaUp = a2;
+										}
+										if (Main.setKey == 5)
+										{
+											Main.cMapAlphaDown = a2;
+										}
+										Main.setKey = -1;
 									}
-									if (Main.setKey == 1)
+								}
+							}
+						}
+						else if (Main.menuMode == 27)
+						{
+							num = 176;
+							num3 = 22;
+							num4 = 16;
+							string[] array12 = new string[]
+							{
+								Main.cUp,
+								Main.cDown,
+								Main.cLeft,
+								Main.cRight,
+								Main.cJump,
+								Main.cThrowItem,
+								Main.cInv,
+								Main.cHeal,
+								Main.cMana,
+								Main.cBuff,
+								Main.cHook,
+								Main.cTorch,
+								Main.cSmart,
+								Main.cMount
+							};
+							if (Main.setKey >= 0)
+							{
+								array12[Main.setKey] = "_";
+							}
+							array9[0] = Lang.menu[74] + array12[0];
+							array9[1] = Lang.menu[75] + array12[1];
+							array9[2] = Lang.menu[76] + array12[2];
+							array9[3] = Lang.menu[77] + array12[3];
+							array9[4] = Lang.menu[78] + array12[4];
+							array9[5] = Lang.menu[79] + array12[5];
+							array9[6] = Lang.menu[80] + array12[6];
+							array9[7] = Lang.menu[81] + array12[7];
+							array9[8] = Lang.menu[82] + array12[8];
+							array9[9] = Lang.menu[83] + array12[9];
+							array9[10] = Lang.menu[84] + array12[10];
+							array9[11] = Lang.menu[85] + array12[11];
+							array9[12] = Lang.menu[120] + array12[12];
+							array9[13] = Lang.menu[130] + array12[13];
+							for (int num26 = 0; num26 < 14; num26++)
+							{
+								array8[num26] = true;
+								array7[num26] = 0.45f;
+								array5[num26] = -80;
+							}
+							array7[14] = 0.8f;
+							array4[14] = 6;
+							array9[14] = Lang.menu[86];
+							array7[15] = 0.8f;
+							array4[15] = 16;
+							array9[15] = Lang.menu[5];
+							if (this.selectedMenu == 15)
+							{
+								Main.menuMode = 11;
+								Main.PlaySound(11, -1, -1, 1);
+							}
+							else if (this.selectedMenu == 14)
+							{
+								Main.ResetKeyBindings();
+								Main.setKey = -1;
+								Main.PlaySound(11, -1, -1, 1);
+							}
+							else if (this.selectedMenu >= 0)
+							{
+								Main.setKey = this.selectedMenu;
+							}
+							if (Main.setKey >= 0)
+							{
+								Microsoft.Xna.Framework.Input.Keys[] pressedKeys2 = Main.keyState.GetPressedKeys();
+								if (pressedKeys2.Length > 0)
+								{
+									string a3 = string.Concat(pressedKeys2[0]);
+									if (a3 != "None")
 									{
-										Main.cMapFull = a2;
+										if (Main.setKey == 0)
+										{
+											Main.cUp = a3;
+										}
+										if (Main.setKey == 1)
+										{
+											Main.cDown = a3;
+										}
+										if (Main.setKey == 2)
+										{
+											Main.cLeft = a3;
+										}
+										if (Main.setKey == 3)
+										{
+											Main.cRight = a3;
+										}
+										if (Main.setKey == 4)
+										{
+											Main.cJump = a3;
+										}
+										if (Main.setKey == 5)
+										{
+											Main.cThrowItem = a3;
+										}
+										if (Main.setKey == 6)
+										{
+											Main.cInv = a3;
+										}
+										if (Main.setKey == 7)
+										{
+											Main.cHeal = a3;
+										}
+										if (Main.setKey == 8)
+										{
+											Main.cMana = a3;
+										}
+										if (Main.setKey == 9)
+										{
+											Main.cBuff = a3;
+										}
+										if (Main.setKey == 10)
+										{
+											Main.cHook = a3;
+										}
+										if (Main.setKey == 11)
+										{
+											Main.cTorch = a3;
+										}
+										if (Main.setKey == 12)
+										{
+											Main.cSmart = a3;
+										}
+										if (Main.setKey == 13)
+										{
+											Main.cMount = a3;
+										}
+										Main.setKey = -1;
 									}
-									if (Main.setKey == 2)
-									{
-										Main.cMapZoomIn = a2;
-									}
-									if (Main.setKey == 3)
-									{
-										Main.cMapZoomOut = a2;
-									}
-									if (Main.setKey == 4)
-									{
-										Main.cMapAlphaUp = a2;
-									}
-									if (Main.setKey == 5)
-									{
-										Main.cMapAlphaDown = a2;
-									}
-									Main.setKey = -1;
-								}
-							}
-						}
-					}
-					else if (Main.menuMode == 27)
-					{
-						num = 176;
-						num3 = 22;
-						num4 = 16;
-						string[] array12 = new string[]
-						{
-							Main.cUp,
-							Main.cDown,
-							Main.cLeft,
-							Main.cRight,
-							Main.cJump,
-							Main.cThrowItem,
-							Main.cInv,
-							Main.cHeal,
-							Main.cMana,
-							Main.cBuff,
-							Main.cHook,
-							Main.cTorch,
-							Main.cSmart,
-							Main.cMount
-						};
-						if (Main.setKey >= 0)
-						{
-							array12[Main.setKey] = "_";
-						}
-						array9[0] = Lang.menu[74] + array12[0];
-						array9[1] = Lang.menu[75] + array12[1];
-						array9[2] = Lang.menu[76] + array12[2];
-						array9[3] = Lang.menu[77] + array12[3];
-						array9[4] = Lang.menu[78] + array12[4];
-						array9[5] = Lang.menu[79] + array12[5];
-						array9[6] = Lang.menu[80] + array12[6];
-						array9[7] = Lang.menu[81] + array12[7];
-						array9[8] = Lang.menu[82] + array12[8];
-						array9[9] = Lang.menu[83] + array12[9];
-						array9[10] = Lang.menu[84] + array12[10];
-						array9[11] = Lang.menu[85] + array12[11];
-						array9[12] = Lang.menu[120] + array12[12];
-						array9[13] = Lang.menu[130] + array12[13];
-						for (int num26 = 0; num26 < 14; num26++)
-						{
-							array8[num26] = true;
-							array7[num26] = 0.45f;
-							array5[num26] = -80;
-						}
-						array7[14] = 0.8f;
-						array4[14] = 6;
-						array9[14] = Lang.menu[86];
-						array7[15] = 0.8f;
-						array4[15] = 16;
-						array9[15] = Lang.menu[5];
-						if (this.selectedMenu == 15)
-						{
-							Main.menuMode = 11;
-							Main.PlaySound(11, -1, -1, 1);
-						}
-						else if (this.selectedMenu == 14)
-						{
-							Main.ResetKeyBindings();
-							Main.setKey = -1;
-							Main.PlaySound(11, -1, -1, 1);
-						}
-						else if (this.selectedMenu >= 0)
-						{
-							Main.setKey = this.selectedMenu;
-						}
-						if (Main.setKey >= 0)
-						{
-							Microsoft.Xna.Framework.Input.Keys[] pressedKeys2 = Main.keyState.GetPressedKeys();
-							if (pressedKeys2.Length > 0)
-							{
-								string a3 = string.Concat(pressedKeys2[0]);
-								if (a3 != "None")
-								{
-									if (Main.setKey == 0)
-									{
-										Main.cUp = a3;
-									}
-									if (Main.setKey == 1)
-									{
-										Main.cDown = a3;
-									}
-									if (Main.setKey == 2)
-									{
-										Main.cLeft = a3;
-									}
-									if (Main.setKey == 3)
-									{
-										Main.cRight = a3;
-									}
-									if (Main.setKey == 4)
-									{
-										Main.cJump = a3;
-									}
-									if (Main.setKey == 5)
-									{
-										Main.cThrowItem = a3;
-									}
-									if (Main.setKey == 6)
-									{
-										Main.cInv = a3;
-									}
-									if (Main.setKey == 7)
-									{
-										Main.cHeal = a3;
-									}
-									if (Main.setKey == 8)
-									{
-										Main.cMana = a3;
-									}
-									if (Main.setKey == 9)
-									{
-										Main.cBuff = a3;
-									}
-									if (Main.setKey == 10)
-									{
-										Main.cHook = a3;
-									}
-									if (Main.setKey == 11)
-									{
-										Main.cTorch = a3;
-									}
-									if (Main.setKey == 12)
-									{
-										Main.cSmart = a3;
-									}
-									if (Main.setKey == 13)
-									{
-										Main.cMount = a3;
-									}
-									Main.setKey = -1;
-								}
-							}
+								}
+						*/
 						}
 					}
 					else if (Main.menuMode == 12)
 					{
-						int num27 = (SocialAPI.Network != null) ? 1 : 0;
-						Main.menuServer = false;
-						array9[0] = Lang.menu[(SocialAPI.Network != null) ? 146 : 87];
-						array9[1] = Lang.menu[145];
-						array9[1 + num27] = Lang.menu[88];
-						array9[2 + num27] = Lang.menu[5];
-						if (this.selectedMenu == 0)
-						{
-							Main.LoadPlayers();
-							Main.menuMultiplayer = true;
-							Main.PlaySound(10, -1, -1, 1);
-							Main.menuMode = 1;
-						}
-						else if (this.selectedMenu == 1 + num27)
-						{
-							Main.LoadPlayers();
-							Main.PlaySound(10, -1, -1, 1);
-							Main.menuMode = 1;
-							Main.menuMultiplayer = true;
-							Main.menuServer = true;
-						}
-						else if (this.selectedMenu == 1)
-						{
-							Main.PlaySound(10, -1, -1, 1);
-							SocialAPI.Friends.OpenJoinInterface();
-						}
-						else if (this.selectedMenu == 2 + num27)
-						{
-							Main.PlaySound(11, -1, -1, 1);
-							Main.menuMode = 0;
-						}
-						num4 = 3 + num27;
+						/*
+					int num27 = (SocialAPI.Network != null) ? 1 : 0;
+					Main.menuServer = false;
+					array9[0] = Lang.menu[(SocialAPI.Network != null) ? 146 : 87];
+					array9[1] = Lang.menu[145];
+					array9[1 + num27] = Lang.menu[88];
+					array9[2 + num27] = Lang.menu[5];
+					if (this.selectedMenu == 0)
+					{
+					    Main.LoadPlayers();
+					    Main.menuMultiplayer = true;
+					    Main.PlaySound(10, -1, -1, 1);
+					    Main.menuMode = 1;
+					}
+					else if (this.selectedMenu == 1 + num27)
+					{
+					    Main.LoadPlayers();
+					    Main.PlaySound(10, -1, -1, 1);
+					    Main.menuMode = 1;
+					    Main.menuMultiplayer = true;
+					    Main.menuServer = true;
+					}
+					else if (this.selectedMenu == 1)
+					{
+					    Main.PlaySound(10, -1, -1, 1);
+					    SocialAPI.Friends.OpenJoinInterface();
+					}
+					else if (this.selectedMenu == 2 + num27)
+					{
+					    Main.PlaySound(11, -1, -1, 1);
+					    Main.menuMode = 0;
+					}
+					num4 = 3 + num27;
+					*/
 					}
 					else if (Main.menuMode == 13)
 					{
@@ -38855,7 +_,7 @@
 						{
 							Main.PlaySound(12, -1, -1, 1);
 						}
-						array9[0] = Lang.menu[89];
+						clickableLabelText[0] = Lang.menu[89];
 						array2[9] = true;
 						if (Main.getIP != "")
 						{
@@ -38884,25 +_,25 @@
 							}
 							this.textBlinkerCount = 0;
 						}
-						array9[1] = Main.getIP;
+						clickableLabelText[1] = Main.getIP;
 						if (this.textBlinkerState == 1)
 						{
 							string[] array10;
-							(array10 = array9)[1] = array10[1] + "|";
+							(array10 = clickableLabelText)[1] = array10[1] + "|";
 							array5[1] = 1;
 						}
 						else
 						{
 							string[] array10;
-							(array10 = array9)[1] = array10[1] + " ";
+							(array10 = clickableLabelText)[1] = array10[1] + " ";
 						}
 						array[0] = true;
 						array[1] = true;
 						array4[9] = 44;
 						array4[10] = 64;
-						array9[9] = Lang.menu[4];
-						array9[10] = Lang.menu[5];
-						num4 = 11;
+						clickableLabelText[9] = Lang.menu[4];
+						clickableLabelText[10] = Lang.menu[5];
+						numberClickableLabels = 11;
 						num = 180;
 						num3 = 30;
 						array4[1] = 19;
@@ -38911,7 +_,7 @@
 							int num30 = num29 - 2;
 							if (Main.recentWorld[num30] != null && Main.recentWorld[num30] != "")
 							{
-								array9[num29] = string.Concat(new object[]
+								clickableLabelText[num29] = string.Concat(new object[]
 									{
 										Main.recentWorld[num30],
 										" (",
@@ -38923,10 +_,10 @@
 							}
 							else
 							{
-								array9[num29] = "";
+								clickableLabelText[num29] = "";
 								array[num29] = true;
 							}
-							array7[num29] = 0.6f;
+							clickableLabelScale[num29] = 0.6f;
 							array4[num29] = 40;
 						}
 						if (this.selectedMenu >= 2 && this.selectedMenu < 9)
@@ -38962,7 +_,7 @@
 						{
 							Main.PlaySound(12, -1, -1, 1);
 						}
-						array9[0] = Lang.menu[90];
+						clickableLabelText[0] = Lang.menu[90];
 						array2[2] = true;
 						if (Main.getPort != "")
 						{
@@ -38996,25 +_,25 @@
 							}
 							this.textBlinkerCount = 0;
 						}
-						array9[1] = Main.getPort;
+						clickableLabelText[1] = Main.getPort;
 						if (this.textBlinkerState == 1)
 						{
 							string[] array10;
-							(array10 = array9)[1] = array10[1] + "|";
+							(array10 = clickableLabelText)[1] = array10[1] + "|";
 							array5[1] = 1;
 						}
 						else
 						{
 							string[] array10;
-							(array10 = array9)[1] = array10[1] + " ";
+							(array10 = clickableLabelText)[1] = array10[1] + " ";
 						}
 						array[0] = true;
 						array[1] = true;
 						array4[1] = -20;
 						array4[2] = 20;
-						array9[2] = Lang.menu[4];
-						array9[3] = Lang.menu[5];
-						num4 = 4;
+						clickableLabelText[2] = Lang.menu[4];
+						clickableLabelText[3] = Lang.menu[5];
+						numberClickableLabels = 4;
 						if (this.selectedMenu == 3)
 						{
 							Main.PlaySound(11, -1, -1, 1);
@@ -39039,13 +_,13 @@
 						array4[2] = 30;
 						array4[3] = 30;
 						array4[4] = 70;
-						array9[0] = Lang.menu[91];
+						clickableLabelText[0] = Lang.menu[91];
 						array[0] = true;
-						array9[1] = Lang.menu[92];
-						array9[2] = Lang.menu[93];
-						array9[3] = Lang.menu[94];
-						array9[4] = Lang.menu[5];
-						num4 = 5;
+						clickableLabelText[1] = Lang.menu[92];
+						clickableLabelText[2] = Lang.menu[93];
+						clickableLabelText[3] = Lang.menu[94];
+						clickableLabelText[4] = Lang.menu[5];
+						numberClickableLabels = 5;
 						if (this.selectedMenu == 4)
 						{
 							Main.menuMode = 6;
@@ -39055,7 +_,7 @@
 						{
 							if (this.selectedMenu == 1)
 							{
-								Main.maxTilesX = 4200;
+								Main.maxTilesX = 8400;// 4200;
 								Main.maxTilesY = 1200;
 							}
 							else if (this.selectedMenu == 2)
@@ -39074,6 +_,10 @@
 							WorldGen.setWorldSize();
 						}
 					}
+					else
+					{
+						TerraCustom.Interface.TerraCustomMenu(this, this.selectedMenu, array, clickableLabelText, clickableLabelScale, array4, ref num, ref num3, ref numberClickableLabels);
+					}
 				}
 			}
 			IL_4287:
@@ -39085,7 +_,7 @@
 			{
 				Main.blockMouse = true;
 				Main.menuSkip = 0;
-				num4 = 0;
+				numberClickableLabels = 0;
 				for (int num33 = 0; num33 < Main.maxMenuItems; num33++)
 				{
 					this.menuItemScale[num33] = 0.8f;
@@ -39099,9 +_,9 @@
 			this.selectedMenu = -1;
 			this.selectedMenu2 = -1;
 			this.focusMenu = -1;
-			for (int num35 = 0; num35 < num4; num35++)
-			{
-				if (array9[num35] != null)
+			for (int num35 = 0; num35 < numberClickableLabels; num35++)
+			{
+				if (clickableLabelText[num35] != null)
 				{
 					if (!flag)
 					{
@@ -39651,7 +_,7 @@
 						{
 							num89 = 2;
 						}
-						Vector2 origin = Main.fontDeathText.MeasureString(array9[num35]);
+						Vector2 origin = Main.fontDeathText.MeasureString(clickableLabelText[num35]);
 						origin.X *= 0.5f;
 						origin.Y *= 0.5f;
 						float num90 = this.menuItemScale[num35];
@@ -39663,14 +_,14 @@
 						{
 							num90 *= 0.5f;
 						}
-						num90 *= array7[num35];
+						num90 *= clickableLabelScale[num35];
 						if (!array8[num35])
 						{
-							Main.spriteBatch.DrawString(Main.fontDeathText, array9[num35], new Vector2((float)(num2 + num88 + array5[num35]), (float)(num + num3 * num35 + num89) + origin.Y * array7[num35] + (float)array4[num35]), color9, 0f, origin, num90, SpriteEffects.None, 0f);
+							Main.spriteBatch.DrawString(Main.fontDeathText, clickableLabelText[num35], new Vector2((float)(screenHorizontalCenter + num88 + array5[num35]), (float)(num + num3 * num35 + num89) + origin.Y * clickableLabelScale[num35] + (float)array4[num35]), color9, 0f, origin, num90, SpriteEffects.None, 0f);
 						}
 						else
 						{
-							Main.spriteBatch.DrawString(Main.fontDeathText, array9[num35], new Vector2((float)(num2 + num88 + array5[num35]), (float)(num + num3 * num35 + num89) + origin.Y * array7[num35] + (float)array4[num35]), color9, 0f, new Vector2(0f, origin.Y), num90, SpriteEffects.None, 0f);
+							Main.spriteBatch.DrawString(Main.fontDeathText, clickableLabelText[num35], new Vector2((float)(screenHorizontalCenter + num88 + array5[num35]), (float)(num + num3 * num35 + num89) + origin.Y * clickableLabelScale[num35] + (float)array4[num35]), color9, 0f, new Vector2(0f, origin.Y), num90, SpriteEffects.None, 0f);
 						}
 					}
 					if (!array8[num35])
@@ -39681,7 +_,7 @@
 							num91 = 14;
 						}
 						this.menuWide[num35] = false;
-						if ((float)Main.mouseX > (float)num2 - (float)(array9[num35].Length * 10) * array7[num35] + (float)array5[num35] - (float)num91 && (float)Main.mouseX < (float)num2 + (float)(array9[num35].Length * 10) * array7[num35] + (float)array5[num35] + (float)num91 && Main.mouseY > num + num3 * num35 + array4[num35] && (float)Main.mouseY < (float)(num + num3 * num35 + array4[num35]) + 50f * array7[num35] && Main.hasFocus)
+						if ((float)Main.mouseX > (float)screenHorizontalCenter - (float)(clickableLabelText[num35].Length * 10) * clickableLabelScale[num35] + (float)array5[num35] - (float)num91 && (float)Main.mouseX < (float)screenHorizontalCenter + (float)(clickableLabelText[num35].Length * 10) * clickableLabelScale[num35] + (float)array5[num35] + (float)num91 && Main.mouseY > num + num3 * num35 + array4[num35] && (float)Main.mouseY < (float)(num + num3 * num35 + array4[num35]) + 50f * clickableLabelScale[num35] && Main.hasFocus)
 						{
 							this.focusMenu = num35;
 							if (array[num35] || array2[num35])
@@ -39705,7 +_,7 @@
 							}
 						}
 					}
-					else if (Main.mouseX > num2 + array5[num35] && (float)Main.mouseX < (float)num2 + (float)(array9[num35].Length * 20) * array7[num35] + (float)array5[num35] && Main.mouseY > num + num3 * num35 + array4[num35] && (float)Main.mouseY < (float)(num + num3 * num35 + array4[num35]) + 50f * array7[num35] && Main.hasFocus)
+					else if (Main.mouseX > screenHorizontalCenter + array5[num35] && (float)Main.mouseX < (float)screenHorizontalCenter + (float)(clickableLabelText[num35].Length * 20) * clickableLabelScale[num35] + (float)array5[num35] && Main.mouseY > num + num3 * num35 + array4[num35] && (float)Main.mouseY < (float)(num + num3 * num35 + array4[num35]) + 50f * clickableLabelScale[num35] && Main.hasFocus)
 					{
 						this.focusMenu = num35;
 						if (array[num35] || array2[num35])
@@ -39858,6 +_,3184 @@
 			Main.mouseRightRelease = true;
 		}
 
+
+		/*
+				protected void DrawMenu(GameTime gameTime)
+				{
+					if (!Main.IsEngineLoaded)
+					{
+						Main.IsEngineLoaded = true;
+						if (Main.OnEngineLoad != null)
+						{
+							Main.OnEngineLoad();
+						}
+					}
+					if (Main.menuMode <= 1 && Main.slimeRain)
+					{
+						Main.StopSlimeRain(true);
+					}
+					Main.render = false;
+					Star.UpdateStars();
+					Cloud.UpdateClouds();
+					Main.holyTiles = 0;
+					Main.evilTiles = 0;
+					Main.shroomTiles = 0;
+					Main.bloodTiles = 0;
+					Main.bloodTiles = 0;
+					Main.jungleTiles = 0;
+					Main.chatMode = false;
+					for (int i = 0; i < Main.numChatLines; i++)
+					{
+						Main.chatLine[i] = new ChatLine();
+					}
+					this.DrawFPS();
+					Main.screenLastPosition = Main.screenPosition;
+					Main.screenPosition.Y = (float)(Main.worldSurface * 16.0 - (double)Main.screenHeight);
+					if (Main.grabSky)
+					{
+						Main.screenPosition.X = Main.screenPosition.X + (float)(Main.mouseX - Main.screenWidth / 2) * 0.02f;
+					}
+					else
+					{
+						Main.screenPosition.X = Main.screenPosition.X + 2f;
+					}
+					if (Main.screenPosition.X > 2.14748352E+09f)
+					{
+						Main.screenPosition.X = 0f;
+					}
+					if (Main.screenPosition.X < -2.14748352E+09f)
+					{
+						Main.screenPosition.X = 0f;
+					}
+					Main.background = 0;
+					byte b = (byte)((255 + Main.tileColor.R * 2) / 3);
+					Microsoft.Xna.Framework.Color color = new Microsoft.Xna.Framework.Color((int)b, (int)b, (int)b, 255);
+					this.logoRotation += this.logoRotationSpeed * 3E-05f;
+					if ((double)this.logoRotation > 0.1)
+					{
+						this.logoRotationDirection = -1f;
+					}
+					else if ((double)this.logoRotation < -0.1)
+					{
+						this.logoRotationDirection = 1f;
+					}
+					if (this.logoRotationSpeed < 20f & this.logoRotationDirection == 1f)
+					{
+						this.logoRotationSpeed += 1f;
+					}
+					else if (this.logoRotationSpeed > -20f & this.logoRotationDirection == -1f)
+					{
+						this.logoRotationSpeed -= 1f;
+					}
+					this.logoScale += this.logoScaleSpeed * 1E-05f;
+					if ((double)this.logoScale > 1.1)
+					{
+						this.logoScaleDirection = -1f;
+					}
+					else if ((double)this.logoScale < 0.9)
+					{
+						this.logoScaleDirection = 1f;
+					}
+					if (this.logoScaleSpeed < 50f & this.logoScaleDirection == 1f)
+					{
+						this.logoScaleSpeed += 1f;
+					}
+					else if (this.logoScaleSpeed > -50f & this.logoScaleDirection == -1f)
+					{
+						this.logoScaleSpeed -= 1f;
+					}
+					Microsoft.Xna.Framework.Color color2 = new Microsoft.Xna.Framework.Color((int)((byte)((float)color.R * ((float)Main.LogoA / 255f))), (int)((byte)((float)color.G * ((float)Main.LogoA / 255f))), (int)((byte)((float)color.B * ((float)Main.LogoA / 255f))), (int)((byte)((float)color.A * ((float)Main.LogoA / 255f))));
+					Microsoft.Xna.Framework.Color color3 = new Microsoft.Xna.Framework.Color((int)((byte)((float)color.R * ((float)Main.LogoB / 255f))), (int)((byte)((float)color.G * ((float)Main.LogoB / 255f))), (int)((byte)((float)color.B * ((float)Main.LogoB / 255f))), (int)((byte)((float)color.A * ((float)Main.LogoB / 255f))));
+					Main.spriteBatch.Draw(Main.logoTexture, new Vector2((float)(Main.screenWidth / 2), 100f), new Microsoft.Xna.Framework.Rectangle?(new Microsoft.Xna.Framework.Rectangle(0, 0, Main.logoTexture.Width, Main.logoTexture.Height)), color2, this.logoRotation, new Vector2((float)(Main.logoTexture.Width / 2), (float)(Main.logoTexture.Height / 2)), this.logoScale, SpriteEffects.None, 0f);
+					Main.spriteBatch.Draw(Main.logo2Texture, new Vector2((float)(Main.screenWidth / 2), 100f), new Microsoft.Xna.Framework.Rectangle?(new Microsoft.Xna.Framework.Rectangle(0, 0, Main.logoTexture.Width, Main.logoTexture.Height)), color3, this.logoRotation, new Vector2((float)(Main.logoTexture.Width / 2), (float)(Main.logoTexture.Height / 2)), this.logoScale, SpriteEffects.None, 0f);
+					if (Main.dayTime)
+					{
+						Main.LogoA += 2;
+						if (Main.LogoA > 255)
+						{
+							Main.LogoA = 255;
+						}
+						Main.LogoB--;
+						if (Main.LogoB < 0)
+						{
+							Main.LogoB = 0;
+						}
+					}
+					else
+					{
+						Main.LogoB += 2;
+						if (Main.LogoB > 255)
+						{
+							Main.LogoB = 255;
+						}
+						Main.LogoA--;
+						if (Main.LogoA < 0)
+						{
+							Main.LogoA = 0;
+							Main.LogoT = true;
+						}
+					}
+					int num = 250;
+					int num2 = Main.screenWidth / 2;
+					int num3 = 80;
+					int num4 = 0;
+					int num5 = Main.menuMode;
+					int num6 = 0;
+					int num7 = 0;
+					bool flag = false;
+					bool flag2 = false;
+					bool flag3 = false;
+					int num8 = 0;
+					bool[] array = new bool[Main.maxMenuItems];
+					bool[] array2 = new bool[Main.maxMenuItems];
+					bool[] array3 = new bool[Main.maxMenuItems];
+					int[] array4 = new int[Main.maxMenuItems];
+					int[] array5 = new int[Main.maxMenuItems];
+					byte[] array6 = new byte[Main.maxMenuItems];
+					float[] array7 = new float[Main.maxMenuItems];
+					bool[] array8 = new bool[Main.maxMenuItems];
+					bool flag4 = false;
+					for (int j = 0; j < Main.maxMenuItems; j++)
+					{
+						array[j] = false;
+						array2[j] = false;
+						array4[j] = 0;
+						array5[j] = 0;
+						array7[j] = 1f;
+					}
+					string[] array9 = new string[Main.maxMenuItems];
+					if (Main.menuMode == -1)
+					{
+						Main.menuMode = 0;
+					}
+					if (Main.menuMode == 1212)
+					{
+		                Main.menuMode = 0;
+		            }
+					else if (Main.menuMode == 1213)
+					{
+		                Main.menuMode = 11;
+		            }
+					else if (Main.netMode == 2)
+					{
+						bool flag5 = true;
+						for (int k = 0; k < 8; k++)
+						{
+							if (k < 255)
+							{
+								try
+								{
+									array9[k] = Netplay.Clients[k].StatusText;
+									if (Netplay.Clients[k].IsActive && Main.showSpam)
+									{
+										string[] array10;
+										string[] expr_86B = array10 = array9;
+										IntPtr intPtr;
+										int expr_870 = (int)(intPtr = (IntPtr)k);
+										object obj = array10[(int)intPtr];
+										expr_86B[expr_870] = string.Concat(new object[]
+										{
+											obj,
+											" (",
+											NetMessage.buffer[k].spamCount,
+											")"
+										});
+									}
+								}
+								catch
+								{
+									array9[k] = "";
+								}
+								array[k] = true;
+								if (array9[k] != "" && array9[k] != null)
+								{
+									flag5 = false;
+								}
+							}
+						}
+						if (flag5)
+						{
+							array9[0] = Lang.menu[0];
+							array9[1] = Lang.menu[1] + Netplay.ListenPort + ".";
+						}
+						num4 = 11;
+						array9[9] = Main.statusText;
+						array[9] = true;
+						num = 170;
+						num3 = 30;
+						array4[10] = 20;
+						array4[10] = 40;
+						array9[10] = Lang.menu[2];
+						if (this.selectedMenu == 10)
+						{
+							Netplay.disconnect = true;
+							Main.PlaySound(11, -1, -1, 1);
+						}
+					}
+					else if (Main.menuMode == 31)
+					{
+						string serverPassword = Netplay.ServerPassword;
+						Netplay.ServerPassword = Main.GetInputText(Netplay.ServerPassword);
+						if (serverPassword != Netplay.ServerPassword)
+						{
+							Main.PlaySound(12, -1, -1, 1);
+						}
+						array9[0] = Lang.menu[3];
+						this.textBlinkerCount++;
+						if (this.textBlinkerCount >= 20)
+						{
+							if (this.textBlinkerState == 0)
+							{
+								this.textBlinkerState = 1;
+							}
+							else
+							{
+								this.textBlinkerState = 0;
+							}
+							this.textBlinkerCount = 0;
+						}
+						array9[1] = Netplay.ServerPassword;
+						if (Main.HidePassword)
+						{
+							array9[1] = "";
+							for (int l = 0; l < Netplay.ServerPassword.Length; l++)
+							{
+								string[] array10;
+								(array10 = array9)[1] = array10[1] + "*";
+							}
+						}
+						if (this.textBlinkerState == 1)
+						{
+							string[] array10;
+							(array10 = array9)[1] = array10[1] + "|";
+							array5[1] = 1;
+						}
+						else
+						{
+							string[] array10;
+							(array10 = array9)[1] = array10[1] + " ";
+						}
+						array[0] = true;
+						array[1] = true;
+						array4[1] = -20;
+						array4[2] = 20;
+						array9[2] = Lang.menu[4];
+						array9[3] = Lang.menu[5];
+						num4 = 4;
+						if (this.selectedMenu == 3)
+						{
+							Main.PlaySound(11, -1, -1, 1);
+							Main.menuMode = 0;
+							Netplay.disconnect = true;
+							Netplay.ServerPassword = "";
+						}
+						else if (this.selectedMenu == 2 || Main.inputTextEnter)
+						{
+							NetMessage.SendData(38, -1, -1, Netplay.ServerPassword, 0, 0f, 0f, 0f, 0, 0, 0);
+							Main.menuMode = 14;
+						}
+					}
+					else
+					{
+						if (Main.netMode == 1 || Main.menuMode == 14)
+						{
+							num4 = 2;
+							array9[0] = Main.statusText;
+							array[0] = true;
+							num = 300;
+							array9[1] = Lang.menu[6];
+							if (this.selectedMenu != 1)
+							{
+								goto IL_4287;
+							}
+							Netplay.disconnect = true;
+							Netplay.Connection.Socket.Close();
+							Main.PlaySound(11, -1, -1, 1);
+							Main.menuMode = 0;
+							Main.netMode = 0;
+							try
+							{
+								this.tServer.Kill();
+								goto IL_4287;
+							}
+							catch
+							{
+								goto IL_4287;
+							}
+						}
+						if (Main.menuMode == 882)
+						{
+							num4 = 2;
+							array[0] = true;
+							num = 300;
+							array9[0] = Main.statusText;
+							array9[1] = Lang.menu[6];
+							if (this.selectedMenu == 1)
+							{
+								Main.PlaySound(11, -1, -1, 1);
+								Main.menuMode = 0;
+								Main.netMode = 0;
+								if (SocialAPI.Network != null)
+								{
+									SocialAPI.Network.CancelJoin();
+								}
+							}
+						}
+						else if (Main.menuMode == 30)
+						{
+							string serverPassword2 = Netplay.ServerPassword;
+							Netplay.ServerPassword = Main.GetInputText(Netplay.ServerPassword);
+							if (serverPassword2 != Netplay.ServerPassword)
+							{
+								Main.PlaySound(12, -1, -1, 1);
+							}
+							array9[0] = Lang.menu[7];
+							this.textBlinkerCount++;
+							if (this.textBlinkerCount >= 20)
+							{
+								if (this.textBlinkerState == 0)
+								{
+									this.textBlinkerState = 1;
+								}
+								else
+								{
+									this.textBlinkerState = 0;
+								}
+								this.textBlinkerCount = 0;
+							}
+							array9[1] = Netplay.ServerPassword;
+							if (Main.HidePassword)
+							{
+								array9[1] = "";
+								for (int m = 0; m < Netplay.ServerPassword.Length; m++)
+								{
+									string[] array10;
+									(array10 = array9)[1] = array10[1] + "*";
+								}
+							}
+							if (this.textBlinkerState == 1)
+							{
+								string[] array10;
+								(array10 = array9)[1] = array10[1] + "|";
+								array5[1] = 1;
+							}
+							else
+							{
+								string[] array10;
+								(array10 = array9)[1] = array10[1] + " ";
+							}
+							array[0] = true;
+							array[1] = true;
+							array4[1] = -20;
+							array4[2] = 20;
+							array9[2] = Lang.menu[4];
+							array9[3] = Lang.menu[5];
+							num4 = 4;
+							if (this.selectedMenu == 3)
+							{
+								if (SocialAPI.Network != null)
+								{
+									Main.menuMode = 889;
+								}
+								else
+								{
+									Main.menuMode = 6;
+								}
+								Netplay.ServerPassword = "";
+							}
+							else if (this.selectedMenu == 2 || Main.inputTextEnter || Main.autoPass)
+							{
+								string text = string.Concat(new object[]
+								{
+									"-autoshutdown -password \"",
+									Netplay.ServerPassword,
+									"\" -lang ",
+									Lang.lang
+								});
+		#if LINUX
+						        if (IntPtr.Size == 8)
+						        {
+							        text += " -x64";
+						        }
+						        else
+						        {
+							        text += " -x86";
+						        }
+		#endif
+								if (Main.ActiveWorldFileData.IsCloudSave)
+								{
+									text = text + " -cloudworld \"" + Main.worldPathName + "\"";
+								}
+								else
+								{
+									text = text + " -world \"" + Main.worldPathName + "\"";
+								}
+								this.tServer.StartInfo.FileName = "TerrariaServer.exe";
+								this.tServer.StartInfo.Arguments = text;
+								if (Main.libPath != "")
+								{
+									ProcessStartInfo expr_E36 = this.tServer.StartInfo;
+									expr_E36.Arguments = expr_E36.Arguments + " -loadlib " + Main.libPath;
+								}
+								this.tServer.StartInfo.UseShellExecute = false;
+								this.tServer.StartInfo.CreateNoWindow = true;
+								if (SocialAPI.Network != null)
+								{
+									SocialAPI.Network.LaunchLocalServer(this.tServer, Main.MenuServerMode);
+								}
+								else
+								{
+									this.tServer.Start();
+								}
+								Netplay.SetRemoteIP("127.0.0.1");
+								Main.autoPass = true;
+								Main.statusText = Lang.menu[8];
+								Netplay.StartTcpClient();
+								Main.menuMode = 10;
+							}
+						}
+						else if (Main.menuMode == 889)
+						{
+							num = 200;
+							num3 = 60;
+							array4[1] = 30;
+							array4[2] = 30;
+							array4[3] = 30;
+							array4[4] = 70;
+							array4[5] = 70;
+							num4 = 6;
+							array9[0] = Lang.menu[135];
+							array9[4] = Lang.menu[144];
+							array9[5] = Lang.menu[5];
+							array[0] = true;
+							if (!Main.MenuServerMode.HasFlag(ServerMode.Lobby))
+							{
+								Main.MenuServerMode = ServerMode.None;
+								array[2] = true;
+								array[3] = true;
+								array9[1] = Lang.menu[136];
+								array9[2] = "";
+								array9[3] = "";
+							}
+							else
+							{
+								array9[1] = Lang.menu[137];
+								if (Main.MenuServerMode.HasFlag(ServerMode.FriendsCanJoin))
+								{
+									array9[2] = Lang.menu[139];
+									if (Main.MenuServerMode.HasFlag(ServerMode.FriendsOfFriends))
+									{
+										array9[3] = Lang.menu[143];
+									}
+									else
+									{
+										array9[3] = Lang.menu[142];
+									}
+								}
+								else
+								{
+									array9[2] = Lang.menu[138];
+									if (Main.MenuServerMode.HasFlag(ServerMode.FriendsOfFriends))
+									{
+										array9[3] = Lang.menu[141];
+									}
+									else
+									{
+										array9[3] = Lang.menu[140];
+									}
+								}
+							}
+							switch (this.selectedMenu)
+							{
+							case 1:
+								Main.MenuServerMode ^= ServerMode.Lobby;
+								Main.PlaySound(12, -1, -1, 1);
+								break;
+							case 2:
+								Main.MenuServerMode ^= ServerMode.FriendsCanJoin;
+								Main.PlaySound(12, -1, -1, 1);
+								break;
+							case 3:
+								Main.MenuServerMode ^= ServerMode.FriendsOfFriends;
+								Main.PlaySound(12, -1, -1, 1);
+								break;
+							case 4:
+								Main.clrInput();
+								Netplay.ServerPassword = "";
+								Main.GetInputText("");
+								Main.autoPass = false;
+								Main.menuMode = 30;
+								Main.PlaySound(10, -1, -1, 1);
+								break;
+							case 5:
+								Main.menuMode = 6;
+								Main.PlaySound(11, -1, -1, 1);
+								break;
+							}
+						}
+						else if (Main.menuMode == 15)
+						{
+							num4 = 2;
+							array9[0] = Main.statusText;
+							array[0] = true;
+							num = 80;
+							num3 = 400;
+							array9[1] = Lang.menu[5];
+							if (this.selectedMenu == 1)
+							{
+								Netplay.disconnect = true;
+								Main.PlaySound(11, -1, -1, 1);
+								Main.menuMode = 0;
+								Main.netMode = 0;
+							}
+						}
+						else if (Main.menuMode == 200)
+						{
+							num4 = 3;
+							array9[0] = Lang.menu[9];
+							array[0] = true;
+							num -= 30;
+							array4[1] = 70;
+							array4[2] = 50;
+							array9[1] = Lang.menu[10];
+							array9[2] = Lang.menu[6];
+							if (this.selectedMenu == 1)
+							{
+								if (FileUtilities.Exists(Main.worldPathName + ".bak", Main.ActiveWorldFileData.IsCloudSave))
+								{
+									FileUtilities.Move(Main.worldPathName + ".bak", Main.worldPathName, Main.ActiveWorldFileData.IsCloudSave, true);
+									Main.PlaySound(10, -1, -1, 1);
+									WorldGen.playWorld();
+									Main.menuMode = 10;
+								}
+								else
+								{
+									Main.PlaySound(11, -1, -1, 1);
+									Main.menuMode = 0;
+									Main.netMode = 0;
+								}
+							}
+							if (this.selectedMenu == 2)
+							{
+								Main.PlaySound(11, -1, -1, 1);
+								Main.menuMode = 0;
+								Main.netMode = 0;
+							}
+						}
+						else if (Main.menuMode == 201)
+						{
+							num4 = 3;
+							array9[0] = Lang.menu[9];
+							array[0] = true;
+							array[1] = true;
+							num -= 30;
+							array4[1] = -30;
+							array4[2] = 50;
+							array9[1] = Lang.menu[11];
+							array9[2] = Lang.menu[5];
+							if (this.selectedMenu == 2)
+							{
+								Main.PlaySound(11, -1, -1, 1);
+								Main.menuMode = 0;
+								Main.netMode = 0;
+							}
+						}
+						else if (Main.menuMode == 10)
+						{
+							num4 = 1;
+							array9[0] = Main.statusText;
+							array[0] = true;
+							num = 300;
+						}
+						else if (Main.menuMode == 100)
+						{
+							num4 = 1;
+							array9[0] = Main.statusText;
+							array[0] = true;
+							num = 300;
+						}
+						else if (Main.menuMode == 0)
+						{
+							Main.eclipse = false;
+							Main.pumpkinMoon = false;
+							Main.snowMoon = false;
+							Main.ServerSideCharacter = false;
+							Main.menuMultiplayer = false;
+							Main.menuServer = false;
+							Main.netMode = 0;
+							for (int n = 0; n < 9; n++)
+							{
+								string text2 = "";
+								switch (n)
+								{
+								case 0:
+									text2 = "Solar";
+									break;
+								case 1:
+									text2 = "Vortex";
+									break;
+								case 2:
+									text2 = "Nebula";
+									break;
+								case 3:
+									text2 = "Stardust";
+									break;
+								case 4:
+									text2 = "MoonLord";
+									break;
+								case 5:
+									text2 = "MonolithSolar";
+									break;
+								case 6:
+									text2 = "MonolithVortex";
+									break;
+								case 7:
+									text2 = "MonolithNebula";
+									break;
+								case 8:
+									text2 = "MonolithStardust";
+									break;
+								}
+								if (SkyManager.Instance[text2].IsActive())
+								{
+									SkyManager.Instance.Deactivate(text2, new object[0]);
+								}
+								if (Filters.Scene[text2].IsActive())
+								{
+									Filters.Scene[text2].Deactivate(new object[0]);
+								}
+							}
+							if (Filters.Scene["BloodMoon"].IsActive())
+							{
+								Filters.Scene["BloodMoon"].Deactivate(new object[0]);
+							}
+							if (SkyManager.Instance["Martian"].IsActive())
+							{
+								SkyManager.Instance["Martian"].Deactivate(new object[0]);
+							}
+							if (SkyManager.Instance["Slime"].IsActive())
+							{
+								SkyManager.Instance["Slime"].Deactivate(new object[0]);
+							}
+							int num9 = 0;
+							num4 = 5;
+							num3 = 60;
+							array9[num9] = Lang.menu[12];
+							if (this.selectedMenu == num9)
+							{
+								Main.PlaySound(10, -1, -1, 1);
+								Main.menuMode = 1;
+							}
+							num9++;
+							array9[num9] = Lang.menu[13];
+							if (this.selectedMenu == num9)
+							{
+								Main.PlaySound(10, -1, -1, 1);
+								Main.menuMode = 12;
+							}
+							num9++;
+							array9[num9] = Lang.menu[131];
+							if (this.selectedMenu == num9)
+							{
+								Main.PlaySound(10, -1, -1, 1);
+								Main.MenuUI.SetState(Main.AchievementsMenu);
+								Main.menuMode = 888;
+							}
+							num9++;
+							array9[num9] = Lang.menu[14];
+							if (this.selectedMenu == num9)
+							{
+								Main.PlaySound(10, -1, -1, 1);
+								Main.menuMode = 11;
+							}
+							num9++;
+							array9[num9] = Lang.menu[15];
+							if (this.selectedMenu == num9)
+							{
+								this.QuitGame();
+							}
+							num9++;
+						}
+						else if (Main.menuMode == 1)
+						{
+							Main.MenuUI.SetState(Main._characterSelectMenu);
+							Main.menuMode = 888;
+						}
+						else if (Main.menuMode == 2)
+						{
+							flag4 = true;
+							if (this.selectedMenu == 0)
+							{
+								Main.menuMode = 17;
+								Main.PlaySound(10, -1, -1, 1);
+								Main.selColor = Main.PendingPlayer.hairColor;
+							}
+							if (this.selectedMenu == 1)
+							{
+								Main.menuMode = 18;
+								Main.PlaySound(10, -1, -1, 1);
+								Main.selColor = Main.PendingPlayer.eyeColor;
+							}
+							if (this.selectedMenu == 2)
+							{
+								Main.menuMode = 19;
+								Main.PlaySound(10, -1, -1, 1);
+								Main.selColor = Main.PendingPlayer.skinColor;
+							}
+							if (this.selectedMenu == 3)
+							{
+								Main.menuMode = 20;
+								Main.PlaySound(10, -1, -1, 1);
+							}
+							array9[0] = Lang.menu[18];
+							array9[1] = Lang.menu[19];
+							array9[2] = Lang.menu[20];
+							array9[3] = Lang.menu[21];
+							num = 220;
+							for (int num10 = 0; num10 < 9; num10++)
+							{
+								if (num10 < 6)
+								{
+									array7[num10] = 0.75f;
+								}
+								else
+								{
+									array7[num10] = 0.9f;
+								}
+							}
+							num3 = 38;
+							array4[6] = 6;
+							array4[7] = 12;
+							array4[8] = 18;
+							num6 = Main.screenWidth / 2 - 16;
+							num7 = 176;
+							if (Main.PendingPlayer.Male)
+							{
+								array9[4] = Lang.menu[22];
+							}
+							else
+							{
+								array9[4] = Lang.menu[23];
+							}
+							if (this.selectedMenu == 4)
+							{
+								if (Main.PendingPlayer.Male)
+								{
+									Main.PlaySound(20, -1, -1, 1);
+									Main.PendingPlayer.Male = false;
+								}
+								else
+								{
+									Main.PlaySound(1, -1, -1, 1);
+									Main.PendingPlayer.Male = true;
+								}
+							}
+							if (Main.PendingPlayer.difficulty == 2)
+							{
+								array9[5] = Lang.menu[24];
+								array6[5] = Main.PendingPlayer.difficulty;
+							}
+							else if (Main.PendingPlayer.difficulty == 1)
+							{
+								array9[5] = Lang.menu[25];
+								array6[5] = Main.PendingPlayer.difficulty;
+							}
+							else
+							{
+								array9[5] = Lang.menu[26];
+							}
+							if (this.selectedMenu == 5)
+							{
+								Main.PlaySound(10, -1, -1, 1);
+								Main.menuMode = 222;
+							}
+							if (this.selectedMenu == 7)
+							{
+								Main.PlaySound(12, -1, -1, 1);
+								Main.PendingPlayer.hair = Main.rand.Next(51);
+								Main.PendingPlayer.eyeColor = this.randColor();
+								while ((int)(Main.PendingPlayer.eyeColor.R + Main.PendingPlayer.eyeColor.G + Main.PendingPlayer.eyeColor.B) > 300)
+								{
+									Main.PendingPlayer.eyeColor = this.randColor();
+								}
+								Main.PendingPlayer.hairColor = this.randColor();
+								Main.PendingPlayer.pantsColor = this.randColor();
+								Main.PendingPlayer.shirtColor = this.randColor();
+								Main.PendingPlayer.shoeColor = this.randColor();
+								Main.PendingPlayer.skinColor = this.randColor();
+								float num11 = (float)Main.rand.Next(60, 120) * 0.01f;
+								if (num11 > 1f)
+								{
+									num11 = 1f;
+								}
+								Main.PendingPlayer.skinColor.R = (byte)((float)Main.rand.Next(240, 255) * num11);
+								Main.PendingPlayer.skinColor.G = (byte)((float)Main.rand.Next(110, 140) * num11);
+								Main.PendingPlayer.skinColor.B = (byte)((float)Main.rand.Next(75, 110) * num11);
+								Main.PendingPlayer.underShirtColor = this.randColor();
+								int num12 = Main.PendingPlayer.hair + 1;
+								if (num12 == 5 || num12 == 6 || num12 == 7 || num12 == 10 || num12 == 12 || num12 == 19 || num12 == 22 || num12 == 23 || num12 == 26 || num12 == 27 || num12 == 30 || num12 == 33)
+								{
+									Main.PendingPlayer.Male = false;
+								}
+								else
+								{
+									Main.PendingPlayer.Male = true;
+								}
+								Main.PendingPlayer.skinVariant = Main.rand.Next(8);
+							}
+							array9[7] = Lang.menu[27];
+							array9[6] = Lang.menu[28];
+							array9[8] = Lang.menu[5];
+							num4 = 9;
+							if (this.selectedMenu == 8)
+							{
+								Main.PlaySound(11, -1, -1, 1);
+								Main.menuMode = 1;
+							}
+							else if (this.selectedMenu == 6)
+							{
+								Main.PlaySound(10, -1, -1, 1);
+								Main.PendingPlayer.name = "";
+								Main.menuMode = 3;
+								Main.clrInput();
+							}
+						}
+						else if (Main.menuMode == 222)
+						{
+							if (this.focusMenu == 3)
+							{
+								array9[0] = Lang.menu[29];
+							}
+							else if (this.focusMenu == 2)
+							{
+								array9[0] = Lang.menu[30];
+							}
+							else if (this.focusMenu == 1)
+							{
+								array9[0] = Lang.menu[31];
+							}
+							else
+							{
+								array9[0] = Lang.menu[32];
+							}
+							num3 = 50;
+							array4[1] = 25;
+							array4[2] = 25;
+							array4[3] = 25;
+							array[0] = true;
+							array9[1] = Lang.menu[26];
+							array9[2] = Lang.menu[25];
+							array6[2] = 1;
+							array9[3] = Lang.menu[24];
+							array6[3] = 2;
+							num4 = 4;
+							if (this.selectedMenu == 1)
+							{
+								Main.PendingPlayer.difficulty = 0;
+								Main.menuMode = 2;
+							}
+							else if (this.selectedMenu == 2)
+							{
+								Main.menuMode = 2;
+								Main.PendingPlayer.difficulty = 1;
+							}
+							else if (this.selectedMenu == 3)
+							{
+								Main.PendingPlayer.difficulty = 2;
+								Main.menuMode = 2;
+							}
+						}
+						else if (Main.menuMode == 20)
+						{
+							flag4 = true;
+							if (this.selectedMenu == 0)
+							{
+								Main.menuMode = 21;
+								Main.PlaySound(10, -1, -1, 1);
+								Main.selColor = Main.PendingPlayer.shirtColor;
+							}
+							if (this.selectedMenu == 1)
+							{
+								Main.menuMode = 22;
+								Main.PlaySound(10, -1, -1, 1);
+								Main.selColor = Main.PendingPlayer.underShirtColor;
+							}
+							if (this.selectedMenu == 2)
+							{
+								Main.menuMode = 23;
+								Main.PlaySound(10, -1, -1, 1);
+								Main.selColor = Main.PendingPlayer.pantsColor;
+							}
+							if (this.selectedMenu == 3)
+							{
+								Main.selColor = Main.PendingPlayer.shoeColor;
+								Main.menuMode = 24;
+								Main.PlaySound(10, -1, -1, 1);
+							}
+							if (this.selectedMenu == 5)
+							{
+								Main.PlaySound(11, -1, -1, 1);
+								Main.menuMode = 2;
+							}
+							if (this.selectedMenu == 4)
+							{
+								Main.PlaySound(12, -1, -1, 1);
+								if (Main.PendingPlayer.skinVariant < 4)
+								{
+									Main.PendingPlayer.skinVariant++;
+									if (Main.PendingPlayer.skinVariant == 4)
+									{
+										Main.PendingPlayer.skinVariant = 0;
+									}
+								}
+								else
+								{
+									Main.PendingPlayer.skinVariant++;
+									if (Main.PendingPlayer.skinVariant == 8)
+									{
+										Main.PendingPlayer.skinVariant = 4;
+									}
+								}
+							}
+							num6 = Main.screenWidth / 2 - 16;
+							num7 = 210;
+							num = 260;
+							num3 = 50;
+							num4 = 6;
+							array9[0] = Lang.menu[33];
+							array9[1] = Lang.menu[34];
+							array9[2] = Lang.menu[35];
+							array9[3] = Lang.menu[36];
+							array9[4] = Lang.menu[127];
+							array9[5] = Lang.menu[5];
+							array4[5] = 20;
+						}
+						else if (Main.menuMode == 17)
+						{
+							flag4 = true;
+							num6 = Main.screenWidth / 2 - 16;
+							num7 = 210;
+							flag = true;
+							num8 = 390;
+							num = 260;
+							num3 = 60;
+							Main.PendingPlayer.hairColor = Main.selColor;
+							num4 = 3;
+							array9[0] = Lang.menu[37] + " " + (Main.PendingPlayer.hair + 1);
+							array9[1] = Lang.menu[38];
+							array[1] = true;
+							array4[2] = 150;
+							array4[1] = 10;
+							array9[2] = Lang.menu[5];
+							int num13 = 51;
+							if (this.selectedMenu == 0)
+							{
+								Main.PlaySound(12, -1, -1, 1);
+								Main.PendingPlayer.hair++;
+								if (Main.PendingPlayer.hair >= num13)
+								{
+									Main.PendingPlayer.hair = 0;
+								}
+							}
+							else if (this.selectedMenu2 == 0)
+							{
+								Main.PlaySound(12, -1, -1, 1);
+								Main.PendingPlayer.hair--;
+								if (Main.PendingPlayer.hair < 0)
+								{
+									Main.PendingPlayer.hair = num13 - 1;
+								}
+							}
+							if (this.selectedMenu == 2)
+							{
+								Main.menuMode = 2;
+								Main.PlaySound(11, -1, -1, 1);
+							}
+						}
+						else if (Main.menuMode == 18)
+						{
+							flag4 = true;
+							num6 = Main.screenWidth / 2 - 16;
+							num7 = 210;
+							flag = true;
+							num8 = 370;
+							num = 240;
+							num3 = 60;
+							Main.PendingPlayer.eyeColor = Main.selColor;
+							num4 = 3;
+							array9[0] = "";
+							array9[1] = Lang.menu[39];
+							array[1] = true;
+							array4[2] = 170;
+							array4[1] = 10;
+							array9[2] = Lang.menu[5];
+							if (this.selectedMenu == 2)
+							{
+								Main.menuMode = 2;
+								Main.PlaySound(11, -1, -1, 1);
+							}
+						}
+						else if (Main.menuMode == 19)
+						{
+							flag4 = true;
+							num6 = Main.screenWidth / 2 - 16;
+							num7 = 210;
+							flag = true;
+							num8 = 370;
+							num = 240;
+							num3 = 60;
+							Main.PendingPlayer.skinColor = Main.selColor;
+							num4 = 3;
+							array9[0] = "";
+							array9[1] = Lang.menu[40];
+							array[1] = true;
+							array4[2] = 170;
+							array4[1] = 10;
+							array9[2] = Lang.menu[5];
+							if (this.selectedMenu == 2)
+							{
+								Main.menuMode = 2;
+								Main.PlaySound(11, -1, -1, 1);
+							}
+						}
+						else if (Main.menuMode == 21)
+						{
+							flag4 = true;
+							num6 = Main.screenWidth / 2 - 16;
+							num7 = 210;
+							flag = true;
+							num8 = 370;
+							num = 240;
+							num3 = 60;
+							Main.PendingPlayer.shirtColor = Main.selColor;
+							num4 = 3;
+							array9[0] = "";
+							array9[1] = Lang.menu[41];
+							array[1] = true;
+							array4[2] = 170;
+							array4[1] = 10;
+							array9[2] = Lang.menu[5];
+							if (this.selectedMenu == 2)
+							{
+								Main.menuMode = 20;
+								Main.PlaySound(11, -1, -1, 1);
+							}
+						}
+						else if (Main.menuMode == 22)
+						{
+							flag4 = true;
+							num6 = Main.screenWidth / 2 - 16;
+							num7 = 210;
+							flag = true;
+							num8 = 370;
+							num = 240;
+							num3 = 60;
+							Main.PendingPlayer.underShirtColor = Main.selColor;
+							num4 = 3;
+							array9[0] = "";
+							array9[1] = Lang.menu[42];
+							array[1] = true;
+							array4[2] = 170;
+							array4[1] = 10;
+							array9[2] = Lang.menu[5];
+							if (this.selectedMenu == 2)
+							{
+								Main.menuMode = 20;
+								Main.PlaySound(11, -1, -1, 1);
+							}
+						}
+						else if (Main.menuMode == 23)
+						{
+							flag4 = true;
+							num6 = Main.screenWidth / 2 - 16;
+							num7 = 210;
+							flag = true;
+							num8 = 370;
+							num = 240;
+							num3 = 60;
+							Main.PendingPlayer.pantsColor = Main.selColor;
+							num4 = 3;
+							array9[0] = "";
+							array9[1] = Lang.menu[43];
+							array[1] = true;
+							array4[2] = 170;
+							array4[1] = 10;
+							array9[2] = Lang.menu[5];
+							if (this.selectedMenu == 2)
+							{
+								Main.menuMode = 20;
+								Main.PlaySound(11, -1, -1, 1);
+							}
+						}
+						else if (Main.menuMode == 24)
+						{
+							flag4 = true;
+							num6 = Main.screenWidth / 2 - 16;
+							num7 = 210;
+							flag = true;
+							num8 = 370;
+							num = 240;
+							num3 = 60;
+							Main.PendingPlayer.shoeColor = Main.selColor;
+							num4 = 3;
+							array9[0] = "";
+							array9[1] = Lang.menu[44];
+							array[1] = true;
+							array4[2] = 170;
+							array4[1] = 10;
+							array9[2] = Lang.menu[5];
+							if (this.selectedMenu == 2)
+							{
+								Main.menuMode = 20;
+								Main.PlaySound(11, -1, -1, 1);
+							}
+						}
+						else if (Main.menuMode == 3)
+						{
+							string name = Main.PendingPlayer.name;
+							Main.PendingPlayer.name = Main.GetInputText(Main.PendingPlayer.name);
+							if (Main.PendingPlayer.name.Length > Player.nameLen)
+							{
+								Main.PendingPlayer.name = Main.PendingPlayer.name.Substring(0, Player.nameLen);
+							}
+							if (name != Main.PendingPlayer.name)
+							{
+								Main.PlaySound(12, -1, -1, 1);
+							}
+							array9[0] = Lang.menu[45];
+							array2[2] = true;
+							if (Main.PendingPlayer.name != "")
+							{
+								if (Main.PendingPlayer.name.Substring(0, 1) == " ")
+								{
+									Main.PendingPlayer.name = "";
+								}
+								for (int num14 = 0; num14 < Main.PendingPlayer.name.Length; num14++)
+								{
+									if (Main.PendingPlayer.name.Substring(num14, 1) != " ")
+									{
+										array2[2] = false;
+									}
+								}
+							}
+							this.textBlinkerCount++;
+							if (this.textBlinkerCount >= 20)
+							{
+								if (this.textBlinkerState == 0)
+								{
+									this.textBlinkerState = 1;
+								}
+								else
+								{
+									this.textBlinkerState = 0;
+								}
+								this.textBlinkerCount = 0;
+							}
+							array9[1] = Main.PendingPlayer.name;
+							if (this.textBlinkerState == 1)
+							{
+								string[] array10;
+								(array10 = array9)[1] = array10[1] + "|";
+								array5[1] = 1;
+							}
+							else
+							{
+								string[] array10;
+								(array10 = array9)[1] = array10[1] + " ";
+							}
+							array[0] = true;
+							array[1] = true;
+							array4[1] = -20;
+							array4[2] = 20;
+							array9[2] = Lang.menu[4];
+							array9[3] = Lang.menu[5];
+							num4 = 4;
+							if (this.selectedMenu == 3)
+							{
+								Main.PlaySound(11, -1, -1, 1);
+								Main.menuMode = 2;
+							}
+							if (this.selectedMenu == 2 || (!array2[2] && Main.inputTextEnter))
+							{
+								Main.PendingPlayer.name.Trim();
+								PlayerFileData.CreateAndSave(Main.PendingPlayer);
+								Main.LoadPlayers();
+								Main.PlaySound(10, -1, -1, 1);
+								Main.menuMode = 1;
+							}
+						}
+						else if (Main.menuMode != 4)
+						{
+							if (Main.menuMode == 5)
+							{
+								array9[0] = Lang.menu[46] + " " + Main.PlayerList[Main.selectedPlayer].Player.name + "?";
+								array[0] = true;
+								array9[1] = Lang.menu[104];
+								array9[2] = Lang.menu[105];
+								num4 = 3;
+								if (this.selectedMenu == 1)
+								{
+									Main.ErasePlayer(Main.selectedPlayer);
+									Main.PlaySound(10, -1, -1, 1);
+									Main.menuMode = 1;
+								}
+								else if (this.selectedMenu == 2)
+								{
+									Main.PlaySound(11, -1, -1, 1);
+									Main.menuMode = 1;
+								}
+							}
+							else if (Main.menuMode == 6)
+							{
+								Main.MenuUI.SetState(Main._worldSelectMenu);
+								Main.menuMode = 888;
+							}
+							else if (Main.menuMode == -7)
+							{
+								num = 200;
+								num3 = 60;
+								array4[2] = 30;
+								array4[3] = 30;
+								array6[3] = 2;
+								array4[4] = 70;
+								if (this.focusMenu == 2)
+								{
+									array9[0] = "Your Journey Begins...";
+									array9[1] = "(The standard Terraria Experience)";
+								}
+								else if (this.focusMenu == 3)
+								{
+									array9[0] = "Fortune & Glory, Kid.";
+									array9[1] = "(Far Greater Difficulty & Loot)";
+								}
+								else
+								{
+									array9[0] = Lang.menu[32];
+								}
+								array[0] = true;
+								array[1] = true;
+								array9[2] = "Normal";
+								array9[3] = "Expert";
+								array9[4] = "Back";
+								num4 = 5;
+								if (this.selectedMenu == 2)
+								{
+									Main.expertMode = false;
+									Main.PlaySound(10, -1, -1, 1);
+									Main.menuMode = 7;
+								}
+								else if (this.selectedMenu == 3)
+								{
+									Main.expertMode = true;
+									Main.PlaySound(10, -1, -1, 1);
+									Main.menuMode = 7;
+								}
+								else if (this.selectedMenu == 4)
+								{
+									Main.PlaySound(11, -1, -1, 1);
+									Main.menuMode = 16;
+								}
+								Main.clrInput();
+							}
+							else if (Main.menuMode == 7)
+							{
+								string a = Main.newWorldName;
+								Main.newWorldName = Main.GetInputText(Main.newWorldName);
+								if (Main.newWorldName.Length > 20)
+								{
+									Main.newWorldName = Main.newWorldName.Substring(0, 20);
+								}
+								if (a != Main.newWorldName)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+								}
+								array9[0] = Lang.menu[48];
+								array2[2] = true;
+								if (Main.newWorldName != "")
+								{
+									if (Main.newWorldName.Substring(0, 1) == " ")
+									{
+										Main.newWorldName = "";
+									}
+									for (int num15 = 0; num15 < Main.newWorldName.Length; num15++)
+									{
+										if (Main.newWorldName != " ")
+										{
+											array2[2] = false;
+										}
+									}
+								}
+								this.textBlinkerCount++;
+								if (this.textBlinkerCount >= 20)
+								{
+									if (this.textBlinkerState == 0)
+									{
+										this.textBlinkerState = 1;
+									}
+									else
+									{
+										this.textBlinkerState = 0;
+									}
+									this.textBlinkerCount = 0;
+								}
+								array9[1] = Main.newWorldName;
+								if (this.textBlinkerState == 1)
+								{
+									string[] array10;
+									(array10 = array9)[1] = array10[1] + "|";
+									array5[1] = 1;
+								}
+								else
+								{
+									string[] array10;
+									(array10 = array9)[1] = array10[1] + " ";
+								}
+								array[0] = true;
+								array[1] = true;
+								array4[1] = -20;
+								array4[2] = 20;
+								array9[2] = Lang.menu[4];
+								array9[3] = Lang.menu[5];
+								num4 = 4;
+								if (this.selectedMenu == 3)
+								{
+									Main.PlaySound(11, -1, -1, 1);
+									Main.menuMode = -7;
+								}
+								if (this.selectedMenu == 2 || (!array2[2] && Main.inputTextEnter))
+								{
+									Main.menuMode = 10;
+									Main.worldName = Main.newWorldName;
+									Main.ActiveWorldFileData = WorldFile.CreateMetadata(Main.worldName, SocialAPI.Cloud != null && SocialAPI.Cloud.EnabledByDefault, Main.expertMode);
+									WorldGen.CreateNewWorld(null);
+								}
+							}
+							else if (Main.menuMode == 8)
+							{
+								num = 180;
+								num3 = 40;
+								num4 = 8;
+								array4[7] += 30;
+								for (int num16 = 0; num16 < num4; num16++)
+								{
+									array7[num16] = 0.8f;
+								}
+								array9[7] = Lang.menu[5];
+								for (int num17 = 0; num17 < 7; num17++)
+								{
+									if (num17 < Main.WorldList.Count)
+									{
+										array9[num17] = Main.WorldList[num17 + Main.menuSkip].Name;
+										if (Main.WorldList[num17 + Main.menuSkip].IsExpertMode)
+										{
+											array6[num17] = 2;
+										}
+									}
+									else
+									{
+										array9[num17] = null;
+									}
+								}
+								if (Main.WorldList.Count > 7 + Main.menuSkip)
+								{
+									array9[6] = "more";
+									array9[6] = "▼";
+									array7[6] = 0.6f;
+									array4[6] += 8;
+									this.menuWide[6] = true;
+								}
+								if (Main.menuSkip > 0)
+								{
+									array9[0] = "▲";
+									array7[0] = 0.6f;
+									array4[0] += 8;
+									this.menuWide[0] = true;
+								}
+								if (this.selectedMenu == 0 && Main.menuSkip > 0)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									Main.menuSkip -= 5;
+									if (Main.menuSkip < 0)
+									{
+										Main.menuSkip = 0;
+									}
+								}
+								else if (this.selectedMenu == 6 && Main.menuSkip < Main.WorldList.Count - 7)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									Main.menuSkip += 5;
+									if (Main.menuSkip >= Main.PlayerList.Count - 7)
+									{
+										Main.menuSkip = Main.WorldList.Count - 7;
+									}
+								}
+								else if (this.selectedMenu == 7)
+								{
+									Main.PlaySound(11, -1, -1, 1);
+									Main.menuMode = 6;
+								}
+								else if (this.selectedMenu >= 0)
+								{
+									Main.selectedWorld = this.selectedMenu + Main.menuSkip;
+									Main.PlaySound(10, -1, -1, 1);
+									Main.menuMode = 9;
+								}
+							}
+							else if (Main.menuMode == 9)
+							{
+								array9[0] = Lang.menu[46] + " " + Main.WorldList[Main.selectedWorld].Name + "?";
+								array[0] = true;
+								array9[1] = Lang.menu[104];
+								array9[2] = Lang.menu[105];
+								num4 = 3;
+								if (this.selectedMenu == 1)
+								{
+									Main.EraseWorld(Main.selectedWorld);
+									Main.PlaySound(10, -1, -1, 1);
+									Main.menuMode = 6;
+								}
+								else if (this.selectedMenu == 2)
+								{
+									Main.PlaySound(11, -1, -1, 1);
+									Main.menuMode = 6;
+								}
+							}
+							else if (Main.menuMode == 1111)
+							{
+								num = 210;
+								num3 = 40;
+								for (int num18 = 0; num18 < 8; num18++)
+								{
+									array7[num18] = 0.8f;
+								}
+								array4[8] = 10;
+								num4 = 9;
+								if (Main.graphics.IsFullScreen)
+								{
+									array9[0] = Lang.menu[49];
+								}
+								else
+								{
+									array9[0] = Lang.menu[50];
+								}
+								Main.bgScroll = (int)Math.Round((double)((1f - Main.caveParallax) * 500f));
+								array9[1] = Lang.menu[51];
+								array9[2] = Lang.menu[52];
+								if (Main.terrariasFixedTiming)
+								{
+									array9[3] = Lang.menu[53];
+								}
+								else
+								{
+									array9[3] = Lang.menu[54];
+								}
+								if (Lighting.lightMode == 0)
+								{
+									array9[4] = Lang.menu[55];
+								}
+								else if (Lighting.lightMode == 1)
+								{
+									array9[4] = Lang.menu[56];
+								}
+								else if (Lighting.lightMode == 2)
+								{
+									array9[4] = Lang.menu[57];
+								}
+								else if (Lighting.lightMode == 3)
+								{
+									array9[4] = Lang.menu[58];
+								}
+								if (Lighting.LightingThreads == 0)
+								{
+									array9[5] = Lang.menu[116] + " " + Lang.menu[117];
+								}
+								else
+								{
+									array9[5] = Lang.menu[116] + " " + (Lighting.LightingThreads + 1);
+								}
+								if (Main.qaStyle == 0)
+								{
+									array9[6] = Lang.menu[59];
+								}
+								else if (Main.qaStyle == 1)
+								{
+									array9[6] = Lang.menu[60];
+								}
+								else if (Main.qaStyle == 2)
+								{
+									array9[6] = Lang.menu[61];
+								}
+								else
+								{
+									array9[6] = Lang.menu[62];
+								}
+								if (Main.owBack)
+								{
+									array9[7] = Lang.menu[100];
+								}
+								else
+								{
+									array9[7] = Lang.menu[101];
+								}
+								if (this.selectedMenu == 7)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									if (Main.owBack)
+									{
+										Main.owBack = false;
+									}
+									else
+									{
+										Main.owBack = true;
+									}
+								}
+								array9[8] = Lang.menu[5];
+								if (this.selectedMenu == 8)
+								{
+									Main.PlaySound(11, -1, -1, 1);
+									Main.SaveSettings();
+									Main.menuMode = 11;
+								}
+								if (this.selectedMenu == 6)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									Main.qaStyle++;
+									if (Main.qaStyle > 3)
+									{
+										Main.qaStyle = 0;
+									}
+								}
+								if (this.selectedMenu == 5)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									Lighting.LightingThreads++;
+									if (Lighting.LightingThreads > Environment.ProcessorCount - 1)
+									{
+										Lighting.LightingThreads = 0;
+									}
+								}
+								if (this.selectedMenu == 4)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									Lighting.lightMode++;
+									if (Lighting.lightMode >= 4)
+									{
+										Lighting.lightMode = 0;
+									}
+								}
+								if (this.selectedMenu == 3)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									if (Main.terrariasFixedTiming)
+									{
+										Main.terrariasFixedTiming = false;
+									}
+									else
+									{
+										Main.terrariasFixedTiming = true;
+									}
+								}
+								if (this.selectedMenu == 2)
+								{
+									Main.PlaySound(11, -1, -1, 1);
+									Main.menuMode = 28;
+								}
+								if (this.selectedMenu == 1)
+								{
+									Main.PlaySound(10, -1, -1, 1);
+									Main.menuMode = 111;
+								}
+								if (this.selectedMenu == 0)
+								{
+									Main.ToggleFullScreen();
+								}
+							}
+							else if (Main.menuMode == 11)
+							{
+								num = 240;
+								num3 = 37;
+								num4 = 8;
+								array4[num4 - 1] = 8;
+								for (int num19 = 0; num19 < num4; num19++)
+								{
+									array7[num19] = 0.73f;
+								}
+								int num20 = 0;
+								array9[num20] = Lang.menu[114];
+								if (this.selectedMenu == num20)
+								{
+									Main.PlaySound(10, -1, -1, 1);
+									Main.menuMode = 112;
+								}
+								num20++;
+								array9[num20] = Lang.menu[63];
+								if (this.selectedMenu == num20)
+								{
+									Main.PlaySound(10, -1, -1, 1);
+									Main.menuMode = 1111;
+								}
+								num20++;
+								array9[num20] = Lang.menu[64];
+								if (this.selectedMenu == num20)
+								{
+									Main.PlaySound(10, -1, -1, 1);
+									Main.selColor = Main.mouseColor;
+									Main.menuMode = 25;
+								}
+								num20++;
+								array9[num20] = Lang.menu[65];
+								if (this.selectedMenu == num20)
+								{
+									Main.PlaySound(11, -1, -1, 1);
+									Main.menuMode = 26;
+								}
+								num20++;
+								array9[num20] = Lang.menu[66];
+								if (this.selectedMenu == num20)
+								{
+									Main.PlaySound(11, -1, -1, 1);
+									Main.menuMode = 27;
+								}
+								num20++;
+								array9[num20] = Lang.menu[115];
+								if (this.selectedMenu == num20)
+								{
+									Main.PlaySound(11, -1, -1, 1);
+									Main.menuMode = 272727;
+								}
+								num20++;
+								array9[num20] = Lang.menu[103];
+								if (this.selectedMenu == num20)
+								{
+									Main.PlaySound(10, -1, -1, 1);
+									Main.menuMode = 1213;
+								}
+								num20++;
+								array9[num20] = Lang.menu[5];
+								if (this.selectedMenu == num20)
+								{
+									Main.PlaySound(11, -1, -1, 1);
+									Main.menuMode = 0;
+									Main.SaveSettings();
+								}
+							}
+							else if (Main.menuMode == 112)
+							{
+								num = 220;
+								num3 = 34;
+								num4 = 10;
+								array4[num4 - 1] = 18;
+								for (int num21 = 0; num21 < num4; num21++)
+								{
+									array7[num21] = 0.73f;
+								}
+								int num22 = 0;
+								if (Main.autoSave)
+								{
+									array9[num22] = Lang.menu[67];
+								}
+								else
+								{
+									array9[num22] = Lang.menu[68];
+								}
+								if (this.selectedMenu == num22)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									if (Main.autoSave)
+									{
+										Main.autoSave = false;
+									}
+									else
+									{
+										Main.autoSave = true;
+									}
+								}
+								num22++;
+								if (Main.autoPause)
+								{
+									array9[num22] = Lang.menu[69];
+								}
+								else
+								{
+									array9[num22] = Lang.menu[70];
+								}
+								if (this.selectedMenu == num22)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									if (Main.autoPause)
+									{
+										Main.autoPause = false;
+									}
+									else
+									{
+										Main.autoPause = true;
+									}
+								}
+								num22++;
+								if (Main.showItemText)
+								{
+									array9[num22] = Lang.menu[71];
+								}
+								else
+								{
+									array9[num22] = Lang.menu[72];
+								}
+								if (this.selectedMenu == num22)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									if (Main.showItemText)
+									{
+										Main.showItemText = false;
+									}
+									else
+									{
+										Main.showItemText = true;
+									}
+								}
+								num22++;
+								if (Main.mapEnabled)
+								{
+									array9[num22] = Lang.menu[112];
+								}
+								else
+								{
+									array9[num22] = Lang.menu[113];
+								}
+								if (this.selectedMenu == num22)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									if (Main.mapEnabled)
+									{
+										Main.mapEnabled = false;
+									}
+									else
+									{
+										Main.mapEnabled = true;
+									}
+								}
+								num22++;
+								array9[num22] = (Main.cSmartToggle ? Lang.menu[121] : Lang.menu[122]);
+								if (this.selectedMenu == num22)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									Main.cSmartToggle = !Main.cSmartToggle;
+								}
+								num22++;
+								array9[num22] = Lang.menu[123] + " " + Lang.menu[124 + Main.invasionProgressMode];
+								if (this.selectedMenu == num22)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									Main.invasionProgressMode++;
+									if (Main.invasionProgressMode >= 3)
+									{
+										Main.invasionProgressMode = 0;
+									}
+								}
+								num22++;
+								array9[num22] = (Main.placementPreview ? Lang.menu[128] : Lang.menu[129]);
+								if (this.selectedMenu == num22)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									Main.placementPreview = !Main.placementPreview;
+								}
+								num22++;
+								array9[num22] = (ChildSafety.Disabled ? Lang.menu[132] : Lang.menu[133]);
+								if (this.selectedMenu == num22)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									ChildSafety.Disabled = !ChildSafety.Disabled;
+								}
+								num22++;
+								array9[num22] = (ItemSlot.Options.HighlightNewItems ? Lang.inter[117] : Lang.inter[116]);
+								if (this.selectedMenu == num22)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									ItemSlot.Options.HighlightNewItems = !ItemSlot.Options.HighlightNewItems;
+								}
+								num22++;
+								array9[num22] = Lang.menu[5];
+								if (this.selectedMenu == num22)
+								{
+									Main.menuMode = 11;
+									Main.PlaySound(11, -1, -1, 1);
+								}
+							}
+							else if (Main.menuMode == 111)
+							{
+								num = 240;
+								num3 = 60;
+								num4 = 4;
+								array9[0] = Lang.menu[73];
+								array9[1] = Main.PendingResolutionWidth + "x" + Main.PendingResolutionHeight;
+								array9[2] = Lang.menu[134];
+								array9[3] = Lang.menu[5];
+								array[0] = true;
+								array4[1] = 10;
+								array4[2] = 140;
+								array4[3] = 140;
+								if (this.selectedMenu == 1)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									int num23 = 0;
+									for (int num24 = 0; num24 < Main.numDisplayModes; num24++)
+									{
+										if (Main.displayWidth[num24] == Main.PendingResolutionWidth && Main.displayHeight[num24] == Main.PendingResolutionHeight)
+										{
+											num23 = num24;
+											break;
+										}
+									}
+									num23 = (num23 + 1) % Main.numDisplayModes;
+									Main.PendingResolutionWidth = Main.displayWidth[num23];
+									Main.PendingResolutionHeight = Main.displayHeight[num23];
+								}
+								if (this.selectedMenu == 2)
+								{
+									if (Main.graphics.IsFullScreen)
+									{
+										Main.SetResolution(Main.PendingResolutionWidth, Main.PendingResolutionHeight);
+									}
+									Main.PlaySound(11, -1, -1, 1);
+									Main.menuMode = 1111;
+								}
+								if (this.selectedMenu == 3)
+								{
+									Main.PendingResolutionWidth = Main.graphics.PreferredBackBufferWidth;
+									Main.PendingResolutionHeight = Main.graphics.PreferredBackBufferHeight;
+									Main.menuMode = 1111;
+									Main.PlaySound(11, -1, -1, 1);
+								}
+							}
+							else if (Main.menuMode == 25)
+							{
+								flag = true;
+								num8 = 370;
+								num = 240;
+								num3 = 60;
+								Main.mouseColor = Main.selColor;
+								num4 = 3;
+								array9[0] = "";
+								array9[1] = Lang.menu[64];
+								array[1] = true;
+								array4[2] = 170;
+								array4[1] = 10;
+								array9[2] = Lang.menu[5];
+								if (this.selectedMenu == 2)
+								{
+									Main.menuMode = 11;
+									Main.PlaySound(11, -1, -1, 1);
+								}
+							}
+							else if (Main.menuMode == 26)
+							{
+								flag2 = true;
+								num = 240;
+								num3 = 60;
+								num4 = 3;
+								array9[0] = "";
+								array9[1] = Lang.menu[65];
+								array[1] = true;
+								array4[2] = 170;
+								array4[1] = 10;
+								array9[2] = Lang.menu[5];
+								if (this.selectedMenu == 2)
+								{
+									Main.menuMode = 11;
+									Main.PlaySound(11, -1, -1, 1);
+								}
+							}
+							else if (Main.menuMode == 28)
+							{
+								Main.caveParallax = 1f - (float)Main.bgScroll / 500f;
+								flag3 = true;
+								num = 240;
+								num3 = 60;
+								num4 = 3;
+								array9[0] = "";
+								array9[1] = Lang.menu[52];
+								array[1] = true;
+								array4[2] = 170;
+								array4[1] = 10;
+								array9[2] = Lang.menu[5];
+								if (this.selectedMenu == 2)
+								{
+									Main.menuMode = 1111;
+									Main.PlaySound(11, -1, -1, 1);
+								}
+							}
+							else if (Main.menuMode == 272727)
+							{
+								num = 200;
+								num3 = 30;
+								num4 = 14;
+								string[] array11 = new string[12];
+								array11[0] = Main.cMapStyle;
+								array11[1] = Main.cMapFull;
+								array11[2] = Main.cMapZoomIn;
+								array11[3] = Main.cMapZoomOut;
+								array11[4] = Main.cMapAlphaUp;
+								array11[5] = Main.cMapAlphaDown;
+								if (Main.setKey >= 0)
+								{
+									array11[Main.setKey] = "_";
+								}
+								array9[0] = Lang.menu[106] + array11[0];
+								array9[1] = Lang.menu[107] + array11[1];
+								array9[2] = Lang.menu[108] + array11[2];
+								array9[3] = Lang.menu[109] + array11[3];
+								array9[4] = Lang.menu[110] + array11[4];
+								array9[5] = Lang.menu[111] + array11[5];
+								for (int num25 = 0; num25 < 6; num25++)
+								{
+									array8[num25] = true;
+									array7[num25] = 0.55f;
+									array5[num25] = -140;
+								}
+								array7[6] = 0.8f;
+								array7[6] = 0.8f;
+								array4[6] = 6;
+								array9[6] = Lang.menu[86];
+								array4[7] = 16;
+								array9[7] = Lang.menu[5];
+								if (this.selectedMenu == 7)
+								{
+									Main.menuMode = 11;
+									Main.PlaySound(11, -1, -1, 1);
+								}
+								else if (this.selectedMenu == 6)
+								{
+									Main.cMapStyle = "Tab";
+									Main.cMapFull = "M";
+									Main.cMapZoomIn = "Add";
+									Main.cMapZoomOut = "Subtract";
+									Main.cMapAlphaUp = "PageUp";
+									Main.cMapAlphaDown = "PageDown";
+									Main.setKey = -1;
+									Main.PlaySound(11, -1, -1, 1);
+								}
+								else if (this.selectedMenu >= 0)
+								{
+									Main.setKey = this.selectedMenu;
+								}
+								if (Main.setKey >= 0)
+								{
+									Microsoft.Xna.Framework.Input.Keys[] pressedKeys = Main.keyState.GetPressedKeys();
+									if (pressedKeys.Length > 0)
+									{
+										string a2 = string.Concat(pressedKeys[0]);
+										if (a2 != "None")
+										{
+											if (Main.setKey == 0)
+											{
+												Main.cMapStyle = a2;
+											}
+											if (Main.setKey == 1)
+											{
+												Main.cMapFull = a2;
+											}
+											if (Main.setKey == 2)
+											{
+												Main.cMapZoomIn = a2;
+											}
+											if (Main.setKey == 3)
+											{
+												Main.cMapZoomOut = a2;
+											}
+											if (Main.setKey == 4)
+											{
+												Main.cMapAlphaUp = a2;
+											}
+											if (Main.setKey == 5)
+											{
+												Main.cMapAlphaDown = a2;
+											}
+											Main.setKey = -1;
+										}
+									}
+								}
+							}
+							else if (Main.menuMode == 27)
+							{
+								num = 176;
+								num3 = 22;
+								num4 = 16;
+								string[] array12 = new string[]
+								{
+									Main.cUp,
+									Main.cDown,
+									Main.cLeft,
+									Main.cRight,
+									Main.cJump,
+									Main.cThrowItem,
+									Main.cInv,
+									Main.cHeal,
+									Main.cMana,
+									Main.cBuff,
+									Main.cHook,
+									Main.cTorch,
+									Main.cSmart,
+									Main.cMount
+								};
+								if (Main.setKey >= 0)
+								{
+									array12[Main.setKey] = "_";
+								}
+								array9[0] = Lang.menu[74] + array12[0];
+								array9[1] = Lang.menu[75] + array12[1];
+								array9[2] = Lang.menu[76] + array12[2];
+								array9[3] = Lang.menu[77] + array12[3];
+								array9[4] = Lang.menu[78] + array12[4];
+								array9[5] = Lang.menu[79] + array12[5];
+								array9[6] = Lang.menu[80] + array12[6];
+								array9[7] = Lang.menu[81] + array12[7];
+								array9[8] = Lang.menu[82] + array12[8];
+								array9[9] = Lang.menu[83] + array12[9];
+								array9[10] = Lang.menu[84] + array12[10];
+								array9[11] = Lang.menu[85] + array12[11];
+								array9[12] = Lang.menu[120] + array12[12];
+								array9[13] = Lang.menu[130] + array12[13];
+								for (int num26 = 0; num26 < 14; num26++)
+								{
+									array8[num26] = true;
+									array7[num26] = 0.45f;
+									array5[num26] = -80;
+								}
+								array7[14] = 0.8f;
+								array4[14] = 6;
+								array9[14] = Lang.menu[86];
+								array7[15] = 0.8f;
+								array4[15] = 16;
+								array9[15] = Lang.menu[5];
+								if (this.selectedMenu == 15)
+								{
+									Main.menuMode = 11;
+									Main.PlaySound(11, -1, -1, 1);
+								}
+								else if (this.selectedMenu == 14)
+								{
+									Main.ResetKeyBindings();
+									Main.setKey = -1;
+									Main.PlaySound(11, -1, -1, 1);
+								}
+								else if (this.selectedMenu >= 0)
+								{
+									Main.setKey = this.selectedMenu;
+								}
+								if (Main.setKey >= 0)
+								{
+									Microsoft.Xna.Framework.Input.Keys[] pressedKeys2 = Main.keyState.GetPressedKeys();
+									if (pressedKeys2.Length > 0)
+									{
+										string a3 = string.Concat(pressedKeys2[0]);
+										if (a3 != "None")
+										{
+											if (Main.setKey == 0)
+											{
+												Main.cUp = a3;
+											}
+											if (Main.setKey == 1)
+											{
+												Main.cDown = a3;
+											}
+											if (Main.setKey == 2)
+											{
+												Main.cLeft = a3;
+											}
+											if (Main.setKey == 3)
+											{
+												Main.cRight = a3;
+											}
+											if (Main.setKey == 4)
+											{
+												Main.cJump = a3;
+											}
+											if (Main.setKey == 5)
+											{
+												Main.cThrowItem = a3;
+											}
+											if (Main.setKey == 6)
+											{
+												Main.cInv = a3;
+											}
+											if (Main.setKey == 7)
+											{
+												Main.cHeal = a3;
+											}
+											if (Main.setKey == 8)
+											{
+												Main.cMana = a3;
+											}
+											if (Main.setKey == 9)
+											{
+												Main.cBuff = a3;
+											}
+											if (Main.setKey == 10)
+											{
+												Main.cHook = a3;
+											}
+											if (Main.setKey == 11)
+											{
+												Main.cTorch = a3;
+											}
+											if (Main.setKey == 12)
+											{
+												Main.cSmart = a3;
+											}
+											if (Main.setKey == 13)
+											{
+												Main.cMount = a3;
+											}
+											Main.setKey = -1;
+										}
+									}
+								}
+							}
+							else if (Main.menuMode == 12)
+							{
+								int num27 = (SocialAPI.Network != null) ? 1 : 0;
+								Main.menuServer = false;
+								array9[0] = Lang.menu[(SocialAPI.Network != null) ? 146 : 87];
+								array9[1] = Lang.menu[145];
+								array9[1 + num27] = Lang.menu[88];
+								array9[2 + num27] = Lang.menu[5];
+								if (this.selectedMenu == 0)
+								{
+									Main.LoadPlayers();
+									Main.menuMultiplayer = true;
+									Main.PlaySound(10, -1, -1, 1);
+									Main.menuMode = 1;
+								}
+								else if (this.selectedMenu == 1 + num27)
+								{
+									Main.LoadPlayers();
+									Main.PlaySound(10, -1, -1, 1);
+									Main.menuMode = 1;
+									Main.menuMultiplayer = true;
+									Main.menuServer = true;
+								}
+								else if (this.selectedMenu == 1)
+								{
+									Main.PlaySound(10, -1, -1, 1);
+									SocialAPI.Friends.OpenJoinInterface();
+								}
+								else if (this.selectedMenu == 2 + num27)
+								{
+									Main.PlaySound(11, -1, -1, 1);
+									Main.menuMode = 0;
+								}
+								num4 = 3 + num27;
+							}
+							else if (Main.menuMode == 13)
+							{
+								string a4 = Main.getIP;
+								Main.getIP = Main.GetInputText(Main.getIP);
+								if (a4 != Main.getIP)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+								}
+								array9[0] = Lang.menu[89];
+								array2[9] = true;
+								if (Main.getIP != "")
+								{
+									if (Main.getIP.Substring(0, 1) == " ")
+									{
+										Main.getIP = "";
+									}
+									for (int num28 = 0; num28 < Main.getIP.Length; num28++)
+									{
+										if (Main.getIP != " ")
+										{
+											array2[9] = false;
+										}
+									}
+								}
+								this.textBlinkerCount++;
+								if (this.textBlinkerCount >= 20)
+								{
+									if (this.textBlinkerState == 0)
+									{
+										this.textBlinkerState = 1;
+									}
+									else
+									{
+										this.textBlinkerState = 0;
+									}
+									this.textBlinkerCount = 0;
+								}
+								array9[1] = Main.getIP;
+								if (this.textBlinkerState == 1)
+								{
+									string[] array10;
+									(array10 = array9)[1] = array10[1] + "|";
+									array5[1] = 1;
+								}
+								else
+								{
+									string[] array10;
+									(array10 = array9)[1] = array10[1] + " ";
+								}
+								array[0] = true;
+								array[1] = true;
+								array4[9] = 44;
+								array4[10] = 64;
+								array9[9] = Lang.menu[4];
+								array9[10] = Lang.menu[5];
+								num4 = 11;
+								num = 180;
+								num3 = 30;
+								array4[1] = 19;
+								for (int num29 = 2; num29 < 9; num29++)
+								{
+									int num30 = num29 - 2;
+									if (Main.recentWorld[num30] != null && Main.recentWorld[num30] != "")
+									{
+										array9[num29] = string.Concat(new object[]
+										{
+											Main.recentWorld[num30],
+											" (",
+											Main.recentIP[num30],
+											":",
+											Main.recentPort[num30],
+											")"
+										});
+									}
+									else
+									{
+										array9[num29] = "";
+										array[num29] = true;
+									}
+									array7[num29] = 0.6f;
+									array4[num29] = 40;
+								}
+								if (this.selectedMenu >= 2 && this.selectedMenu < 9)
+								{
+									Main.autoPass = false;
+									int num31 = this.selectedMenu - 2;
+									Netplay.ListenPort = Main.recentPort[num31];
+									Main.getIP = Main.recentIP[num31];
+									if (Netplay.SetRemoteIP(Main.getIP))
+									{
+										Main.menuMode = 10;
+										Netplay.StartTcpClient();
+									}
+								}
+								if (this.selectedMenu == 10)
+								{
+									Main.PlaySound(11, -1, -1, 1);
+									Main.menuMode = 1;
+								}
+								if (this.selectedMenu == 9 || (!array2[2] && Main.inputTextEnter))
+								{
+									Main.PlaySound(12, -1, -1, 1);
+									Main.menuMode = 131;
+									Main.clrInput();
+								}
+							}
+							else if (Main.menuMode == 131)
+							{
+								int num32 = 7777;
+								string a5 = Main.getPort;
+								Main.getPort = Main.GetInputText(Main.getPort);
+								if (a5 != Main.getPort)
+								{
+									Main.PlaySound(12, -1, -1, 1);
+								}
+								array9[0] = Lang.menu[90];
+								array2[2] = true;
+								if (Main.getPort != "")
+								{
+									bool flag6 = false;
+									try
+									{
+										num32 = Convert.ToInt32(Main.getPort);
+										if (num32 > 0 && num32 <= 65535)
+										{
+											flag6 = true;
+										}
+									}
+									catch
+									{
+									}
+									if (flag6)
+									{
+										array2[2] = false;
+									}
+								}
+								this.textBlinkerCount++;
+								if (this.textBlinkerCount >= 20)
+								{
+									if (this.textBlinkerState == 0)
+									{
+										this.textBlinkerState = 1;
+									}
+									else
+									{
+										this.textBlinkerState = 0;
+									}
+									this.textBlinkerCount = 0;
+								}
+								array9[1] = Main.getPort;
+								if (this.textBlinkerState == 1)
+								{
+									string[] array10;
+									(array10 = array9)[1] = array10[1] + "|";
+									array5[1] = 1;
+								}
+								else
+								{
+									string[] array10;
+									(array10 = array9)[1] = array10[1] + " ";
+								}
+								array[0] = true;
+								array[1] = true;
+								array4[1] = -20;
+								array4[2] = 20;
+								array9[2] = Lang.menu[4];
+								array9[3] = Lang.menu[5];
+								num4 = 4;
+								if (this.selectedMenu == 3)
+								{
+									Main.PlaySound(11, -1, -1, 1);
+									Main.menuMode = 1;
+								}
+								if (this.selectedMenu == 2 || (!array2[2] && Main.inputTextEnter))
+								{
+									Netplay.ListenPort = num32;
+									Main.autoPass = false;
+									if (Netplay.SetRemoteIP(Main.getIP))
+									{
+										Main.menuMode = 10;
+										Netplay.StartTcpClient();
+									}
+								}
+							}
+							else if (Main.menuMode == 16)
+							{
+								num = 200;
+								num3 = 60;
+								array4[1] = 30;
+								array4[2] = 30;
+								array4[3] = 30;
+								array4[4] = 70;
+								array9[0] = Lang.menu[91];
+								array[0] = true;
+								array9[1] = Lang.menu[92];
+								array9[2] = Lang.menu[93];
+								array9[3] = Lang.menu[94];
+								array9[4] = Lang.menu[5];
+								num4 = 5;
+								if (this.selectedMenu == 4)
+								{
+									Main.menuMode = 6;
+									Main.PlaySound(11, -1, -1, 1);
+								}
+								else if (this.selectedMenu > 0)
+								{
+									if (this.selectedMenu == 1)
+									{
+										Main.maxTilesX = 4200;
+										Main.maxTilesY = 1200;
+									}
+									else if (this.selectedMenu == 2)
+									{
+										Main.maxTilesX = 6400;
+										Main.maxTilesY = 1800;
+									}
+									else
+									{
+										Main.maxTilesX = 8400;
+										Main.maxTilesY = 2400;
+									}
+									Main.clrInput();
+									Main.menuMode = -7;
+									Main.PlaySound(10, -1, -1, 1);
+									WorldGen.setWorldSize();
+								}
+							}
+						}
+					}
+					IL_4287:
+					if (Main.menuMode == 888)
+					{
+						Main.MenuUI.Draw(Main.spriteBatch, gameTime);
+					}
+					if (Main.menuMode != num5)
+					{
+						Main.blockMouse = true;
+						Main.menuSkip = 0;
+						num4 = 0;
+						for (int num33 = 0; num33 < Main.maxMenuItems; num33++)
+						{
+							this.menuItemScale[num33] = 0.8f;
+						}
+					}
+					if (!Main.mouseLeft)
+					{
+						Main.blockMouse = true;
+					}
+					int num34 = this.focusMenu;
+					this.selectedMenu = -1;
+					this.selectedMenu2 = -1;
+					this.focusMenu = -1;
+					for (int num35 = 0; num35 < num4; num35++)
+					{
+						if (array9[num35] != null)
+						{
+							if (!flag)
+							{
+								this.grabColorSlider = 0;
+								Main.hBar = -1f;
+								Main.sBar = -1f;
+								Main.lBar = -1f;
+							}
+							if (flag)
+							{
+								if (!Main.mouseLeft)
+								{
+									this.grabColorSlider = 0;
+									Main.blockMouse = false;
+								}
+								int num36 = num8;
+								int num37 = Main.screenWidth / 2 - this.hueTexture.Width / 2;
+								int num38 = 167;
+								Vector3 vector = Main.rgbToHsl(Main.selColor);
+								float num39 = vector.X;
+								float num40 = vector.Y;
+								float num41 = vector.Z;
+								if (Main.hBar == -1f || Main.sBar == -1f || Main.lBar == -1f)
+								{
+									Main.hBar = num39;
+									Main.sBar = num40;
+									Main.lBar = num41;
+								}
+								else
+								{
+									num39 = Main.hBar;
+									num40 = Main.sBar;
+									num41 = Main.lBar;
+								}
+								Main.spriteBatch.Draw(this.hueTexture, new Vector2((float)num37, (float)num36), Microsoft.Xna.Framework.Color.White);
+								Main.spriteBatch.Draw(Main.colorSliderTexture, new Vector2((float)num37 + (float)(this.hueTexture.Width - 2) * Main.hBar - (float)(Main.colorSliderTexture.Width / 2), (float)(num36 - Main.colorSliderTexture.Height / 2 + this.hueTexture.Height / 2)), Microsoft.Xna.Framework.Color.White);
+								if (((Main.mouseX > num37 - 4 && Main.mouseX < num37 + this.hueTexture.Width + 4 && Main.mouseY > num36 - 4 && Main.mouseY < num36 + this.hueTexture.Height + 4) || this.grabColorSlider == 1) && Main.mouseLeft && !Main.blockMouse)
+								{
+									this.grabColorSlider = 1;
+									num39 = (float)(Main.mouseX - num37);
+									num39 /= (float)this.hueTexture.Width;
+									if (num39 < 0f)
+									{
+										num39 = 0f;
+									}
+									if (num39 > 1f)
+									{
+										num39 = 1f;
+									}
+									Main.hBar = num39;
+								}
+								num36 += 26;
+								Main.spriteBatch.Draw(Main.colorBarTexture, new Vector2((float)num37, (float)num36), Microsoft.Xna.Framework.Color.White);
+								for (int num42 = 0; num42 <= num38; num42++)
+								{
+									float saturation = (float)num42 / (float)num38;
+									Microsoft.Xna.Framework.Color color4 = Main.hslToRgb(num39, saturation, num41);
+									Main.spriteBatch.Draw(Main.colorBlipTexture, new Vector2((float)(num37 + num42 + 5), (float)(num36 + 4)), color4);
+								}
+								Main.spriteBatch.Draw(Main.colorSliderTexture, new Vector2((float)num37 + (float)(this.hueTexture.Width - 2) * Main.sBar - (float)(Main.colorSliderTexture.Width / 2), (float)(num36 - Main.colorSliderTexture.Height / 2 + this.hueTexture.Height / 2)), Microsoft.Xna.Framework.Color.White);
+								if (((Main.mouseX > num37 - 4 && Main.mouseX < num37 + this.hueTexture.Width + 4 && Main.mouseY > num36 - 4 && Main.mouseY < num36 + this.hueTexture.Height + 4) || this.grabColorSlider == 2) && Main.mouseLeft && !Main.blockMouse)
+								{
+									this.grabColorSlider = 2;
+									num40 = (float)(Main.mouseX - num37);
+									num40 /= (float)this.hueTexture.Width;
+									if (num40 < 0f)
+									{
+										num40 = 0f;
+									}
+									if (num40 > 1f)
+									{
+										num40 = 1f;
+									}
+									Main.sBar = num40;
+								}
+								num36 += 26;
+								Main.spriteBatch.Draw(Main.colorBarTexture, new Vector2((float)num37, (float)num36), Microsoft.Xna.Framework.Color.White);
+								float num43 = 0.15f;
+								for (int num44 = 0; num44 <= num38; num44++)
+								{
+									float luminosity = (float)num44 / (float)num38;
+									Microsoft.Xna.Framework.Color color5 = Main.hslToRgb(num39, num40, luminosity);
+									Main.spriteBatch.Draw(Main.colorBlipTexture, new Vector2((float)(num37 + num44 + 5), (float)(num36 + 4)), color5);
+								}
+								Main.spriteBatch.Draw(Main.colorSliderTexture, new Vector2((float)num37 + (float)(this.hueTexture.Width - 2) * ((Main.lBar - num43) / (1f - num43)) - (float)(Main.colorSliderTexture.Width / 2), (float)(num36 - Main.colorSliderTexture.Height / 2 + this.hueTexture.Height / 2)), Microsoft.Xna.Framework.Color.White);
+								if (((Main.mouseX > num37 - 4 && Main.mouseX < num37 + this.hueTexture.Width + 4 && Main.mouseY > num36 - 4 && Main.mouseY < num36 + this.hueTexture.Height + 4) || this.grabColorSlider == 3) && Main.mouseLeft && !Main.blockMouse)
+								{
+									this.grabColorSlider = 3;
+									num41 = (float)(Main.mouseX - num37);
+									num41 /= (float)this.hueTexture.Width;
+									if (num41 < 0f)
+									{
+										num41 = 0f;
+									}
+									if (num41 > 1f)
+									{
+										num41 = 1f;
+									}
+									num41 = num41 * (1f - num43) + num43;
+									Main.lBar = num41;
+								}
+								Main.selColor = Main.hslToRgb(Main.hBar, Main.sBar, Main.lBar);
+							}
+							else if (flag)
+							{
+								string text3 = "";
+								for (int num45 = 0; num45 < 6; num45++)
+								{
+									int num46 = num8;
+									int num47 = 370 + Main.screenWidth / 2 - 400;
+									if (num45 == 0)
+									{
+										text3 = Lang.menu[95];
+									}
+									if (num45 == 1)
+									{
+										text3 = Lang.menu[96];
+										num46 += 30;
+									}
+									if (num45 == 2)
+									{
+										text3 = Lang.menu[97];
+										num46 += 60;
+									}
+									if (num45 == 3)
+									{
+										text3 = string.Concat(Main.selColor.R);
+										num47 += 90;
+									}
+									if (num45 == 4)
+									{
+										text3 = string.Concat(Main.selColor.G);
+										num47 += 90;
+										num46 += 30;
+									}
+									if (num45 == 5)
+									{
+										text3 = string.Concat(Main.selColor.B);
+										num47 += 90;
+										num46 += 60;
+									}
+									for (int num48 = 0; num48 < 5; num48++)
+									{
+										Microsoft.Xna.Framework.Color color6 = Microsoft.Xna.Framework.Color.Black;
+										if (num48 == 4)
+										{
+											color6 = color;
+											color6.R = (byte)((255 + color6.R) / 2);
+											color6.G = (byte)((255 + color6.R) / 2);
+											color6.B = (byte)((255 + color6.R) / 2);
+										}
+										int num49 = 255;
+										int num50 = (int)color6.R - (255 - num49);
+										if (num50 < 0)
+										{
+											num50 = 0;
+										}
+										color6 = new Microsoft.Xna.Framework.Color((int)((byte)num50), (int)((byte)num50), (int)((byte)num50), (int)((byte)num49));
+										int num51 = 0;
+										int num52 = 0;
+										if (num48 == 0)
+										{
+											num51 = -2;
+										}
+										if (num48 == 1)
+										{
+											num51 = 2;
+										}
+										if (num48 == 2)
+										{
+											num52 = -2;
+										}
+										if (num48 == 3)
+										{
+											num52 = 2;
+										}
+										Main.spriteBatch.DrawString(Main.fontDeathText, text3, new Vector2((float)(num47 + num51), (float)(num46 + num52)), color6, 0f, default(Vector2), 0.5f, SpriteEffects.None, 0f);
+									}
+								}
+								bool flag7 = false;
+								for (int num53 = 0; num53 < 2; num53++)
+								{
+									for (int num54 = 0; num54 < 3; num54++)
+									{
+										int num55 = num8 + num54 * 30 - 12;
+										int num56 = 360 + Main.screenWidth / 2 - 400;
+										float scale = 0.9f;
+										if (num53 == 0)
+										{
+											num56 -= 70;
+											num55 += 2;
+										}
+										else
+										{
+											num56 -= 40;
+										}
+										text3 = "-";
+										if (num53 == 1)
+										{
+											text3 = "+";
+										}
+										Vector2 vector2 = new Vector2(24f, 24f);
+										int num57 = 142;
+										if (Main.mouseX > num56 && (float)Main.mouseX < (float)num56 + vector2.X && Main.mouseY > num55 + 13 && (float)Main.mouseY < (float)(num55 + 13) + vector2.Y)
+										{
+											if (Main.focusColor != (num53 + 1) * (num54 + 10))
+											{
+												Main.PlaySound(12, -1, -1, 1);
+											}
+											Main.focusColor = (num53 + 1) * (num54 + 10);
+											flag7 = true;
+											num57 = 255;
+											if (Main.mouseLeft)
+											{
+												if (Main.colorDelay <= 1)
+												{
+													if (Main.colorDelay == 0)
+													{
+														Main.colorDelay = 40;
+													}
+													else
+													{
+														Main.colorDelay = 3;
+													}
+													int num58 = num53;
+													if (num53 == 0)
+													{
+														num58 = -1;
+														if (Main.selColor.R + Main.selColor.G + Main.selColor.B <= 150)
+														{
+															num58 = 0;
+														}
+													}
+													if (num54 == 0 && (int)Main.selColor.R + num58 >= 0 && (int)Main.selColor.R + num58 <= 255)
+													{
+														Main.selColor.R = (byte)((int)Main.selColor.R + num58);
+													}
+													if (num54 == 1 && (int)Main.selColor.G + num58 >= 0 && (int)Main.selColor.G + num58 <= 255)
+													{
+														Main.selColor.G = (byte)((int)Main.selColor.G + num58);
+													}
+													if (num54 == 2 && (int)Main.selColor.B + num58 >= 0 && (int)Main.selColor.B + num58 <= 255)
+													{
+														Main.selColor.B = (byte)((int)Main.selColor.B + num58);
+													}
+												}
+												Main.colorDelay--;
+											}
+											else
+											{
+												Main.colorDelay = 0;
+											}
+										}
+										for (int num59 = 0; num59 < 5; num59++)
+										{
+											Microsoft.Xna.Framework.Color color7 = Microsoft.Xna.Framework.Color.Black;
+											if (num59 == 4)
+											{
+												color7 = color;
+												color7.R = (byte)((255 + color7.R) / 2);
+												color7.G = (byte)((255 + color7.R) / 2);
+												color7.B = (byte)((255 + color7.R) / 2);
+											}
+											int num60 = (int)color7.R - (255 - num57);
+											if (num60 < 0)
+											{
+												num60 = 0;
+											}
+											color7 = new Microsoft.Xna.Framework.Color((int)((byte)num60), (int)((byte)num60), (int)((byte)num60), (int)((byte)num57));
+											int num61 = 0;
+											int num62 = 0;
+											if (num59 == 0)
+											{
+												num61 = -2;
+											}
+											if (num59 == 1)
+											{
+												num61 = 2;
+											}
+											if (num59 == 2)
+											{
+												num62 = -2;
+											}
+											if (num59 == 3)
+											{
+												num62 = 2;
+											}
+											Main.spriteBatch.DrawString(Main.fontDeathText, text3, new Vector2((float)(num56 + num61), (float)(num55 + num62)), color7, 0f, default(Vector2), scale, SpriteEffects.None, 0f);
+										}
+									}
+								}
+								if (!flag7)
+								{
+									Main.focusColor = 0;
+									Main.colorDelay = 0;
+								}
+							}
+							if (flag3)
+							{
+								int num63 = 400;
+								string text4 = "";
+								for (int num64 = 0; num64 < 4; num64++)
+								{
+									int num65 = num63;
+									int num66 = 370 + Main.screenWidth / 2 - 400;
+									if (num64 == 0)
+									{
+										text4 = Lang.menu[52] + ": " + Main.bgScroll;
+									}
+									for (int num67 = 0; num67 < 5; num67++)
+									{
+										Microsoft.Xna.Framework.Color color8 = Microsoft.Xna.Framework.Color.Black;
+										if (num67 == 4)
+										{
+											color8 = color;
+											color8.R = (byte)((255 + color8.R) / 2);
+											color8.G = (byte)((255 + color8.R) / 2);
+											color8.B = (byte)((255 + color8.R) / 2);
+										}
+										int num68 = 255;
+										int num69 = (int)color8.R - (255 - num68);
+										if (num69 < 0)
+										{
+											num69 = 0;
+										}
+										color8 = new Microsoft.Xna.Framework.Color((int)((byte)num69), (int)((byte)num69), (int)((byte)num69), (int)((byte)num68));
+										int num70 = 0;
+										int num71 = 0;
+										if (num67 == 0)
+										{
+											num70 = -2;
+										}
+										if (num67 == 1)
+										{
+											num70 = 2;
+										}
+										if (num67 == 2)
+										{
+											num71 = -2;
+										}
+										if (num67 == 3)
+										{
+											num71 = 2;
+										}
+										Main.spriteBatch.DrawString(Main.fontDeathText, text4, new Vector2((float)(num66 + num70), (float)(num65 + num71)), color8, 0f, default(Vector2), 0.5f, SpriteEffects.None, 0f);
+									}
+								}
+								IngameOptions.rightHover = -1;
+								if (!Main.mouseLeft)
+								{
+									IngameOptions.rightLock = -1;
+								}
+								IngameOptions.valuePosition = new Vector2((float)(Main.screenWidth / 2 - 40), (float)(num63 + 12));
+								float num72 = IngameOptions.DrawValueBar(Main.spriteBatch, 1f, (float)Main.bgScroll / 100f);
+								if (IngameOptions.inBar || IngameOptions.rightLock == 2)
+								{
+									IngameOptions.rightHover = 2;
+									if (Main.mouseLeft && IngameOptions.rightLock == 2)
+									{
+										Main.bgScroll = (int)(num72 * 100f);
+										Main.caveParallax = 1f - (float)Main.bgScroll / 500f;
+									}
+								}
+								if (IngameOptions.rightHover != -1)
+								{
+									IngameOptions.rightLock = IngameOptions.rightHover;
+								}
+							}
+							if (flag2)
+							{
+								int num73 = 400;
+								string text5 = "";
+								for (int num74 = 0; num74 < 6; num74++)
+								{
+									int num75 = num73;
+									int num76 = 370 + Main.screenWidth / 2 - 400;
+									switch (num74)
+									{
+									case 0:
+										text5 = Lang.menu[98];
+										break;
+									case 1:
+										text5 = Lang.menu[99];
+										num75 += 30;
+										break;
+									case 2:
+										text5 = Lang.menu[119];
+										num75 += 60;
+										break;
+									case 3:
+										text5 = Math.Round((double)(Main.soundVolume * 100f)) + "%";
+										num76 += 90;
+										break;
+									case 4:
+										text5 = Math.Round((double)(Main.musicVolume * 100f)) + "%";
+										num76 += 90;
+										num75 += 30;
+										break;
+									case 5:
+										text5 = Math.Round((double)(Main.ambientVolume * 100f)) + "%";
+										num76 += 90;
+										num75 += 60;
+										break;
+									}
+									Microsoft.Xna.Framework.Color textColor = color;
+									textColor.R = (byte)((255 + textColor.R) / 2);
+									textColor.G = (byte)((255 + textColor.R) / 2);
+									textColor.B = (byte)((255 + textColor.R) / 2);
+									int num77 = 255;
+									int num78 = (int)textColor.R - (255 - num77);
+									if (num78 < 0)
+									{
+										num78 = 0;
+									}
+									textColor = new Microsoft.Xna.Framework.Color((int)((byte)num78), (int)((byte)num78), (int)((byte)num78), (int)((byte)num77));
+									Utils.DrawBorderStringFourWay(Main.spriteBatch, Main.fontDeathText, text5, (float)num76, (float)num75, textColor, Microsoft.Xna.Framework.Color.Black, Vector2.Zero, 0.5f);
+								}
+								IngameOptions.rightHover = -1;
+								if (!Main.mouseLeft)
+								{
+									IngameOptions.rightLock = -1;
+								}
+								IngameOptions.valuePosition = new Vector2((float)(Main.screenWidth / 2 - 40), (float)(num73 - 18 + 30));
+								float num79 = IngameOptions.DrawValueBar(Main.spriteBatch, 1f, Main.soundVolume);
+								if (IngameOptions.inBar || IngameOptions.rightLock == 2)
+								{
+									IngameOptions.rightHover = 2;
+									if (Main.mouseLeft && IngameOptions.rightLock == 2)
+									{
+										Main.soundVolume = num79;
+									}
+								}
+								IngameOptions.valuePosition = new Vector2((float)(Main.screenWidth / 2 - 40), (float)(num73 - 18 + 60));
+								float num80 = IngameOptions.DrawValueBar(Main.spriteBatch, 1f, Main.musicVolume);
+								if (IngameOptions.inBar || IngameOptions.rightLock == 3)
+								{
+									IngameOptions.rightHover = 3;
+									if (Main.mouseLeft && IngameOptions.rightLock == 3)
+									{
+										Main.musicVolume = num80;
+									}
+								}
+								IngameOptions.valuePosition = new Vector2((float)(Main.screenWidth / 2 - 40), (float)(num73 - 18 + 90));
+								float num81 = IngameOptions.DrawValueBar(Main.spriteBatch, 1f, Main.ambientVolume);
+								if (IngameOptions.inBar || IngameOptions.rightLock == 4)
+								{
+									IngameOptions.rightHover = 4;
+									if (Main.mouseLeft && IngameOptions.rightLock == 4)
+									{
+										Main.ambientVolume = num81;
+									}
+								}
+								if (IngameOptions.rightHover != -1)
+								{
+									IngameOptions.rightLock = IngameOptions.rightHover;
+								}
+							}
+							for (int num82 = 0; num82 < 5; num82++)
+							{
+								Microsoft.Xna.Framework.Color color9 = Microsoft.Xna.Framework.Color.Black;
+								if (num82 == 4)
+								{
+									switch (array6[num35])
+									{
+									case 0:
+										color9 = color;
+										break;
+									case 1:
+										color9 = Main.mcColor;
+										break;
+									case 2:
+										color9 = Main.hcColor;
+										break;
+									case 3:
+										color9 = Main.highVersionColor;
+										break;
+									case 4:
+									case 5:
+									case 6:
+										color9 = Main.errorColor;
+										break;
+									default:
+										color9 = color;
+										break;
+									}
+									color9.R = (byte)((255 + color9.R) / 2);
+									color9.G = (byte)((255 + color9.G) / 2);
+									color9.B = (byte)((255 + color9.B) / 2);
+								}
+								int num83 = (int)(255f * (this.menuItemScale[num35] * 2f - 1f));
+								if (array[num35])
+								{
+									num83 = 255;
+								}
+								int num84 = (int)color9.R - (255 - num83);
+								if (num84 < 0)
+								{
+									num84 = 0;
+								}
+								int num85 = (int)color9.G - (255 - num83);
+								if (num85 < 0)
+								{
+									num85 = 0;
+								}
+								int num86 = (int)color9.B - (255 - num83);
+								if (num86 < 0)
+								{
+									num86 = 0;
+								}
+								if (num34 == num35 && num82 == 4)
+								{
+									float num87 = (float)num83 / 255f;
+									num84 = (int)((float)num84 * (1f - num87) + 255f * num87);
+									num85 = (int)((float)num85 * (1f - num87) + 215f * num87);
+									num86 = (int)((float)num86 * (1f - num87) + 0f * num87);
+								}
+								color9 = new Microsoft.Xna.Framework.Color((int)((byte)num84), (int)((byte)num85), (int)((byte)num86), (int)((byte)num83));
+								if (array3[num35])
+								{
+									if (num82 == 4)
+									{
+										color9.R = (byte)((int)(color9.R * Main.mouseTextColor) / 300);
+										color9.G = (byte)((int)(color9.G * Main.mouseTextColor) / 300);
+										color9.B = (byte)((int)(color9.B * Main.mouseTextColor) / 300);
+										color9.A = (byte)((int)(color9.A * Main.mouseTextColor) / 300);
+									}
+									else
+									{
+										color9.A -= (byte)(Main.mouseTextColor / 5);
+									}
+								}
+								int num88 = 0;
+								int num89 = 0;
+								if (num82 == 0)
+								{
+									num88 = -2;
+								}
+								if (num82 == 1)
+								{
+									num88 = 2;
+								}
+								if (num82 == 2)
+								{
+									num89 = -2;
+								}
+								if (num82 == 3)
+								{
+									num89 = 2;
+								}
+								Vector2 origin = Main.fontDeathText.MeasureString(array9[num35]);
+								origin.X *= 0.5f;
+								origin.Y *= 0.5f;
+								float num90 = this.menuItemScale[num35];
+								if (Main.menuMode == 15 && num35 == 0)
+								{
+									num90 *= 0.35f;
+								}
+								else if (Main.netMode == 2)
+								{
+									num90 *= 0.5f;
+								}
+								num90 *= array7[num35];
+								if (!array8[num35])
+								{
+									Main.spriteBatch.DrawString(Main.fontDeathText, array9[num35], new Vector2((float)(num2 + num88 + array5[num35]), (float)(num + num3 * num35 + num89) + origin.Y * array7[num35] + (float)array4[num35]), color9, 0f, origin, num90, SpriteEffects.None, 0f);
+								}
+								else
+								{
+									Main.spriteBatch.DrawString(Main.fontDeathText, array9[num35], new Vector2((float)(num2 + num88 + array5[num35]), (float)(num + num3 * num35 + num89) + origin.Y * array7[num35] + (float)array4[num35]), color9, 0f, new Vector2(0f, origin.Y), num90, SpriteEffects.None, 0f);
+								}
+							}
+							if (!array8[num35])
+							{
+								int num91 = 0;
+								if (this.menuWide[num35])
+								{
+									num91 = 14;
+								}
+								this.menuWide[num35] = false;
+								if ((float)Main.mouseX > (float)num2 - (float)(array9[num35].Length * 10) * array7[num35] + (float)array5[num35] - (float)num91 && (float)Main.mouseX < (float)num2 + (float)(array9[num35].Length * 10) * array7[num35] + (float)array5[num35] + (float)num91 && Main.mouseY > num + num3 * num35 + array4[num35] && (float)Main.mouseY < (float)(num + num3 * num35 + array4[num35]) + 50f * array7[num35] && Main.hasFocus)
+								{
+									this.focusMenu = num35;
+									if (array[num35] || array2[num35])
+									{
+										this.focusMenu = -1;
+									}
+									else
+									{
+										if (num34 != this.focusMenu)
+										{
+											Main.PlaySound(12, -1, -1, 1);
+										}
+										if (Main.mouseLeftRelease && Main.mouseLeft)
+										{
+											this.selectedMenu = num35;
+										}
+										if (Main.mouseRightRelease && Main.mouseRight)
+										{
+											this.selectedMenu2 = num35;
+										}
+									}
+								}
+							}
+							else if (Main.mouseX > num2 + array5[num35] && (float)Main.mouseX < (float)num2 + (float)(array9[num35].Length * 20) * array7[num35] + (float)array5[num35] && Main.mouseY > num + num3 * num35 + array4[num35] && (float)Main.mouseY < (float)(num + num3 * num35 + array4[num35]) + 50f * array7[num35] && Main.hasFocus)
+							{
+								this.focusMenu = num35;
+								if (array[num35] || array2[num35])
+								{
+									this.focusMenu = -1;
+								}
+								else
+								{
+									if (num34 != this.focusMenu)
+									{
+										Main.PlaySound(12, -1, -1, 1);
+									}
+									if (Main.mouseLeftRelease && Main.mouseLeft)
+									{
+										this.selectedMenu = num35;
+									}
+									if (Main.mouseRightRelease && Main.mouseRight)
+									{
+										this.selectedMenu2 = num35;
+									}
+								}
+							}
+						}
+					}
+					for (int num92 = 0; num92 < Main.maxMenuItems; num92++)
+					{
+						if (num92 == this.focusMenu)
+						{
+							if (this.menuItemScale[num92] < 1f)
+							{
+								this.menuItemScale[num92] += 0.02f;
+							}
+							if (this.menuItemScale[num92] > 1f)
+							{
+								this.menuItemScale[num92] = 1f;
+							}
+						}
+						else if ((double)this.menuItemScale[num92] > 0.8)
+						{
+							this.menuItemScale[num92] -= 0.02f;
+						}
+					}
+					if (flag4)
+					{
+						Main.spriteBatch.End();
+						Main.spriteBatch.Begin(SpriteSortMode.Immediate, BlendState.AlphaBlend, SamplerState.PointClamp, DepthStencilState.None, RasterizerState.CullCounterClockwise);
+						Player pendingPlayer = Main.PendingPlayer;
+						pendingPlayer.PlayerFrame();
+						pendingPlayer.position.X = (float)num6 + Main.screenPosition.X;
+						pendingPlayer.position.Y = (float)num7 + Main.screenPosition.Y;
+						this.DrawPlayer(pendingPlayer, pendingPlayer.position, 0f, Vector2.Zero, 0f);
+						Main.spriteBatch.End();
+						Main.spriteBatch.Begin(SpriteSortMode.Deferred, BlendState.AlphaBlend, SamplerState.PointClamp, DepthStencilState.None, RasterizerState.CullCounterClockwise);
+					}
+					for (int num93 = 0; num93 < 5; num93++)
+					{
+						Microsoft.Xna.Framework.Color color10 = Microsoft.Xna.Framework.Color.Black;
+						if (num93 == 4)
+						{
+							color10 = color;
+							color10.R = (byte)((255 + color10.R) / 2);
+							color10.G = (byte)((255 + color10.R) / 2);
+							color10.B = (byte)((255 + color10.R) / 2);
+						}
+						color10.A = (byte)((float)color10.A * 0.3f);
+						int num94 = 0;
+						int num95 = 0;
+						if (num93 == 0)
+						{
+							num94 = -2;
+						}
+						if (num93 == 1)
+						{
+							num94 = 2;
+						}
+						if (num93 == 2)
+						{
+							num95 = -2;
+						}
+						if (num93 == 3)
+						{
+							num95 = 2;
+						}
+						string text6 = "Copyright © 2015 Re-Logic";
+						Vector2 origin2 = Main.fontMouseText.MeasureString(text6);
+						origin2.X *= 0.5f;
+						origin2.Y *= 0.5f;
+						Main.spriteBatch.DrawString(Main.fontMouseText, text6, new Vector2((float)Main.screenWidth - origin2.X + (float)num94 - 10f, (float)Main.screenHeight - origin2.Y + (float)num95 - 2f), color10, 0f, origin2, 1f, SpriteEffects.None, 0f);
+					}
+					for (int num96 = 0; num96 < 5; num96++)
+					{
+						Microsoft.Xna.Framework.Color color11 = Microsoft.Xna.Framework.Color.Black;
+						if (num96 == 4)
+						{
+							color11 = color;
+							color11.R = (byte)((255 + color11.R) / 2);
+							color11.G = (byte)((255 + color11.R) / 2);
+							color11.B = (byte)((255 + color11.R) / 2);
+						}
+						color11.A = (byte)((float)color11.A * 0.3f);
+						int num97 = 0;
+						int num98 = 0;
+						if (num96 == 0)
+						{
+							num97 = -2;
+						}
+						if (num96 == 1)
+						{
+							num97 = 2;
+						}
+						if (num96 == 2)
+						{
+							num98 = -2;
+						}
+						if (num96 == 3)
+						{
+							num98 = 2;
+						}
+						Vector2 origin3 = Main.fontMouseText.MeasureString(Main.versionNumber);
+						origin3.X *= 0.5f;
+						origin3.Y *= 0.5f;
+						Main.spriteBatch.DrawString(Main.fontMouseText, Main.versionNumber, new Vector2(origin3.X + (float)num97 + 10f, (float)Main.screenHeight - origin3.Y + (float)num98 - 2f), color11, 0f, origin3, 1f, SpriteEffects.None, 0f);
+					}
+					Vector2 value = Main.DrawThickCursor(false);
+					Main.spriteBatch.Draw(Main.cursorTextures[0], new Vector2((float)Main.mouseX, (float)Main.mouseY) + value + Vector2.One, null, new Microsoft.Xna.Framework.Color((int)((float)Main.cursorColor.R * 0.2f), (int)((float)Main.cursorColor.G * 0.2f), (int)((float)Main.cursorColor.B * 0.2f), (int)((float)Main.cursorColor.A * 0.5f)), 0f, default(Vector2), Main.cursorScale * 1.1f, SpriteEffects.None, 0f);
+					Main.spriteBatch.Draw(Main.cursorTextures[0], new Vector2((float)Main.mouseX, (float)Main.mouseY) + value, null, Main.cursorColor, 0f, default(Vector2), Main.cursorScale, SpriteEffects.None, 0f);
+					if (Main.fadeCounter > 0)
+					{
+						Microsoft.Xna.Framework.Color white = Microsoft.Xna.Framework.Color.White;
+						Main.fadeCounter--;
+						float num99 = (float)Main.fadeCounter / 75f * 255f;
+						byte b2 = (byte)num99;
+						white = new Microsoft.Xna.Framework.Color((int)b2, (int)b2, (int)b2, (int)b2);
+						Main.spriteBatch.Draw(Main.fadeTexture, new Microsoft.Xna.Framework.Rectangle(0, 0, Main.screenWidth, Main.screenHeight), white);
+					}
+					Main.spriteBatch.End();
+					if (Main.mouseLeft)
+					{
+						Main.mouseLeftRelease = false;
+					}
+					else
+					{
+						Main.mouseLeftRelease = true;
+					}
+					if (Main.mouseRight)
+					{
+						Main.mouseRightRelease = false;
+						return;
+					}
+					Main.mouseRightRelease = true;
+				}
+		*/
 		public static void ResetKeyBindings()
 		{
 			Main.cUp = "W";
@@ -42375,7 +_,7 @@
 			TimeLogger.DetailedDrawTime(33);
 			base.GraphicsDevice.SetRenderTarget(null);
 		}
-
+		/*
 		protected void DrawToMap()
 		{
 			if (!Main.mapEnabled)
@@ -42543,7 +_,7 @@
 			Main.loadMap = false;
 			Main.loadMapLock = false;
 		}
-
+		*/
 		protected void DrawToMap_Section(int secX, int secY)
 		{
 			Stopwatch stopwatch = Stopwatch.StartNew();
@@ -42562,15 +_,15 @@
 			}
 			int num9 = 0;
 			Microsoft.Xna.Framework.Color arg_6A_0 = Microsoft.Xna.Framework.Color.Transparent;
-			for (int i = num3; i < num4; i++)
-			{
-				for (int j = num; j < num2; j++)
-				{
-					MapTile mapTile = Main.Map[j, i];
-					mapColorCacheArray[num9] = MapHelper.GetMapTileXnaColor(ref mapTile);
-					num9++;
-				}
-			}
+			//for (int i = num3; i < num4; i++)
+			//{
+			//	for (int j = num; j < num2; j++)
+			//	{
+			//		MapTile mapTile = Main.Map[j, i];
+			//		mapColorCacheArray[num9] = MapHelper.GetMapTileXnaColor(ref mapTile);
+			//		num9++;
+			//	}
+			//}
 			base.GraphicsDevice.SetRenderTarget(this.mapTarget[num5, num6]);
 			Main.spriteBatch.Begin(SpriteSortMode.Immediate, BlendState.AlphaBlend);
 			double totalMilliseconds = stopwatch.Elapsed.TotalMilliseconds;
@@ -42629,7 +_,7 @@
 			}
 			return text;
 		}
-
+		/*
 		protected void DrawMap()
 		{
 			string text = "";
@@ -43689,7 +_,7 @@
 			}
 			TimeLogger.DetailedDrawTime(9);
 		}
-
+		*/
 		public void DrawItems()
 		{
 			for (int i = 0; i < 400; i++)
@@ -44202,7 +_,7 @@
 			Main.renderCount = 99;
 			for (int k = 0; k < 3; k++)
 			{
-				Lighting.LightTiles(x, num6, y, num7);
+				//Lighting.LightTiles(x, num6, y, num7);
 			}
 			if ((float)(settings.Area.X * 16) <= vector.X - 16f || (float)(settings.Area.Y * 16) <= vector.Y - 16f || (float)((settings.Area.X + settings.Area.Width) * 16) >= vector.X + (float)num3 + 16f || (float)((settings.Area.Y + settings.Area.Height) * 16) >= vector.Y + (float)num4 + 16f)
 			{
@@ -44424,16 +_,16 @@
 			if (Main.mapEnabled)
 			{
 				Main.spriteBatch.Begin();
-				for (int num36 = area.X; num36 < area.X + area.Width; num36++)
-				{
-					for (int num37 = area.Y; num37 < area.Y + area.Height; num37++)
-					{
-						if (!Main.Map.IsRevealed(num36, num37))
-						{
-							Main.spriteBatch.Draw(Main.blackTileTexture, new Vector2((float)num36 * 16f, (float)num37 * 16f) - Main.screenPosition, Microsoft.Xna.Framework.Color.Black);
-						}
-					}
-				}
+				//for (int num36 = area.X; num36 < area.X + area.Width; num36++)
+				//{
+				//	for (int num37 = area.Y; num37 < area.Y + area.Height; num37++)
+				//	{
+				//		if (!Main.Map.IsRevealed(num36, num37))
+				//		{
+				//			Main.spriteBatch.Draw(Main.blackTileTexture, new Vector2((float)num36 * 16f, (float)num37 * 16f) - Main.screenPosition, Microsoft.Xna.Framework.Color.Black);
+				//		}
+				//	}
+				//}
 				Main.spriteBatch.End();
 			}
 			Main.renderCount = 99;
@@ -48874,7 +_,7 @@
 			if (Main.loadMap)
 			{
 				Main.refreshMap = false;
-				this.DrawToMap();
+				//	this.DrawToMap();
 				TimeLogger.DetailedDrawTime(1);
 			}
 			if (Lighting.lightMode >= 2)
@@ -49142,13 +_,13 @@
 				}
 			}
 			Main.CheckMonoliths();
-			if (Main.showSplash)
-			{
-				this.DrawSplash(gameTime);
-				TimeLogger.SplashDrawTime(stopwatch.Elapsed.TotalMilliseconds);
-				TimeLogger.EndDrawFrame();
-				return;
-			}
+			//if (Main.showSplash)
+			//{
+			//	this.DrawSplash(gameTime);
+			//	TimeLogger.SplashDrawTime(stopwatch.Elapsed.TotalMilliseconds);
+			//	TimeLogger.EndDrawFrame();
+			//	return;
+			//}
 			Main.sunCircle += 0.01f;
 			if ((double)Main.sunCircle > 6.285)
 			{
@@ -49165,8 +_,8 @@
 					Main.renderNow = false;
 					Main.renderCount = 99;
 					this.Draw(gameTime);
-					Lighting.LightTiles(this.firstTileX, this.lastTileX, this.firstTileY, this.lastTileY);
-					Lighting.LightTiles(this.firstTileX, this.lastTileX, this.firstTileY, this.lastTileY);
+					//	Lighting.LightTiles(this.firstTileX, this.lastTileX, this.firstTileY, this.lastTileY);
+					//	Lighting.LightTiles(this.firstTileX, this.lastTileX, this.firstTileY, this.lastTileY);
 					this.RenderTiles();
 					Main.sceneTilePos.X = Main.screenPosition.X - (float)Main.offScreenRange;
 					Main.sceneTilePos.Y = Main.screenPosition.Y - (float)Main.offScreenRange;
@@ -49277,12 +_,12 @@
 							Main.refreshMap = false;
 							Main.sectionManager.ClearMapDraw();
 						}
-						this.DrawToMap();
+						//	this.DrawToMap();
 						Main.updateMap = false;
 					}
 					else if (MapHelper.numUpdateTile > 0)
 					{
-						this.DrawToMap();
+						//	this.DrawToMap();
 					}
 					TimeLogger.DetailedDrawTime(4);
 				}
@@ -50224,6 +_,7 @@
 			if (Main.gameMenu)
 			{
 				Main.tranSpeed = 0.02f;
+				//Main.bgStyle = Main.bgStylePreview;
 				if (!Main.dayTime)
 				{
 					Main.bgStyle = 1;
@@ -50578,7 +_,7 @@
 			}
 			if (!Main.drawSkip)
 			{
-				Lighting.LightTiles(this.firstTileX, this.lastTileX, this.firstTileY, this.lastTileY);
+				//	Lighting.LightTiles(this.firstTileX, this.lastTileX, this.firstTileY, this.lastTileY);
 			}
 			TimeLogger.DetailedDrawReset();
 			if (!Main.mapFullscreen)
@@ -50737,7 +_,7 @@
 					{
 						try
 						{
-							this.DrawMap();
+							//	this.DrawMap();
 							goto IL_4D8B;
 						}
 						catch (Exception e4)
@@ -50746,7 +_,7 @@
 							goto IL_4D8B;
 						}
 					}
-					this.DrawMap();
+					//	this.DrawMap();
 				}
 				IL_4D8B:
 				TimeLogger.DetailedDrawReset();
@@ -51063,7 +_,7 @@
 			{
 				Main.player[Main.myPlayer].ToggleInv();
 			}
-			this.DrawMap();
+			//this.DrawMap();
 			this.DrawFPS();
 			this.DrawPlayerChat();
 			TimeLogger.MapDrawTime(stopwatch.Elapsed.TotalMilliseconds);
@@ -53531,7 +_,7 @@
 
 		public static void OpenPlayerSelect(Main.OnPlayerSelected method)
 		{
-			if (Main.gameMenu && (Main.menuMode == 10 || Main.menuMode == 14))
+			if (Main.gameMenu && (Main.menuMode == 10 /*|| Main.menuMode == 14*/))
 			{
 				return;
 			}
@@ -53560,5 +_,40 @@
 				Main._hasPendingNetmodeChange = true;
 			}
 		}
+		//private Texture2D BitmapToTexture2D(Bitmap image)
+		//{
+		//	int capacity = image.Height * image.Width * 4;
+		//	MemoryStream stream = new MemoryStream(capacity);
+		//	image.Save(stream, ImageFormat.Png);
+		//	return Texture2D.FromStream(base.GraphicsDevice, stream);
+		//}
+
 	}
+	//public enum MenuModes
+	//{
+	//	SelectDifficulty = -7,
+	//	ChooseWorldSize = 0,
+	//	EnterWorldName = 7,
+	//	Settings = 11,
+	//	ChallengeOption = 113,
+	//	ResetAllSettings,
+	//	MicroBiomes1 = 1000,
+	//	MicroBiomes2,
+	//	DownedFound,
+	//	Downed,
+	//	Found,
+	//	VariousSpawns,
+	//	Ores,
+	//	OreAmount,
+	//	GraphicStyles,
+	//	Backgrounds,
+	//	SurfaceBackgrounds,
+	//	UndergroundBackgrounds,
+	//	Miscellaneous,
+	//	Terrain,
+	//	Chests,
+	//	Debug,
+	//	Traps,
+	//	SavedSettings,
+	//}
 }

