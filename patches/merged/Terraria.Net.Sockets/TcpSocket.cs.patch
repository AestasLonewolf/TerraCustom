--- src/decompiled\Terraria.Net.Sockets\TcpSocket.cs
+++ src/merged\Terraria.Net.Sockets\TcpSocket.cs
@@ -57,8 +_,14 @@
 
 		private void SendCallback(IAsyncResult result)
 		{
+#if WINDOWS
 			Tuple<SocketSendCallback, object> tuple = (Tuple<SocketSendCallback, object>)result.AsyncState;
-			try
+#else
+			object[] array = (object[])result.AsyncState;
+			LegacyNetBufferPool.ReturnBuffer((byte[])array[1]);
+			Tuple<SocketSendCallback, object> tuple = (Tuple<SocketSendCallback, object>)array[0];
+#endif
+            try
 			{
 				this._connection.GetStream().EndWrite(result);
 				tuple.Item1(tuple.Item2);
@@ -71,8 +_,17 @@
 
 		void ISocket.AsyncSend(byte[] data, int offset, int size, SocketSendCallback callback, object state)
 		{
+#if WINDOWS
 			this._connection.GetStream().BeginWrite(data, 0, size, new AsyncCallback(this.SendCallback), new Tuple<SocketSendCallback, object>(callback, state));
-		}
+#else
+			byte[] array = LegacyNetBufferPool.RequestBuffer(data, offset, size);
+			this._connection.GetStream().BeginWrite(array, 0, size, new AsyncCallback(this.SendCallback), new object[]
+			{
+				new Tuple<SocketSendCallback, object>(callback, state),
+				array
+			});
+#endif
+        }
 
 		void ISocket.AsyncReceive(byte[] data, int offset, int size, SocketReceiveCallback callback, object state)
 		{

