--- src/Terraria\Terraria\MessageBuffer.cs
+++ src/tModLoader\Terraria\MessageBuffer.cs
@@ -10,6 +_,9 @@
 using Terraria.GameContent.UI;
 using Terraria.GameContent.UI.Chat;
 using Terraria.ID;
+using Terraria.ModLoader;
+using Terraria.ModLoader.Exceptions;
+using Terraria.ModLoader.IO;
 using Terraria.Net;
 using Terraria.UI;
 
@@ -81,14 +_,13 @@
 			int num = start + 1;
 			byte b = this.readBuffer[start];
 			messageType = (int)b;
-			if (b >= 111)
-			{
-				return;
-			}
 			Main.rxMsg++;
 			Main.rxData += length;
-			Main.rxMsgType[(int)b]++;
-			Main.rxDataType[(int)b] += length;
+			if (b < Main.maxMsg)
+			{
+				Main.rxMsgType[(int)b]++;
+				Main.rxDataType[(int)b] += length;
+			}
 			if (Main.netMode == 1 && Netplay.Connection.StatusMax > 0)
 			{
 				Netplay.Connection.StatusCount++;
@@ -108,7 +_,7 @@
 				NetMessage.SendData(2, this.whoAmI, -1, Lang.mp[1], 0, 0f, 0f, 0f, 0, 0, 0);
 				return;
 			}
-			if (Main.netMode == 2 && Netplay.Clients[this.whoAmI].State < 10 && b > 12 && b != 93 && b != 16 && b != 42 && b != 50 && b != 38 && b != 68)
+			if (Main.netMode == 2 && Netplay.Clients[this.whoAmI].State < 10 && b > 12 && b != 93 && b != 16 && b != 42 && b != 50 && b != 38 && b != 68 && b < 250)
 			{
 				NetMessage.BootPlayer(this.whoAmI, Lang.mp[2]);
 			}
@@ -117,6 +_,10 @@
 				this.ResetReader();
 			}
 			this.reader.BaseStream.Position = (long)num;
+			if (ModNet.HijackGetData(ref b, ref this.reader, this.whoAmI))
+			{
+				return;
+			}
 			switch (b)
 			{
 				case 1:
@@ -135,7 +_,8 @@
 							return;
 						}
 						string a = this.reader.ReadString();
-						if (!(a == "Terraria" + Main.curRelease))
+						ModNet.isModdedClient[whoAmI] = a == ModLoader.ModLoader.versionedName;
+						if (!ModNet.isModdedClient[whoAmI] && !(a == "Terraria" + Main.curRelease && ModNet.AllowVanillaClients))
 						{
 							NetMessage.SendData(2, this.whoAmI, -1, Lang.mp[4], 0, 0f, 0f, 0f, 0, 0, 0);
 							return;
@@ -143,6 +_,11 @@
 						if (string.IsNullOrEmpty(Netplay.ServerPassword))
 						{
 							Netplay.Clients[this.whoAmI].State = 1;
+							if (ModNet.isModdedClient[whoAmI])
+							{
+								ModNet.SyncMods(whoAmI);
+								return;
+							}
 							NetMessage.SendData(3, this.whoAmI, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
 							return;
 						}
@@ -1107,7 +_,7 @@
 								tile.wire4(bitsByte11[7]);
 								if (tile.wall > 0)
 								{
-									tile.wall = this.reader.ReadByte();
+									tile.wall = ModNet.AllowVanillaClients ? reader.ReadByte() : reader.ReadUInt16();
 								}
 								if (flag8)
 								{
@@ -1134,6 +_,7 @@
 						int pre = (int)this.reader.ReadByte();
 						int num60 = (int)this.reader.ReadByte();
 						int num61 = (int)this.reader.ReadInt16();
+						byte[] data = num61 >= ItemID.Count ? this.reader.ReadBytes(this.reader.ReadUInt16()) : new byte[0];
 						if (Main.netMode == 1)
 						{
 							if (num61 == 0)
@@ -1143,7 +_,7 @@
 							}
 							int num62 = num59;
 							Item item = Main.item[num62];
-							bool newAndShiny = (item.newAndShiny || item.netID != num61) && ItemSlot.Options.HighlightNewItems && (num61 < 0 || num61 >= 3730 || !ItemID.Sets.NeverShiny[num61]);
+							bool newAndShiny = (item.newAndShiny || item.netID != num61) && ItemSlot.Options.HighlightNewItems && (num61 < 0 || !ItemID.Sets.NeverShiny[num61]);
 							item.netDefaults(num61);
 							item.newAndShiny = newAndShiny;
 							item.Prefix(pre);
@@ -1151,6 +_,13 @@
 							item.position = position;
 							item.velocity = velocity;
 							item.active = true;
+							try
+							{
+								ItemIO.ReadCustomData(item, data);
+							}
+							catch (CustomModDataException)
+							{
+							}
 							if (b == 90)
 							{
 								item.instanced = true;
@@ -1196,6 +_,13 @@
 								item3.position = position;
 								item3.velocity = velocity;
 								item3.active = true;
+								try
+								{
+									ItemIO.ReadCustomData(item3, data);
+								}
+								catch (CustomModDataException)
+								{
+								}
 								item3.owner = Main.myPlayer;
 								if (flag9)
 								{
@@ -1329,8 +_,8 @@
 						if (Main.npcCatchable[nPC.type])
 						{
 							nPC.releaseOwner = (short)this.reader.ReadByte();
-							return;
-						}
+						}
+						NPCLoader.ReceiveExtraAI(nPC, reader);
 						return;
 					}
 				case 24:
@@ -1493,6 +_,7 @@
 						int num82 = (int)this.reader.ReadInt16();
 						BitsByte bitsByte14 = this.reader.ReadByte();
 						float[] array3 = new float[Projectile.maxAI];
+						//patch file: bitsByte14
 						for (int num83 = 0; num83 < Projectile.maxAI; num83++)
 						{
 							if (bitsByte14[num83])
@@ -1509,6 +_,7 @@
 						{
 							num84 = -1;
 						}
+						byte[] extraAI = ProjectileLoader.ReadExtraAI(reader, bitsByte14);
 						if (Main.netMode == 2)
 						{
 							num81 = this.whoAmI;
@@ -1562,6 +_,7 @@
 							projectile.projUUID = num84;
 							Main.projectileIdentity[num81, num84] = num85;
 						}
+						ProjectileLoader.ReceiveExtraAI(projectile, extraAI);
 						projectile.ProjectileFixDesperation();
 						if (Main.netMode == 2)
 						{
@@ -1706,6 +_,17 @@
 						Main.chest[num99].item[num100].netDefaults(type4);
 						Main.chest[num99].item[num100].Prefix(pre2);
 						Main.chest[num99].item[num100].stack = stack4;
+						if (type4 >= ItemID.Count)
+						{
+							byte[] data = this.reader.ReadBytes(this.reader.ReadUInt16());
+							try
+							{
+								ItemIO.ReadCustomData(Main.chest[num99].item[num100], data);
+							}
+							catch (CustomModDataException)
+							{
+							}
+						}
 						Recipe.FindRecipes();
 						return;
 					}
@@ -1937,6 +_,11 @@
 						if (a2 == Netplay.ServerPassword)
 						{
 							Netplay.Clients[this.whoAmI].State = 1;
+							if (ModNet.isModdedClient[whoAmI])
+							{
+								ModNet.SyncMods(whoAmI);
+								return;
+							}
 							NetMessage.SendData(3, this.whoAmI, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
 							return;
 						}
@@ -3392,9 +_,34 @@
 						player20.wireOperationsCooldown = 0;
 						return;
 					}
+				case 250:
+					ModNet.HandleModPacket(reader, whoAmI);
+					return;
+				case 251:
+					if (Main.netMode == 1)
+					{
+						ModNet.SyncClientMods(reader);
+					}
+					else
+					{
+						ModNet.SendNetIDs(whoAmI);
+						NetMessage.SendData(3, whoAmI);
+					}
+					return;
+				case 252:
+					if (Main.netMode == 1)
+					{
+						ModNet.ReceiveMod(reader);
+					}
+					else
+					{
+						ModNet.SendMod(reader.ReadString(), whoAmI);
+					}
+					return;
 				default:
 					return;
 			}
+			//case 6
 			if (Main.netMode != 2)
 			{
 				return;
@@ -3406,7 +_,7 @@
 			NetMessage.SendData(7, this.whoAmI, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
 			Main.SyncAnInvasion(this.whoAmI);
 			return;
-			IL_48DD:
+			IL_48DD: //case 49
 			if (Netplay.Connection.State == 6)
 			{
 				Netplay.Connection.State = 10;
@@ -3416,7 +_,7 @@
 				return;
 			}
 			return;
-			IL_640C:
+			IL_640C: //case 92
 			int num212 = (int)this.reader.ReadInt16();
 			float num213 = this.reader.ReadSingle();
 			float num214 = this.reader.ReadSingle();

