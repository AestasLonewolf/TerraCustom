--- src/Terraria\Terraria\MessageBuffer.cs
+++ src/tModLoader\Terraria\MessageBuffer.cs
@@ -11,6 +_,9 @@
 using Terraria.GameContent.UI;
 using Terraria.GameContent.UI.Chat;
 using Terraria.ID;
+using Terraria.ModLoader;
+using Terraria.ModLoader.Exceptions;
+using Terraria.ModLoader.IO;
 using Terraria.Net;
 using Terraria.UI;
 
@@ -82,14 +_,13 @@
 			int num = start + 1;
 			byte b = this.readBuffer[start];
 			messageType = (int)b;
-			if (b >= 113)
-			{
-				return;
-			}
 			Main.rxMsg++;
 			Main.rxData += length;
-			Main.rxMsgType[(int)b]++;
-			Main.rxDataType[(int)b] += length;
+			if (b < Main.maxMsg)
+			{
+				Main.rxMsgType[(int)b]++;
+				Main.rxDataType[(int)b] += length;
+			}
 			if (Main.netMode == 1 && Netplay.Connection.StatusMax > 0)
 			{
 				Netplay.Connection.StatusCount++;
@@ -109,7 +_,7 @@
 				NetMessage.SendData(2, this.whoAmI, -1, Lang.mp[1], 0, 0f, 0f, 0f, 0, 0, 0);
 				return;
 			}
-			if (Main.netMode == 2 && Netplay.Clients[this.whoAmI].State < 10 && b > 12 && b != 93 && b != 16 && b != 42 && b != 50 && b != 38 && b != 68)
+			if (Main.netMode == 2 && Netplay.Clients[this.whoAmI].State < 10 && b > 12 && b != 93 && b != 16 && b != 42 && b != 50 && b != 38 && b != 68 && b < 250)
 			{
 				NetMessage.BootPlayer(this.whoAmI, Lang.mp[2]);
 			}
@@ -118,6 +_,10 @@
 				this.ResetReader();
 			}
 			this.reader.BaseStream.Position = (long)num;
+			if (ModNet.HijackGetData(ref b, ref this.reader, this.whoAmI))
+			{
+				return;
+			}
 			switch (b)
 			{
 				case 1:
@@ -136,7 +_,8 @@
 							return;
 						}
 						string a = this.reader.ReadString();
-						if (!(a == "Terraria" + Main.curRelease))
+						ModNet.isModdedClient[whoAmI] = a == ModLoader.ModLoader.versionedName;
+						if (!ModNet.isModdedClient[whoAmI] && !(a == "Terraria" + Main.curRelease && ModNet.AllowVanillaClients))
 						{
 							NetMessage.SendData(2, this.whoAmI, -1, Lang.mp[4], 0, 0f, 0f, 0f, 0, 0, 0);
 							return;
@@ -144,6 +_,11 @@
 						if (string.IsNullOrEmpty(Netplay.ServerPassword))
 						{
 							Netplay.Clients[this.whoAmI].State = 1;
+							if (ModNet.isModdedClient[whoAmI])
+							{
+								ModNet.SyncMods(whoAmI);
+								return;
+							}
 							NetMessage.SendData(3, this.whoAmI, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
 							return;
 						}
@@ -212,6 +_,7 @@
 							NetMessage.SendData(5, -1, -1, "", num2, (float)(58 + player.armor.Length + player.dye.Length + player.miscEquips.Length + player.miscDyes.Length + player.bank.item.Length + 1 + num5), (float)player.bank2.item[num5].prefix, 0f, 0, 0, 0);
 						}
 						NetMessage.SendData(5, -1, -1, "", num2, (float)(58 + player.armor.Length + player.dye.Length + player.miscEquips.Length + player.miscDyes.Length + player.bank.item.Length + player.bank2.item.Length + 1), (float)player.trashItem.prefix, 0f, 0, 0, 0);
+						PlayerHooks.SyncPlayer(player, -1, -1, true);
 						NetMessage.SendData(6, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
 						if (Netplay.Connection.State == 2)
 						{
@@ -521,6 +_,10 @@
 							Main.StopSlimeRain(true);
 						}
 						Main.invasionType = (int)this.reader.ReadSByte();
+						if (!ModNet.AllowVanillaClients)
+						{
+							WorldHooks.ReceiveCustomData(reader);
+						}
 						Main.LobbyId = this.reader.ReadUInt64();
 						Sandstorm.IntendedSeverity = this.reader.ReadSingle();
 						if (Netplay.Connection.State == 3)
@@ -1115,7 +_,7 @@
 								tile.wire4(bitsByte12[7]);
 								if (tile.wall > 0)
 								{
-									tile.wall = this.reader.ReadByte();
+									tile.wall = ModNet.AllowVanillaClients ? reader.ReadByte() : reader.ReadUInt16();
 								}
 								if (flag8)
 								{
@@ -1142,6 +_,7 @@
 						int pre = (int)this.reader.ReadByte();
 						int num60 = (int)this.reader.ReadByte();
 						int num61 = (int)this.reader.ReadInt16();
+						byte[] data = ItemIO.GetCustomData(num61, reader);
 						if (Main.netMode == 1)
 						{
 							if (num61 == 0)
@@ -1151,7 +_,7 @@
 							}
 							int num62 = num59;
 							Item item = Main.item[num62];
-							bool newAndShiny = (item.newAndShiny || item.netID != num61) && ItemSlot.Options.HighlightNewItems && (num61 < 0 || num61 >= 3797 || !ItemID.Sets.NeverShiny[num61]);
+							bool newAndShiny = (item.newAndShiny || item.netID != num61) && ItemSlot.Options.HighlightNewItems && (num61 < 0 || !ItemID.Sets.NeverShiny[num61]);
 							item.netDefaults(num61);
 							item.newAndShiny = newAndShiny;
 							item.Prefix(pre);
@@ -1159,6 +_,13 @@
 							item.position = position;
 							item.velocity = velocity;
 							item.active = true;
+							try
+							{
+								ItemIO.ReadCustomData(item, data);
+							}
+							catch (CustomModDataException)
+							{
+							}
 							if (b == 90)
 							{
 								item.instanced = true;
@@ -1204,6 +_,13 @@
 								item3.position = position;
 								item3.velocity = velocity;
 								item3.active = true;
+								try
+								{
+									ItemIO.ReadCustomData(item3, data);
+								}
+								catch (CustomModDataException)
+								{
+								}
 								item3.owner = Main.myPlayer;
 								if (flag9)
 								{
@@ -1341,8 +_,8 @@
 						if (nPC.type >= 0 && nPC.type < 547 && Main.npcCatchable[nPC.type])
 						{
 							nPC.releaseOwner = (short)this.reader.ReadByte();
-							return;
-						}
+						}
+						NPCLoader.ReceiveExtraAI(nPC, reader);
 						return;
 					}
 				case 24:
@@ -1505,6 +_,7 @@
 						int num82 = (int)this.reader.ReadInt16();
 						BitsByte bitsByte15 = this.reader.ReadByte();
 						float[] array3 = new float[Projectile.maxAI];
+						//patch file: bitsByte15
 						for (int num83 = 0; num83 < Projectile.maxAI; num83++)
 						{
 							if (bitsByte15[num83])
@@ -1521,6 +_,7 @@
 						{
 							num84 = -1;
 						}
+						byte[] extraAI = ProjectileLoader.ReadExtraAI(reader, bitsByte15);
 						if (Main.netMode == 2)
 						{
 							num81 = this.whoAmI;
@@ -1574,6 +_,7 @@
 							projectile.projUUID = num84;
 							Main.projectileIdentity[num81, num84] = num85;
 						}
+						ProjectileLoader.ReceiveExtraAI(projectile, extraAI);
 						projectile.ProjectileFixDesperation();
 						if (Main.netMode == 2)
 						{
@@ -1718,6 +_,14 @@
 						Main.chest[num99].item[num100].netDefaults(type4);
 						Main.chest[num99].item[num100].Prefix(pre2);
 						Main.chest[num99].item[num100].stack = stack4;
+						byte[] data = ItemIO.GetCustomData(type4, reader);
+						try
+						{
+							ItemIO.ReadCustomData(Main.chest[num99].item[num100], data);
+						}
+						catch (CustomModDataException)
+						{
+						}
 						Recipe.FindRecipes();
 						return;
 					}
@@ -1787,36 +_,57 @@
 						int num105 = (int)this.reader.ReadInt16();
 						int num106 = (int)this.reader.ReadInt16();
 						int num107 = (int)this.reader.ReadInt16();
-						if (Main.netMode == 2)
-						{
-							if (b7 == 0)
-							{
-								int num108 = WorldGen.PlaceChest(num105, num106, 21, false, num107);
+						ushort modType = 0;
+						if (b7 >= 100)
+						{
+							modType = this.reader.ReadUInt16();
+						}
+						if (Main.netMode == 2)
+						{
+							if (b7 % 100 == 0)
+							{
+								if (modType == 0)
+								{
+									modType = TileID.Containers;
+								}
+								int num108 = WorldGen.PlaceChest(num105, num106, modType, false, num107);
 								if (num108 == -1)
 								{
-									NetMessage.SendData(34, this.whoAmI, -1, "", (int)b7, (float)num105, (float)num106, (float)num107, num108, 0, 0);
-									Item.NewItem(num105 * 16, num106 * 16, 32, 32, Chest.chestItemSpawn[num107], 1, true, 0, false, false);
+									NetMessage.SendData(34, this.whoAmI, -1, "", (int)b7, (float)num105, (float)num106, (float)num107, num108, modType, 0);
+									int itemSpawn = b7 < 100 ? Chest.chestItemSpawn[num107] : TileLoader.GetTile(modType).chestDrop;
+									if (itemSpawn > 0)
+									{
+										Item.NewItem(num105 * 16, num106 * 16, 32, 32, itemSpawn, 1, true, 0, false, false);
+									}
 									return;
 								}
-								NetMessage.SendData(34, -1, -1, "", (int)b7, (float)num105, (float)num106, (float)num107, num108, 0, 0);
+								NetMessage.SendData(34, -1, -1, "", (int)b7, (float)num105, (float)num106, (float)num107, num108, modType, 0);
 								return;
 							}
-							else if (b7 == 2)
-							{
-								int num109 = WorldGen.PlaceChest(num105, num106, 88, false, num107);
+							else if (b7 % 100 == 2)
+							{
+								if (modType == 0)
+								{
+									modType = TileID.Dressers;
+								}
+								int num109 = WorldGen.PlaceChest(num105, num106, modType, false, num107);
 								if (num109 == -1)
 								{
-									NetMessage.SendData(34, this.whoAmI, -1, "", (int)b7, (float)num105, (float)num106, (float)num107, num109, 0, 0);
-									Item.NewItem(num105 * 16, num106 * 16, 32, 32, Chest.dresserItemSpawn[num107], 1, true, 0, false, false);
+									NetMessage.SendData(34, this.whoAmI, -1, "", (int)b7, (float)num105, (float)num106, (float)num107, num109, modType, 0);
+									int itemSpawn = b7 < 100 ? Chest.dresserItemSpawn[num107] : TileLoader.GetTile(modType).dresserDrop;
+									if (itemSpawn > 0)
+									{
+										Item.NewItem(num105 * 16, num106 * 16, 32, 32, itemSpawn, 1, true, 0, false, false);
+									}
 									return;
 								}
-								NetMessage.SendData(34, -1, -1, "", (int)b7, (float)num105, (float)num106, (float)num107, num109, 0, 0);
+								NetMessage.SendData(34, -1, -1, "", (int)b7, (float)num105, (float)num106, (float)num107, num109, modType, 0);
 								return;
 							}
 							else
 							{
 								Tile tile2 = Main.tile[num105, num106];
-								if (tile2.type == 21 && b7 == 1)
+								if (TileLoader.IsChest(tile2.type) && b7 == 1)
 								{
 									if (tile2.frameX % 36 != 0)
 									{
@@ -1837,7 +_,7 @@
 								}
 								else
 								{
-									if (tile2.type != 88 || b7 != 3)
+									if (!TileLoader.IsDresser(tile2.type) || b7 != 3)
 									{
 										return;
 									}
@@ -1860,19 +_,23 @@
 						else
 						{
 							int num110 = (int)this.reader.ReadInt16();
-							if (b7 == 0)
+							if (b7 % 100 == 0)
 							{
 								if (num110 == -1)
 								{
 									WorldGen.KillTile(num105, num106, false, false, false);
 									return;
 								}
-								WorldGen.PlaceChestDirect(num105, num106, 21, num107, num110);
+								if (modType == 0)
+								{
+									modType = TileID.Containers;
+								}
+								WorldGen.PlaceChestDirect(num105, num106, modType, num107, num110);
 								return;
 							}
 							else
 							{
-								if (b7 != 2)
+								if (b7 % 100 != 2)
 								{
 									Chest.DestroyChestDirect(num105, num106, num110);
 									WorldGen.KillTile(num105, num106, false, false, false);
@@ -1883,7 +_,11 @@
 									WorldGen.KillTile(num105, num106, false, false, false);
 									return;
 								}
-								WorldGen.PlaceDresserDirect(num105, num106, 88, num107, num110);
+								if (modType == 0)
+								{
+									modType = TileID.Dressers;
+								}
+								WorldGen.PlaceDresserDirect(num105, num106, modType, num107, num110);
 								return;
 							}
 						}
@@ -1919,6 +_,10 @@
 						player9.zone1 = this.reader.ReadByte();
 						player9.zone2 = this.reader.ReadByte();
 						player9.zone3 = this.reader.ReadByte();
+						if (!ModNet.AllowVanillaClients)
+						{
+							PlayerHooks.ReceiveCustomBiomes(player9, reader);
+						}
 						if (Main.netMode == 2)
 						{
 							NetMessage.SendData(36, -1, this.whoAmI, "", num113, 0f, 0f, 0f, 0, 0, 0);
@@ -1950,6 +_,11 @@
 						if (a2 == Netplay.ServerPassword)
 						{
 							Netplay.Clients[this.whoAmI].State = 1;
+							if (ModNet.isModdedClient[whoAmI])
+							{
+								ModNet.SyncMods(whoAmI);
+								return;
+							}
 							NetMessage.SendData(3, this.whoAmI, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
 							return;
 						}
@@ -2193,7 +_,7 @@
 						Player player12 = Main.player[num139];
 						for (int num140 = 0; num140 < 22; num140++)
 						{
-							player12.buffType[num140] = (int)this.reader.ReadByte();
+							player12.buffType[num140] = (int)(ModNet.AllowVanillaClients ? reader.ReadByte() : reader.ReadUInt16());
 							if (player12.buffType[num140] > 0)
 							{
 								player12.buffTime[num140] = 60;
@@ -2279,7 +_,7 @@
 				case 53:
 					{
 						int num144 = (int)this.reader.ReadInt16();
-						int type5 = (int)this.reader.ReadByte();
+						int type5 = (int)(ModNet.AllowVanillaClients ? reader.ReadByte() : reader.ReadUInt16());
 						int time = (int)this.reader.ReadInt16();
 						Main.npc[num144].AddBuff(type5, time, true);
 						if (Main.netMode == 2)
@@ -2299,7 +_,7 @@
 						NPC nPC2 = Main.npc[num145];
 						for (int num146 = 0; num146 < 5; num146++)
 						{
-							nPC2.buffType[num146] = (int)this.reader.ReadByte();
+							nPC2.buffType[num146] = (int)(ModNet.AllowVanillaClients ? reader.ReadByte() : reader.ReadUInt16());
 							nPC2.buffTime[num146] = (int)this.reader.ReadInt16();
 						}
 						return;
@@ -2307,7 +_,7 @@
 				case 55:
 					{
 						int num147 = (int)this.reader.ReadByte();
-						int num148 = (int)this.reader.ReadByte();
+						int num148 = (int)(ModNet.AllowVanillaClients ? reader.ReadByte() : reader.ReadUInt16());
 						int num149 = this.reader.ReadInt32();
 						if (Main.netMode == 2 && num147 != this.whoAmI && !Main.pvpBuff[num148])
 						{
@@ -3435,9 +_,34 @@
 						}
 						return;
 					}
+				case 250:
+					ModNet.HandleModPacket(reader, whoAmI);
+					return;
+				case 251:
+					if (Main.netMode == 1)
+					{
+						ModNet.SyncClientMods(reader);
+					}
+					else
+					{
+						ModNet.SendNetIDs(whoAmI);
+						NetMessage.SendData(3, whoAmI);
+					}
+					return;
+				case 252:
+					if (Main.netMode == 1)
+					{
+						ModNet.ReceiveMod(reader);
+					}
+					else
+					{
+						ModNet.SendMod(reader.ReadString(), whoAmI);
+					}
+					return;
 				default:
 					return;
 			}
+			//case 6
 			if (Main.netMode != 2)
 			{
 				return;
@@ -3449,7 +_,7 @@
 			NetMessage.SendData(7, this.whoAmI, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
 			Main.SyncAnInvasion(this.whoAmI);
 			return;
-			IL_499F:
+			IL_499F: //case 49
 			if (Netplay.Connection.State == 6)
 			{
 				Netplay.Connection.State = 10;
@@ -3459,7 +_,7 @@
 				return;
 			}
 			return;
-			IL_64E0:
+			IL_64E0: //case 92
 			int num218 = (int)this.reader.ReadInt16();
 			float num219 = this.reader.ReadSingle();
 			float num220 = this.reader.ReadSingle();

