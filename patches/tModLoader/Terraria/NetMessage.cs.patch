--- src/Terraria\Terraria\NetMessage.cs
+++ src/tModLoader\Terraria\NetMessage.cs
@@ -6,6 +_,8 @@
 using Terraria.GameContent.Tile_Entities;
 using Terraria.ID;
 using Terraria.IO;
+using Terraria.ModLoader;
+using Terraria.ModLoader.IO;
 using Terraria.Net.Sockets;
 using Terraria.Social;
 
@@ -429,6 +_,7 @@
 								value = (short)item2.netID;
 							}
 							writer.Write(value);
+							ItemIO.SaveCustomData(item2, writer);
 							break;
 						}
 					case 22:
@@ -496,6 +_,7 @@
 							{
 								writer.Write((byte)nPC.releaseOwner);
 							}
+							NPCLoader.SendExtraAI(nPC, writer);
 							break;
 						}
 					case 24:
@@ -541,7 +_,7 @@
 									bb14[num10] = true;
 								}
 							}
-							if (projectile.type > 0 && projectile.type < 651 && ProjectileID.Sets.NeedsUUID[projectile.type])
+							if (projectile.type > 0 && ProjectileID.Sets.NeedsUUID[projectile.type])
 							{
 								bb14[Projectile.maxAI] = true;
 							}
@@ -557,6 +_,7 @@
 							{
 								writer.Write((short)projectile.projUUID);
 							}
+							ProjectileLoader.SendExtraAI(projectile, writer, ref bb14);
 							break;
 						}
 					case 28:
@@ -591,6 +_,7 @@
 							writer.Write((short)item3.stack);
 							writer.Write(item3.prefix);
 							writer.Write(value3);
+							ItemIO.SaveCustomData(item3, writer);
 							break;
 						}
 					case 33:
@@ -1426,7 +_,7 @@
 			int num5 = 0;
 			int num6 = 0;
 			byte b = 0;
-			byte[] array4 = new byte[13];
+			byte[] array4 = new byte[14];
 			Tile tile = null;
 			for (int i = yStart; i < yStart + height; i++)
 			{
@@ -1557,7 +_,10 @@
 						if (tile2.wall != 0)
 						{
 							b |= 4;
-							array4[num5] = tile2.wall;
+							byte[] wallBytes = BitConverter.GetBytes(tile2.wall);
+							array4[num5] = wallBytes[0];
+							num5++;
+							array4[num5] = wallBytes[1];
 							num5++;
 							if (tile2.wallColor() != 0)
 							{
@@ -1789,7 +_,7 @@
 						}
 						if ((b3 & 4) == 4)
 						{
-							tile.wall = reader.ReadByte();
+							tile.wall = reader.ReadUInt16();
 							if ((b & 16) == 16)
 							{
 								tile.wallColor(reader.ReadByte());

