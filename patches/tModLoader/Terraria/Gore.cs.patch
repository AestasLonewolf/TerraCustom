--- src/Terraria\Terraria\Gore.cs
+++ src/tModLoader\Terraria\Gore.cs
@@ -1,11 +_,19 @@
 using Microsoft.Xna.Framework;
 using System;
 using Terraria.GameContent;
+using Terraria.ModLoader;
 
 namespace Terraria
 {
 	public class Gore
 	{
+		public ModGore modGore
+		{
+			get;
+			internal set;
+		}
+		internal int realType = 0;
+
 		public static int goreTime = 600;
 		public Vector2 position;
 		public Vector2 velocity;
@@ -30,6 +_,11 @@
 			}
 			if (this.active)
 			{
+				if (this.modGore != null && !this.modGore.Update(this))
+				{
+					return;
+				}
+				ModGore.SetupUpdateType(this);
 				if (this.type >= 276 && this.type <= 282)
 				{
 					this.velocity.X = this.velocity.X * 0.98f;
@@ -773,6 +_,7 @@
 					}
 					Lighting.AddLight((int)((this.position.X + 32f * this.scale / 2f) / 16f), (int)((this.position.Y + 32f * this.scale / 2f) / 16f), num29, num30, num31);
 				}
+				ModGore.TakeDownUpdateType(this);
 			}
 		}
 
@@ -819,6 +_,7 @@
 			Main.gore[num].alpha = 0;
 			Main.gore[num].rotation = 0f;
 			Main.gore[num].scale = Scale;
+			ModGore.SetupGore(Main.gore[num]);
 			if (!ChildSafety.Disabled && ChildSafety.DangerousGore(Type))
 			{
 				Main.gore[num].type = Main.rand.Next(11, 14);
@@ -908,6 +_,14 @@
 
 		public Color GetAlpha(Color newColor)
 		{
+			if (this.modGore != null)
+			{
+				Color? modColor = this.modGore.GetAlpha(this, newColor);
+				if (modColor.HasValue)
+				{
+					return modColor.Value;
+				}
+			}
 			float num = (float)(255 - this.alpha) / 255f;
 			int r;
 			int g;

