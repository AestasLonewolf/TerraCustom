--- src/Terraria\Terraria\NPC.cs
+++ src/tModLoader\Terraria\NPC.cs
@@ -9,11 +_,30 @@
 using Terraria.GameContent.Tile_Entities;
 using Terraria.GameContent.UI;
 using Terraria.ID;
+using Terraria.ModLoader;
 
 namespace Terraria
 {
 	public class NPC : Entity
 	{
+		public ModNPC modNPC
+		{
+			get;
+			internal set;
+		}
+
+		internal NPCInfo[] npcInfo = new NPCInfo[0];
+
+		public NPCInfo GetModInfo(Mod mod, string name)
+		{
+			return NPCLoader.GetNPCInfo(this, mod, name);
+		}
+
+		public T GetModInfo<T>(Mod mod) where T : NPCInfo
+		{
+			return (T)GetModInfo(mod, typeof(T).Name);
+		}
+
 		public const int MaxMoonLordCountdown = 3600;
 		public const float nameOverIncrement = 0.025f;
 		public const float nameOverDistance = 400f;
@@ -81,13 +_,13 @@
 		private static int townRangeY = NPC.sHeight;
 		public float npcSlots = 1f;
 		private static bool noSpawnCycle = false;
-		private static int activeTime = 750;
+		public static int activeTime = 750;
 		private static int defaultSpawnRate = 600;
 		private static int defaultMaxSpawns = 5;
 		public bool dontCountMe;
 		public int[] buffType = new int[5];
 		public int[] buffTime = new int[5];
-		public bool[] buffImmune = new bool[195];
+		public bool[] buffImmune = new bool[BuffLoader.BuffCount];
 		public bool midas;
 		public bool ichor;
 		public bool onFire;
@@ -454,7 +_,7 @@
 			for (int i = 0; i < 200; i++)
 			{
 				NPC nPC = Main.npc[i];
-				if (nPC.active && nPC.type >= 0 && nPC.type < 547)
+				if (nPC.active && nPC.type >= 0 && nPC.type < NPCLoader.NPCCount)
 				{
 					NPC.npcsFoundForCheckActive[nPC.type] = true;
 				}
@@ -1557,7 +_,7 @@
 						return "Agnew";
 				}
 			}
-			return "";
+			return NPCLoader.TownNPCName(npcType);
 		}
 
 		public static void setNPCName(string newName, int npcType, bool resetExtras = false)
@@ -1717,7 +_,7 @@
 			{
 				return 23;
 			}
-			return -1;
+			return NPCHeadLoader.GetNPCHeadSlot(type);
 		}
 
 		public static int NumToType(int type)
@@ -1814,7 +_,7 @@
 			{
 				return 441;
 			}
-			return -1;
+			return NPCHeadLoader.GetNPCFromHeadSlot(type);
 		}
 
 		public int GetBossHeadTextureIndex()
@@ -1868,6 +_,7 @@
 			{
 				result = 12;
 			}
+			NPCLoader.BossHeadSlot(this, ref result);
 			return result;
 		}
 
@@ -1913,6 +_,7 @@
 			{
 				result = this.rotation;
 			}
+			NPCLoader.BossHeadRotation(this, ref result);
 			return result;
 		}
 
@@ -1924,6 +_,7 @@
 			{
 				result = SpriteEffects.FlipHorizontally;
 			}
+			NPCLoader.BossHeadSpriteEffects(this, ref result);
 			return result;
 		}
 
@@ -3119,7 +_,7 @@
 			}
 			else if (Name != "")
 			{
-				for (int i = 1; i < 547; i++)
+				for (int i = 1; i < NPCLoader.NPCCount; i++)
 				{
 					if (Main.npcName[i] == Name)
 					{
@@ -3142,6 +_,17 @@
 			{
 				this.scaleStats();
 			}
+		}
+
+		public void CloneDefaults(int Type)
+		{
+			int originalType = this.type;
+			int originalNetID = this.netID;
+			ModNPC originalModEntity = this.modNPC;
+			this.SetDefaultsKeepPlayerInteraction(Type);
+			this.type = originalType;
+			this.netID = originalNetID;
+			this.modNPC = originalModEntity;
 		}
 
 		public void SetDefaultsKeepPlayerInteraction(int Type)
@@ -3160,6 +_,7 @@
 
 		public void SetDefaults(int Type, float scaleOverride = -1f)
 		{
+			this.modNPC = null;
 			this.altTexture = 0;
 			this.nameOver = 0f;
 			this.takenDamageMultiplier = 1f;
@@ -3200,7 +_,11 @@
 				this.buffTime[k] = 0;
 				this.buffType[k] = 0;
 			}
-			for (int l = 0; l < 195; l++)
+			if (this.buffImmune.Length != BuffLoader.BuffCount)
+			{
+				Array.Resize(ref this.buffImmune, BuffLoader.BuffCount);
+			}
+			for (int l = 0; l < this.buffImmune.Length; l++)
 			{
 				this.buffImmune[l] = false;
 			}
@@ -11664,9 +_,11 @@
 				this.value = 130f;
 				this.behindTiles = true;
 			}
+			this.displayName = Lang.npcName(this.type, false);
+			NPCLoader.SetupNPC(this);
 			if (flag)
 			{
-				for (int num2 = 0; num2 < 195; num2++)
+				for (int num2 = 0; num2 < this.buffImmune.Length; num2++)
 				{
 					this.buffImmune[num2] = true;
 				}
@@ -11716,7 +_,6 @@
 			this.defDamage = this.damage;
 			this.defDefense = this.defense;
 			this.netID = this.type;
-			this.displayName = Lang.npcName(this.netID, false);
 			if (Main.expertMode)
 			{
 				this.scaleStats();
@@ -11817,6 +_,7 @@
 						num4++;
 					}
 				}
+				//patch file: num4, num5
 				for (int j = 1; j < num4; j++)
 				{
 					num5 += num6;
@@ -12039,6 +_,7 @@
 					this.damage = (int)((double)this.damage * 0.75);
 					break;
 			}
+			NPCLoader.ScaleExpertStats(this, num4, num5);
 			this.defDefense = this.defense;
 			this.defDamage = this.damage;
 			this.life = this.lifeMax;
@@ -12256,6 +_,11 @@
 		}
 
 		public void AI()
+		{
+			NPCLoader.NPCAI(this);
+		}
+
+		public void VanillaAI()
 		{
 			if (this.aiStyle == 0)
 			{
@@ -17128,7 +_,7 @@
 								}
 								else
 								{
-									if (Main.tile[num210, num211 - 1].type == 10)
+									if (TileLoader.OpenDoorID(Main.tile[num210, num211 - 1]) >= 0)
 									{
 										bool flag27 = WorldGen.OpenDoor(num210, num211 - 1, this.direction);
 										if (!flag27)
@@ -19850,6 +_,7 @@
 			else if (this.aiStyle == 7)
 			{
 				bool flag40 = Main.raining;
+				//patch file: flag40
 				if (!Main.dayTime)
 				{
 					flag40 = true;
@@ -19928,6 +_,7 @@
 						num379 += 0.15f;
 						this.defense += 8;
 					}
+					NPCLoader.BuffTownNPC(ref num379, ref this.defense);
 				}
 				if (this.type == 142 && Main.netMode != 1 && !Main.xMas)
 				{
@@ -20000,7 +_,7 @@
 				{
 					NPC.savedStylist = true;
 				}
-				if (this.type >= 0 && this.type < 547 && NPCID.Sets.TownCritter[this.type] && this.target == 255)
+				if (this.type >= 0 && NPCID.Sets.TownCritter[this.type] && this.target == 255)
 				{
 					this.TargetClosest(true);
 					if (this.position.X < Main.player[this.target].position.X)
@@ -20186,7 +_,13 @@
 				{
 					for (int num393 = 0; num393 < 200; num393++)
 					{
-						if (Main.npc[num393].active && !Main.npc[num393].friendly && Main.npc[num393].damage > 0 && Main.npc[num393].Distance(base.Center) < num387 && (this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[num393].netID)))
+						bool? modCanHit = NPCLoader.CanHitNPC(Main.npc[num393], this);
+						if (modCanHit.HasValue && !modCanHit.Value)
+						{
+							continue;
+						}
+						bool canHitVal = modCanHit.HasValue && modCanHit.Value;
+						if (Main.npc[num393].active && !Main.npc[num393].friendly && Main.npc[num393].damage > 0 && Main.npc[num393].Distance(base.Center) < num387 && (this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[num393].netID) || canHitVal))
 						{
 							flag45 = true;
 							float num394 = Main.npc[num393].Center.X - base.Center.X;
@@ -20431,7 +_,7 @@
 						if (this.closeDoor && ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 2) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 2)))
 						{
 							Tile tileSafely = Framing.GetTileSafely(this.doorX, this.doorY);
-							if (tileSafely.type == 11)
+							if (TileLoader.CloseDoorID(tileSafely) >= 0)
 							{
 								bool flag49 = WorldGen.CloseDoor(this.doorX, this.doorY, false);
 								if (flag49)
@@ -20606,7 +_,7 @@
 							Tile tileSafely3 = Framing.GetTileSafely(num399, num400);
 							Tile tileSafely4 = Framing.GetTileSafely(num399, num400 - 1);
 							Tile tileSafely5 = Framing.GetTileSafely(num399, num400 - 2);
-							if (this.townNPC && tileSafely5.nactive() && (tileSafely5.type == 10 || tileSafely5.type == 388) && (Main.rand.Next(10) == 0 || flag40))
+							if (this.townNPC && tileSafely5.nactive() && (TileLoader.OpenDoorID(tileSafely5) >= 0 || tileSafely5.type == 388) && (Main.rand.Next(10) == 0 || flag40))
 							{
 								if (Main.netMode != 1)
 								{
@@ -20943,12 +_,17 @@
 						num406 = 589;
 						scaleFactor7 = 7f;
 						num407 = 22;
+						//patch file: num406, num407, num408, num409, scaleFactor7, maxValue3
 						num408 = 1;
 						num409 = 10;
 						maxValue3 = 1;
 						knockBack = 2f;
 						num410 = 10f;
 					}
+					NPCLoader.TownNPCAttackStrength(this, ref num407, ref knockBack);
+					NPCLoader.TownNPCAttackCooldown(this, ref num409, ref maxValue3);
+					NPCLoader.TownNPCAttackProj(this, ref num406, ref num408);
+					NPCLoader.TownNPCAttackProjSpeed(this, ref scaleFactor7, ref num410, ref num412);
 					if (Main.expertMode)
 					{
 						num407 = (int)((float)num407 * Main.expertNPCDamage);
@@ -21008,7 +_,7 @@
 					int num417 = 0;
 					int maxValue4 = 0;
 					float knockBack2 = 0f;
-					int num418 = 0;
+					float num418 = 0;
 					bool flag56 = false;
 					float num419 = 0f;
 					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
@@ -21126,12 +_,14 @@
 					else if (this.type == 228)
 					{
 						num414 = 267;
+						//patch file: num414, num415, num416, scaleFactor8
 						scaleFactor8 = 14f;
 						num415 = 20;
 						num416 = 1;
 						num417 = 10;
 						maxValue4 = 1;
 						knockBack2 = 3f;
+						//patch file: num417, num418, num419, maxValue4, knockBack2
 						num418 = 6;
 						num419 = 0.4f;
 					}
@@ -21238,6 +_,11 @@
 							num419 = 0.1f;
 						}
 					}
+					NPCLoader.TownNPCAttackStrength(this, ref num415, ref knockBack2);
+					NPCLoader.TownNPCAttackCooldown(this, ref num417, ref maxValue4);
+					NPCLoader.TownNPCAttackProj(this, ref num414, ref num416);
+					NPCLoader.TownNPCAttackProjSpeed(this, ref scaleFactor8, ref num418, ref num419);
+					NPCLoader.TownNPCAttackShoot(this, ref flag56);
 					if (Main.expertMode)
 					{
 						num415 = (int)((float)num415 * Main.expertNPCDamage);
@@ -21348,21 +_,25 @@
 					if (this.type == 54)
 					{
 						num424 = 585;
+						//patch file: num424, scaleFactor9
 						scaleFactor9 = 10f;
 						num425 = 16;
 						num426 = 30;
+						//patch file: num425, num426, num427, maxValue5, knockBack3
 						num427 = 20;
 						maxValue5 = 15;
 						knockBack3 = 2f;
 						num431 = 1f;
 					}
 					else if (this.type == 108)
+					//patch file: num431
 					{
 						num424 = 15;
 						scaleFactor9 = 6f;
 						num425 = 18;
 						num426 = 15;
 						num427 = 15;
+						//patch file: num428
 						maxValue5 = 5;
 						knockBack3 = 3f;
 						num428 = 20f;
@@ -21388,6 +_,11 @@
 						maxValue5 = 1;
 						knockBack3 = 3f;
 					}
+					NPCLoader.TownNPCAttackStrength(this, ref num425, ref knockBack3);
+					NPCLoader.TownNPCAttackCooldown(this, ref num427, ref maxValue5);
+					NPCLoader.TownNPCAttackProj(this, ref num424, ref num426);
+					NPCLoader.TownNPCAttackProjSpeed(this, ref scaleFactor9, ref num428, ref num431);
+					NPCLoader.TownNPCAttackMagic(this, ref num430);
 					if (Main.expertMode)
 					{
 						num425 = (int)((float)num425 * Main.expertNPCDamage);
@@ -21512,11 +_,15 @@
 					else if (this.type == 353)
 					{
 						num441 = 10;
+						//patch file: num440, num441, num443, num444
 						num444 = (num443 = 32);
 						num440 = 15;
 						maxValue6 = 8;
 						num442 = 5f;
 					}
+					NPCLoader.TownNPCAttackStrength(this, ref num441, ref num442);
+					NPCLoader.TownNPCAttackCooldown(this, ref num440, ref maxValue6);
+					NPCLoader.TownNPCAttackSwing(this, ref num443, ref num444);
 					if (Main.expertMode)
 					{
 						num441 = (int)((float)num441 * Main.expertNPCDamage);
@@ -46198,7 +_,7 @@
 
 		public bool UsesPartyHat()
 		{
-			return this.frame.Height > 0 && this.townNPC && BirthdayParty.PartyIsUp && this.type != 441 && this.type != 37;
+			return this.frame.Height > 0 && this.townNPC && BirthdayParty.PartyIsUp && this.type != 441 && this.type != 37 && NPCLoader.UsesPartyHat(this);
 		}
 
 		public PartyHatColor GetPartyHatColor()
@@ -46233,6 +_,11 @@
 				}
 				num = Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type];
 			}
+			NPCLoader.FindFrame(this, num);
+		}
+
+		public void VanillaFindFrame(int num)
+		{
 			int num2 = 0;
 			if (this.aiAction == 0)
 			{
@@ -53833,7 +_,7 @@
 				if (num2 != 1)
 				{
 				}
-				if (Main.tile[x, y].type == 21)
+				if (TileLoader.IsChest(Main.tile[x, y].type))
 				{
 					if (Main.tile[x, y].frameX % 36 != 0)
 					{
@@ -54145,6 +_,10 @@
 				}
 				return;
 				IL_203:
+				if (!NPCLoader.CheckActive(this))
+				{
+					return;
+				}
 				if (this.townNPC)
 				{
 					Rectangle rectangle = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)NPC.townRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)NPC.townRangeY), NPC.townRangeX * 2, NPC.townRangeY * 2);
@@ -54343,6 +_,10 @@
 					this.life = this.lifeMax;
 					this.dontTakeDamage = true;
 					this.netUpdate = true;
+					return;
+				}
+				if (!NPCLoader.CheckDead(this))
+				{
 					return;
 				}
 				NPC.noSpawnCycle = true;
@@ -55011,7 +_,7 @@
 
 		public static void ResetKillCount()
 		{
-			for (int i = 0; i < 547; i++)
+			for (int i = 0; i < NPC.killCount.Length; i++)
 			{
 				NPC.killCount[i] = 0;
 			}
@@ -55041,7 +_,7 @@
 
 		public void NPCLoot()
 		{
-			if (Main.netMode == 1 || this.type >= 547)
+			if (Main.netMode == 1)
 			{
 				return;
 			}
@@ -55166,6 +_,10 @@
 						{
 							num6 = 2897 + num3 - 88;
 						}
+						if (num3 >= NPCID.Count)
+						{
+							num6 = NPCLoader.GetNPC(num3).bannerItem;
+						}
 						Vector2 position = this.position;
 						if (num5 >= 0 && num5 < 255)
 						{
@@ -55184,6 +_,10 @@
 				return;
 			}
 			if (this.SpawnedFromStatue && NPCID.Sets.StatueSpawnedDropRarity[this.type] != -1f && (Main.rand.NextFloat() >= NPCID.Sets.StatueSpawnedDropRarity[this.type] || !this.AnyInteractions()))
+			{
+				return;
+			}
+			if (!NPCLoader.PreNPCLoot(this))
 			{
 				return;
 			}
@@ -55303,7 +_,7 @@
 			if (this.type == 1 && this.ai[1] > 0f)
 			{
 				int num8 = (int)this.ai[1];
-				if (num8 > 0 && num8 < 3797)
+				if (num8 > 0)
 				{
 					int num9 = 1;
 					if (num8 == 8)
@@ -58433,6 +_,7 @@
 				{
 					num73 = 499;
 				}
+				NPCLoader.BossLoot(this, ref name, ref num73);
 				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num73, stack5, false, 0, false, false);
 				int num74 = Main.rand.Next(5) + 5;
 				for (int num75 = 0; num75 < num74; num75++)
@@ -58503,6 +_,7 @@
 					NetMessage.SendData(25, -1, -1, Lang.misc[32], 255, 50f, 255f, 130f, 0, 0, 0);
 				}
 			}
+			NPCLoader.NPCLoot(this);
 			if (this.type != 16 && this.type != 81 && this.type != 121 && Main.rand.Next(6) == 0 && this.lifeMax > 1 && this.damage > 0)
 			{
 				int num76 = (int)Player.FindClosest(this.position, this.width, this.height);
@@ -58705,6 +_,7 @@
 			{
 				num = 3332;
 			}
+			NPCLoader.BossBag(this, ref num);
 			if (num > 0)
 			{
 				if (Main.netMode == 2)
@@ -59049,12 +_,13 @@
 					bool flag9 = false;
 					bool flag10 = false;
 					bool flag11 = false;
-					bool flag12 = NPC.downedPlantBoss && Main.hardMode;
+					bool flag12 = NPC.downedPlantBoss && Main.hardMode; //patch file: flag12
 					if (Main.player[j].active && Main.invasionType > 0 && Main.invasionDelay == 0 && Main.invasionSize > 0 && (double)Main.player[j].position.Y < Main.worldSurface * 16.0 + (double)NPC.sHeight)
 					{
 						int num5 = 3000;
 						if ((double)Main.player[j].position.X > Main.invasionX * 16.0 - (double)num5 && (double)Main.player[j].position.X < Main.invasionX * 16.0 + (double)num5)
 						{
+							//patch file: flag4
 							flag4 = true;
 						}
 						else if (Main.invasionX >= (double)(Main.maxTilesX / 2 - 5) && Main.invasionX <= (double)(Main.maxTilesX / 2 + 5))
@@ -59340,6 +_,7 @@
 						else if (Main.player[j].townNPCs >= 3f)
 						{
 							flag3 = true;
+							//patch file: flag3, flag10
 							if (!Main.expertMode || Main.rand.Next(30) != 0)
 							{
 								flag10 = true;
@@ -59347,6 +_,7 @@
 							NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
 						}
 					}
+					NPCLoader.EditSpawnRate(Main.player[j], ref NPC.spawnRate, ref NPC.maxSpawns);
 					int num6 = (int)(Main.player[j].position.X + (float)(Main.player[j].width / 2)) / 16;
 					int num7 = (int)(Main.player[j].position.Y + (float)(Main.player[j].height / 2)) / 16;
 					if (Main.wallHouse[(int)Main.tile[num6, num7].wall])
@@ -59355,6 +_,7 @@
 					}
 					if (Main.tile[num6, num7].wall == 87)
 					{
+						//patch file: flag2
 						flag2 = true;
 					}
 					bool flag14 = false;
@@ -59388,6 +_,8 @@
 							NPC.safeRangeX += (int)((double)(NPC.sWidth / 16) * 0.5 / (double)num8);
 							NPC.safeRangeY += (int)((double)(NPC.sHeight / 16) * 0.5 / (double)num8);
 						}
+						NPCLoader.EditSpawnRange(Main.player[j], ref NPC.spawnRangeX, ref NPC.spawnRangeY,
+							ref NPC.safeRangeX, ref NPC.safeRangeY);
 						int num9 = (int)(Main.player[j].position.X / 16f) - NPC.spawnRangeX;
 						int num10 = (int)(Main.player[j].position.X / 16f) + NPC.spawnRangeX;
 						int num11 = (int)(Main.player[j].position.Y / 16f) - NPC.spawnRangeY;
@@ -59507,6 +_,7 @@
 								}
 								if (num >= num13 && num <= num14)
 								{
+									//patch file(?): flag14
 									flag14 = true;
 									goto IL_1504;
 								}
@@ -59538,6 +_,7 @@
 							}
 						}
 					}
+					NPCSpawnInfo spawnInfo = new NPCSpawnInfo();
 					if (flag13)
 					{
 						if (Main.player[j].ZoneDungeon && (!Main.tileDungeon[(int)Main.tile[num, num2].type] || Main.tile[num, num2 - 1].wall == 0))
@@ -59546,10 +_,12 @@
 						}
 						if (Main.tile[num, num2 - 1].liquid > 0 && Main.tile[num, num2 - 2].liquid > 0 && !Main.tile[num, num2 - 1].lava())
 						{
+							//patch file: flag6
 							if (Main.tile[num, num2 - 1].honey())
 							{
 								flag6 = true;
 							}
+							//patch file: flag5
 							else
 							{
 								flag5 = true;
@@ -59557,12 +_,15 @@
 						}
 						int num25 = (int)Main.player[j].Center.X / 16;
 						int num26 = (int)(Main.player[j].Bottom.Y + 8f) / 16;
+						spawnInfo.playerFloorX = num25;
+						spawnInfo.playerFloorY = num26;
 						if (Main.tile[num, num2].type == 367)
 						{
 							flag8 = true;
 						}
 						else if (Main.tile[num, num2].type == 368)
 						{
+							//patch file: flag7
 							flag7 = true;
 						}
 						else if (Main.tile[num25, num26].type == 367)
@@ -59662,6 +_,7 @@
 										{
 											if (Main.tile[num36, num37].wall == 62)
 											{
+												//patch file: flag9
 												flag9 = true;
 											}
 										}
@@ -59691,6 +_,7 @@
 										{
 											if (WallID.Sets.Conversion.Sandstone[(int)Main.tile[num41, num42].wall] || WallID.Sets.Conversion.HardenedSand[(int)Main.tile[num41, num42].wall])
 											{
+												//patch file: flag11
 												flag11 = true;
 											}
 										}
@@ -59707,8 +_,33 @@
 								}
 							}
 						}
+						spawnInfo.spawnTileX = num;
+						spawnInfo.spawnTileY = num2;
+						spawnInfo.player = Main.player[j];
+						spawnInfo.sky = flag;
+						spawnInfo.lihzahrd = flag2;
+						spawnInfo.playerSafe = flag3;
+						spawnInfo.invasion = flag4;
+						spawnInfo.water = flag5;
+						spawnInfo.granite = flag7;
+						spawnInfo.marble = flag8;
+						spawnInfo.spiderCave = flag9;
+						spawnInfo.playerInTown = flag10;
+						spawnInfo.desertCave = flag11;
+						spawnInfo.planteraDefeated = flag12;
+						spawnInfo.safeRangeX = flag14;
 						int num45 = (int)Main.tile[num, num2].type;
 						int num46 = 200;
+						int? spawnChoice = NPCLoader.ChooseSpawn(spawnInfo);
+						if (!spawnChoice.HasValue)
+						{
+							return;
+						}
+						int spawn = spawnChoice.Value;
+						if (spawn != 0)
+						{
+							goto endVanillaSpawn;
+						}
 						if (Main.player[j].ZoneTowerNebula)
 						{
 							bool flag15 = true;
@@ -62742,6 +_,11 @@
 						{
 							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 49, 0, 0f, 0f, 0f, 0f, 255);
 						}
+						endVanillaSpawn: //this ugly code is just to minimize the diff file
+						if (spawn != 0)
+						{
+							num46 = NPCLoader.SpawnNPC(spawn, num, num2);
+						}
 						if (Main.npc[num46].type == 1 && Main.rand.Next(180) == 0)
 						{
 							Main.npc[num46].SetDefaults("Pinky");
@@ -63538,14 +_,17 @@
 			{
 				num2 = 0;
 			}
-			num = Main.CalculateDamage((int)num, num2);
-			if (crit)
-			{
-				num *= 2.0;
-			}
-			if (this.takenDamageMultiplier > 1f)
-			{
-				num *= (double)this.takenDamageMultiplier;
+			if (NPCLoader.StrikeNPC(this, ref num, num2, ref knockBack, hitDirection, ref crit))
+			{
+				num = Main.CalculateDamage((int)num, num2);
+				if (crit)
+				{
+					num *= 2.0;
+				}
+				if (this.takenDamageMultiplier > 1f)
+				{
+					num *= (double)this.takenDamageMultiplier;
+				}
 			}
 			if ((this.takenDamageMultiplier > 1f || Damage != 9999) && this.lifeMax > 1)
 			{
@@ -63795,6 +_,11 @@
 		}
 
 		public void HitEffect(int hitDirection = 0, double dmg = 10.0)
+		{
+			NPCLoader.HitEffect(this, hitDirection, dmg);
+		}
+
+		public void VanillaHitEffect(int hitDirection = 0, double dmg = 10.0)
 		{
 			if (!this.active)
 			{
@@ -71122,7 +_,10 @@
 			{
 				if (this.buffType[i] == type)
 				{
-					if (this.buffTime[i] < time)
+					if (BuffLoader.ReApply(type, this, time, i))
+					{
+					}
+					else if (this.buffTime[i] < time)
 					{
 						this.buffTime[i] = time;
 					}
@@ -71647,6 +_,7 @@
 				this.javelined = false;
 				this.celled = false;
 				this.dryadBane = false;
+				NPCLoader.ResetEffects(this);
 				for (int k = 0; k < 5; k++)
 				{
 					if (this.buffType[k] > 0 && this.buffTime[k] > 0)
@@ -71728,6 +_,7 @@
 						{
 							this.daybreak = true;
 						}
+						BuffLoader.Update(this.buffType[k], this, ref k);
 					}
 				}
 				if (this.soulDrain)
@@ -71973,6 +_,7 @@
 							num19 = 5;
 						}
 					}
+					NPCLoader.UpdateLifeRegen(this, ref num19);
 					if (this.lifeRegen <= -240 && num19 < 2)
 					{
 						num19 = 2;
@@ -72282,22 +_,30 @@
 							if (Main.npc[num39].active && !Main.npc[num39].friendly && Main.npc[num39].damage > 0)
 							{
 								Rectangle rectangle2 = new Rectangle((int)Main.npc[num39].position.X, (int)Main.npc[num39].position.Y, Main.npc[num39].width, Main.npc[num39].height);
-								if (rectangle.Intersects(rectangle2) && (this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[num39].netID)))
+								bool? modCanHit = NPCLoader.CanHitNPC(Main.npc[num39], this);
+								if (modCanHit.HasValue && !modCanHit.Value)
+								{
+									continue;
+								}
+								if (rectangle.Intersects(rectangle2) && ((modCanHit.HasValue && modCanHit.Value) || this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[num39].netID)))
 								{
 									int num40 = Main.npc[num39].damage;
-									int num41 = 6;
+									float num41 = 6;
 									int num42 = 1;
 									if (Main.npc[num39].position.X + (float)(Main.npc[num39].width / 2) > this.position.X + (float)(this.width / 2))
 									{
 										num42 = -1;
 									}
-									double num43 = Main.npc[i].StrikeNPCNoInteraction(num40, (float)num41, num42, false, false, false);
+									bool crit = false;
+									NPCLoader.ModifyHitNPC(Main.npc[num39], this, ref num40, ref num41, ref crit);
+									double num43 = Main.npc[i].StrikeNPCNoInteraction(num40, (float)num41, num42, crit, false, false);
 									if (Main.netMode != 0)
 									{
-										NetMessage.SendData(28, -1, -1, "", i, (float)num40, (float)num41, (float)num42, 0, 0, 0);
+										NetMessage.SendData(28, -1, -1, "", i, (float)num40, (float)num41, (float)num42, crit ? 1 : 0, 0, 0);
 									}
 									this.netUpdate = true;
 									this.immune[255] = 30;
+									NPCLoader.OnHitNPC(Main.npc[num39], this, (int)num43, num41, crit);
 									if (this.dryadWard)
 									{
 										num40 = (int)num43 / 3;
@@ -73255,6 +_,11 @@
 
 		public Color GetAlpha(Color newColor)
 		{
+			Color? modColor = NPCLoader.GetAlpha(this, newColor);
+			if (modColor.HasValue)
+			{
+				return modColor.Value;
+			}
 			float num = (float)(255 - this.alpha) / 255f;
 			int num2 = (int)((float)newColor.R * num);
 			int num3 = (int)((float)newColor.G * num);
@@ -75013,6 +_,7 @@
 					result = Lang.dialog(Main.rand.Next(364, 370), false);
 				}
 			}
+			NPCLoader.GetChat(this, ref result);
 			return result;
 		}
 

